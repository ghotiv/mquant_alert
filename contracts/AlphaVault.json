{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feesFromPool0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feesFromPool1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feesToProtocol0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feesToProtocol1",
          "type": "uint256"
        }
      ],
      "name": "CollectFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "Snapshot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accruedProtocolFees0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accruedProtocolFees1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseLower",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseUpper",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "collectProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0Desired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Desired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0Min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Min",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        },
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        }
      ],
      "name": "emergencyBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "total0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "total1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitLower",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitUpper",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_baseLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_baseUpper",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_bidLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_bidUpper",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_askLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_askUpper",
          "type": "int24"
        }
      ],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "setStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3MintCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0Min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Min",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/Math.sol",
    "1": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "11": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
    "12": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
    "13": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
    "14": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
    "15": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
    "16": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolState.sol",
    "17": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FixedPoint96.sol",
    "18": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FullMath.sol",
    "19": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
    "2": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "20": "Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/LiquidityAmounts.sol",
    "21": "Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/PositionKey.sol",
    "23": "contracts/AlphaVault.sol",
    "27": "interfaces/IVault.sol",
    "3": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "6": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "7": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
    "8": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
    "9": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol"
  },
  "ast": {
    "absolutePath": "contracts/AlphaVault.sol",
    "exportedSymbols": {
      "Address": [
        5952
      ],
      "AlphaVault": [
        2169
      ],
      "Context": [
        5656
      ],
      "ERC20": [
        4445
      ],
      "FixedPoint96": [
        5962
      ],
      "FullMath": [
        6135
      ],
      "IERC20": [
        4523
      ],
      "IUniswapV3MintCallback": [
        4790
      ],
      "IUniswapV3Pool": [
        2979
      ],
      "IUniswapV3PoolActions": [
        5309
      ],
      "IUniswapV3PoolDerivedState": [
        5340
      ],
      "IUniswapV3PoolEvents": [
        5459
      ],
      "IUniswapV3PoolImmutables": [
        5499
      ],
      "IUniswapV3PoolOwnerActions": [
        5525
      ],
      "IUniswapV3PoolState": [
        5633
      ],
      "IVault": [
        5199
      ],
      "LiquidityAmounts": [
        5130
      ],
      "Math": [
        3587
      ],
      "PositionKey": [
        5155
      ],
      "ReentrancyGuard": [
        4776
      ],
      "SafeERC20": [
        4736
      ],
      "SafeMath": [
        3942
      ],
      "TickMath": [
        3514
      ]
    },
    "id": 2170,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 459,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:22:23"
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/Math.sol",
        "file": "@openzeppelin/contracts/math/Math.sol",
        "id": 460,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 3588,
        "src": "63:47:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 461,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 3943,
        "src": "111:51:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 462,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 4446,
        "src": "163:55:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 463,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 4524,
        "src": "219:56:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 464,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 4737,
        "src": "276:59:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "id": 465,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 4777,
        "src": "336:59:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "id": 466,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 4791,
        "src": "396:83:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "id": 467,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 2980,
        "src": "480:66:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
        "file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
        "id": 468,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 3515,
        "src": "547:59:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/LiquidityAmounts.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/LiquidityAmounts.sol",
        "id": 469,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 5131,
        "src": "607:72:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/PositionKey.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/PositionKey.sol",
        "id": 470,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 5156,
        "src": "680:67:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 471,
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 5200,
        "src": "749:34:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 473,
              "name": "IVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5199,
              "src": "899:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$5199",
                "typeString": "contract IVault"
              }
            },
            "id": 474,
            "nodeType": "InheritanceSpecifier",
            "src": "899:6:23"
          },
          {
            "baseName": {
              "id": 475,
              "name": "IUniswapV3MintCallback",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4790,
              "src": "907:22:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3MintCallback_$4790",
                "typeString": "contract IUniswapV3MintCallback"
              }
            },
            "id": 476,
            "nodeType": "InheritanceSpecifier",
            "src": "907:22:23"
          },
          {
            "baseName": {
              "id": 477,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4445,
              "src": "931:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4445",
                "typeString": "contract ERC20"
              }
            },
            "id": 478,
            "nodeType": "InheritanceSpecifier",
            "src": "931:5:23"
          },
          {
            "baseName": {
              "id": 479,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4776,
              "src": "938:15:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$4776",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 480,
            "nodeType": "InheritanceSpecifier",
            "src": "938:15:23"
          }
        ],
        "contractDependencies": [
          4445,
          4523,
          4776,
          4790,
          5199,
          5656
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 472,
          "nodeType": "StructuredDocumentation",
          "src": "785:90:23",
          "text": " @title   Alpha Vault\n @notice  A vault that provides liquidity on Uniswap V3."
        },
        "fullyImplemented": true,
        "id": 2169,
        "linearizedBaseContracts": [
          2169,
          4776,
          4445,
          4523,
          5656,
          4790,
          5199
        ],
        "name": "AlphaVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 483,
            "libraryName": {
              "id": 481,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4736,
              "src": "966:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$4736",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "960:27:23",
            "typeName": {
              "id": 482,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4523,
              "src": "980:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4523",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 486,
            "libraryName": {
              "id": 484,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3942,
              "src": "998:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3942",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "992:27:23",
            "typeName": {
              "id": 485,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1011:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "id": 498,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "1048:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 490,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "1080:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 492,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "1108:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 494,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "1132:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 496,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "1157:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1038:140:23"
            },
            "src": "1025:154:23"
          },
          {
            "anonymous": false,
            "id": 510,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "1209:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 502,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "1241:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "1269:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "1293:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "1318:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1199:140:23"
            },
            "src": "1185:155:23"
          },
          {
            "anonymous": false,
            "id": 520,
            "name": "CollectFees",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feesFromPool0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "1373:21:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feesFromPool1",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "1404:21:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feesToProtocol0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "1435:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feesToProtocol1",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "1468:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1363:134:23"
            },
            "src": "1346:152:23"
          },
          {
            "anonymous": false,
            "id": 530,
            "name": "Snapshot",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "1519:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1519:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 524,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalAmount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "1531:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 526,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalAmount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "1553:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "1575:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1518:77:23"
            },
            "src": "1504:92:23"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 532,
            "mutability": "mutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1602:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
              "typeString": "contract IUniswapV3Pool"
            },
            "typeName": {
              "id": 531,
              "name": "IUniswapV3Pool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2979,
              "src": "1602:14:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                "typeString": "contract IUniswapV3Pool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0dfe1681",
            "id": 534,
            "mutability": "immutable",
            "name": "token0",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1634:30:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4523",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 533,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4523,
              "src": "1634:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4523",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d21220a7",
            "id": 536,
            "mutability": "immutable",
            "name": "token1",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1670:30:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4523",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 535,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4523,
              "src": "1670:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4523",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0c93a7c",
            "id": 538,
            "mutability": "immutable",
            "name": "tickSpacing",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1706:34:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 537,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1706:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b0e21e8a",
            "id": 540,
            "mutability": "mutable",
            "name": "protocolFee",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1747:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 539,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1747:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ab4d052",
            "id": 542,
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1779:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 541,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1779:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8c62e76",
            "id": 544,
            "mutability": "mutable",
            "name": "strategy",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1814:23:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 543,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1814:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5aa6e675",
            "id": 546,
            "mutability": "mutable",
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1843:25:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 545,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1843:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f39c38a0",
            "id": 548,
            "mutability": "mutable",
            "name": "pendingGovernance",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1874:32:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 547,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1874:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b3f05b97",
            "id": 550,
            "mutability": "mutable",
            "name": "finalized",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1912:21:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 549,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1912:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fa082743",
            "id": 552,
            "mutability": "mutable",
            "name": "baseLower",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1940:22:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 551,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1940:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "888a9134",
            "id": 554,
            "mutability": "mutable",
            "name": "baseUpper",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1968:22:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 553,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1968:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "51e87af7",
            "id": 556,
            "mutability": "mutable",
            "name": "limitLower",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "1996:23:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 555,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1996:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0f35bcac",
            "id": 558,
            "mutability": "mutable",
            "name": "limitUpper",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "2025:23:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 557,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "2025:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eae989a2",
            "id": 560,
            "mutability": "mutable",
            "name": "accruedProtocolFees0",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "2054:35:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 559,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2054:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a00fa77f",
            "id": 562,
            "mutability": "mutable",
            "name": "accruedProtocolFees1",
            "nodeType": "VariableDeclaration",
            "scope": 2169,
            "src": "2095:35:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 561,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2095:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 624,
              "nodeType": "Block",
              "src": "2549:332:23",
              "statements": [
                {
                  "expression": {
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 576,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "2559:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 578,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "2581:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 577,
                        "name": "IUniswapV3Pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2979,
                        "src": "2566:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$2979_$",
                          "typeString": "type(contract IUniswapV3Pool)"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2566:21:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "src": "2559:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:28:23"
                },
                {
                  "expression": {
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 582,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "2597:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4523",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 584,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "2613:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5474,
                            "src": "2613:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2613:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 583,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4523,
                        "src": "2606:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4523_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2606:21:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4523",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2597:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4523",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "2597:30:23"
                },
                {
                  "expression": {
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 590,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "2637:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4523",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 592,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "2653:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5480,
                            "src": "2653:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2653:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 591,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4523,
                        "src": "2646:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4523_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2646:21:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4523",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2637:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4523",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "2637:30:23"
                },
                {
                  "expression": {
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 598,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "2677:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 599,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "2691:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tickSpacing",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5492,
                        "src": "2691:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                          "typeString": "function () view external returns (int24)"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2691:18:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2677:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "2677:32:23"
                },
                {
                  "expression": {
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 604,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "2720:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 605,
                      "name": "_protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 567,
                      "src": "2734:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2720:26:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:26:23"
                },
                {
                  "expression": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 608,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 542,
                      "src": "2756:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 609,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 569,
                      "src": "2773:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2756:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "2756:32:23"
                },
                {
                  "expression": {
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 612,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "2798:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 613,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2811:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2811:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2798:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 616,
                  "nodeType": "ExpressionStatement",
                  "src": "2798:23:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 618,
                          "name": "_protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 567,
                          "src": "2840:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2855:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "2840:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f746f636f6c466565",
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2860:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                          "typeString": "literal_string \"protocolFee\""
                        },
                        "value": "protocolFee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                          "typeString": "literal_string \"protocolFee\""
                        }
                      ],
                      "id": 617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2832:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2832:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "2832:42:23"
                }
              ]
            },
            "documentation": {
              "id": 563,
              "nodeType": "StructuredDocumentation",
              "src": "2137:276:23",
              "text": " @dev After deploying, strategy needs to be set via `setStrategy()`\n @param _pool Underlying Uniswap V3 pool\n @param _protocolFee Protocol fee expressed as multiple of 1e-6\n @param _maxTotalSupply Pause deposits if total supply exceeds this"
            },
            "id": 625,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "416c706861205661756c74",
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2528:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_107b03ce1beb9ea726be4672a1aa693051b9a617ee312b00af5e036797741d86",
                      "typeString": "literal_string \"Alpha Vault\""
                    },
                    "value": "Alpha Vault"
                  },
                  {
                    "hexValue": "4156",
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2543:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4ab1115903bb64bbbf0a0f611087a6321ff0c48d2c6b3b89cc55536163ccb7b1",
                      "typeString": "literal_string \"AV\""
                    },
                    "value": "AV"
                  }
                ],
                "id": 574,
                "modifierName": {
                  "id": 571,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4445,
                  "src": "2522:5:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$4445_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2522:26:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "2439:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2439:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "_protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "2462:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "2492:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2492:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2429:92:23"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2549:0:23"
            },
            "scope": 2169,
            "src": "2418:463:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5176
            ],
            "body": {
              "id": 793,
              "nodeType": "Block",
              "src": "4043:1132:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 649,
                            "name": "amount0Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "4061:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4078:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4061:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 652,
                            "name": "amount1Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "4083:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4100:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4083:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4061:40:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e743044657369726564206f7220616d6f756e743144657369726564",
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4103:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71d3c6311517a09fc5373cdb0e09405ca4ad5deb8d1023014ac31914a4906b20",
                          "typeString": "literal_string \"amount0Desired or amount1Desired\""
                        },
                        "value": "amount0Desired or amount1Desired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71d3c6311517a09fc5373cdb0e09405ca4ad5deb8d1023014ac31914a4906b20",
                          "typeString": "literal_string \"amount0Desired or amount1Desired\""
                        }
                      ],
                      "id": 648,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4053:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4053:85:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "4053:85:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 660,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "4156:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4170:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4162:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 661,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4162:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4162:10:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "4156:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 666,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "4176:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 669,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4190:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                  "typeString": "contract AlphaVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                  "typeString": "contract AlphaVault"
                                }
                              ],
                              "id": 668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4182:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 667,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4182:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4182:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4176:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4156:39:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f",
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4197:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                          "typeString": "literal_string \"to\""
                        },
                        "value": "to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                          "typeString": "literal_string \"to\""
                        }
                      ],
                      "id": 659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4148:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4148:54:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "4148:54:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 677,
                          "name": "baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 552,
                          "src": "4314:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 678,
                          "name": "baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 554,
                          "src": "4325:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 676,
                        "name": "_positionLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "4295:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$",
                          "typeString": "function (int24,int24) view returns (uint128)"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4295:40:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4338:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4295:44:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 691,
                  "nodeType": "IfStatement",
                  "src": "4291:109:23",
                  "trueBody": {
                    "id": 690,
                    "nodeType": "Block",
                    "src": "4341:59:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 685,
                              "name": "baseLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "4365:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 686,
                              "name": "baseUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "4376:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4387:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 682,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "4355:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5272,
                            "src": "4355:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                            }
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4355:34:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 689,
                        "nodeType": "ExpressionStatement",
                        "src": "4355:34:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 693,
                          "name": "limitLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 556,
                          "src": "4432:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 694,
                          "name": "limitUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 558,
                          "src": "4444:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 692,
                        "name": "_positionLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "4413:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$",
                          "typeString": "function (int24,int24) view returns (uint128)"
                        }
                      },
                      "id": 695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4413:42:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4458:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4413:46:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 707,
                  "nodeType": "IfStatement",
                  "src": "4409:113:23",
                  "trueBody": {
                    "id": 706,
                    "nodeType": "Block",
                    "src": "4461:61:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 701,
                              "name": "limitLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 556,
                              "src": "4485:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 702,
                              "name": "limitUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 558,
                              "src": "4497:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4509:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 698,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "4475:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5272,
                            "src": "4475:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4475:36:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 705,
                        "nodeType": "ExpressionStatement",
                        "src": "4475:36:23"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 708,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "4533:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 709,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 644,
                          "src": "4541:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 710,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 646,
                          "src": "4550:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 711,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4532:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 713,
                          "name": "amount0Desired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 628,
                          "src": "4583:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 714,
                          "name": "amount1Desired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 630,
                          "src": "4599:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 712,
                        "name": "_calcSharesAndAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "4561:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4561:53:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "4532:82:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "4532:82:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 719,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "4632:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4641:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4632:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736861726573",
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4644:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                          "typeString": "literal_string \"shares\""
                        },
                        "value": "shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                          "typeString": "literal_string \"shares\""
                        }
                      ],
                      "id": 718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4624:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4624:29:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "4624:29:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 726,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 644,
                          "src": "4671:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 727,
                          "name": "amount0Min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 632,
                          "src": "4682:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4671:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74304d696e",
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4694:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                          "typeString": "literal_string \"amount0Min\""
                        },
                        "value": "amount0Min"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                          "typeString": "literal_string \"amount0Min\""
                        }
                      ],
                      "id": 725,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4663:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4663:44:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "4663:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 733,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 646,
                          "src": "4725:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 734,
                          "name": "amount1Min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 634,
                          "src": "4736:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4725:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74314d696e",
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4748:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                          "typeString": "literal_string \"amount1Min\""
                        },
                        "value": "amount1Min"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                          "typeString": "literal_string \"amount1Min\""
                        }
                      ],
                      "id": 732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4717:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4717:44:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "4717:44:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 739,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "4814:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4824:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4814:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 754,
                  "nodeType": "IfStatement",
                  "src": "4810:76:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 745,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4851:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4851:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 749,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4871:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                "typeString": "contract AlphaVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                "typeString": "contract AlphaVault"
                              }
                            ],
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4863:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 747,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4863:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4863:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 751,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 644,
                          "src": "4878:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 742,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "4827:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4582,
                        "src": "4827:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                          "typeString": "function (contract IERC20,address,address,uint256)"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4827:59:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 753,
                    "nodeType": "ExpressionStatement",
                    "src": "4827:59:23"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 755,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "4900:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4910:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4900:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 770,
                  "nodeType": "IfStatement",
                  "src": "4896:76:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 761,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4937:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4937:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 765,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4957:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                "typeString": "contract AlphaVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                "typeString": "contract AlphaVault"
                              }
                            ],
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4949:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 763,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4949:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4949:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 767,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 646,
                          "src": "4964:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 758,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "4913:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4582,
                        "src": "4913:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                          "typeString": "function (contract IERC20,address,address,uint256)"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4913:59:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 769,
                    "nodeType": "ExpressionStatement",
                    "src": "4913:59:23"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 772,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "5025:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 773,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "5029:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 771,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4321,
                      "src": "5019:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5019:17:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "5019:17:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 777,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5059:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5059:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 779,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "5071:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 780,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "5075:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 781,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "5083:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 782,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "5092:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 776,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "5051:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5051:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 784,
                  "nodeType": "EmitStatement",
                  "src": "5046:54:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 786,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4031,
                            "src": "5118:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5118:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 788,
                          "name": "maxTotalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "5135:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5118:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d6178546f74616c537570706c79",
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5151:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1d326ab919e08f08d226da9d9bb7a4aae45db082594b3c99f595a5eec6dbed",
                          "typeString": "literal_string \"maxTotalSupply\""
                        },
                        "value": "maxTotalSupply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1d326ab919e08f08d226da9d9bb7a4aae45db082594b3c99f595a5eec6dbed",
                          "typeString": "literal_string \"maxTotalSupply\""
                        }
                      ],
                      "id": 785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5110:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5110:58:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "5110:58:23"
                }
              ]
            },
            "documentation": {
              "id": 626,
              "nodeType": "StructuredDocumentation",
              "src": "2887:816:23",
              "text": " @notice Deposits tokens in proportion to the vault's current holdings.\n @dev These tokens sit in the vault and are not used for liquidity on\n Uniswap until the next rebalance. Also note it's not necessary to check\n if user manipulated price to deposit cheaper, as the value of range\n orders can only by manipulated higher.\n @param amount0Desired Max amount of token0 to deposit\n @param amount1Desired Max amount of token1 to deposit\n @param amount0Min Revert if resulting `amount0` is less than this\n @param amount1Min Revert if resulting `amount1` is less than this\n @param to Recipient of shares\n @return shares Number of shares minted\n @return amount0 Amount of token0 deposited\n @return amount1 Amount of token1 deposited"
            },
            "functionSelector": "365d0ed7",
            "id": 794,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 640,
                "modifierName": {
                  "id": 639,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4775,
                  "src": "3913:12:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3913:12:23"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 638,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3896:8:23"
            },
            "parameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "amount0Desired",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "3734:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 630,
                  "mutability": "mutable",
                  "name": "amount1Desired",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "3766:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3766:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "amount0Min",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "3798:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3798:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "amount1Min",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "3826:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3826:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "3854:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3854:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3724:146:23"
            },
            "returnParameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "3956:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3956:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "3984:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3984:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "4013:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4013:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3942:96:23"
            },
            "scope": 2169,
            "src": "3708:1467:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 953,
              "nodeType": "Block",
              "src": "5621:1087:23",
              "statements": [
                {
                  "assignments": [
                    808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 808,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 953,
                      "src": "5631:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5631:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 809,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4031,
                      "src": "5653:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5653:13:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5631:35:23"
                },
                {
                  "assignments": [
                    813,
                    815
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 813,
                      "mutability": "mutable",
                      "name": "total0",
                      "nodeType": "VariableDeclaration",
                      "scope": 953,
                      "src": "5677:14:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 812,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5677:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 815,
                      "mutability": "mutable",
                      "name": "total1",
                      "nodeType": "VariableDeclaration",
                      "scope": 953,
                      "src": "5693:14:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 814,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5693:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 818,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 816,
                      "name": "getTotalAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "5711:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view returns (uint256,uint256)"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5711:17:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5676:52:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 820,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "5799:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5814:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5799:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 823,
                              "name": "total0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "5819:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5828:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5819:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5799:30:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 827,
                            "name": "total1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "5833:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5842:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5833:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5799:44:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 819,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "5792:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5792:52:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 832,
                  "nodeType": "ExpressionStatement",
                  "src": "5792:52:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 833,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "5859:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5874:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5859:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 853,
                        "name": "total0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "6086:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6096:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6086:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 871,
                          "name": "total1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "6217:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6227:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6217:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 949,
                        "nodeType": "Block",
                        "src": "6344:358:23",
                        "statements": [
                          {
                            "assignments": [
                              890
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 890,
                                "mutability": "mutable",
                                "name": "cross",
                                "nodeType": "VariableDeclaration",
                                "scope": 949,
                                "src": "6358:13:23",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 889,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6358:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 902,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 895,
                                      "name": "total1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 815,
                                      "src": "6402:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 893,
                                      "name": "amount0Desired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 796,
                                      "src": "6383:14:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 894,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3825,
                                    "src": "6383:18:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6383:26:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 899,
                                      "name": "total0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 813,
                                      "src": "6430:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 897,
                                      "name": "amount1Desired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 798,
                                      "src": "6411:14:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 898,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3825,
                                    "src": "6411:18:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 900,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6411:26:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 891,
                                  "name": "Math",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3587,
                                  "src": "6374:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Math_$3587_$",
                                    "typeString": "type(library Math)"
                                  }
                                },
                                "id": 892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "min",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3553,
                                "src": "6374:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6374:64:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "6358:80:23"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 904,
                                    "name": "cross",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 890,
                                    "src": "6460:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 905,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6468:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6460:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "63726f7373",
                                  "id": 907,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6471:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b7b16ad9ab1bdad53bb85b6df7f84773941bf7861c37b33336b827a1a37db175",
                                    "typeString": "literal_string \"cross\""
                                  },
                                  "value": "cross"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_b7b16ad9ab1bdad53bb85b6df7f84773941bf7861c37b33336b827a1a37db175",
                                    "typeString": "literal_string \"cross\""
                                  }
                                ],
                                "id": 903,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "6452:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6452:27:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 909,
                            "nodeType": "ExpressionStatement",
                            "src": "6452:27:23"
                          },
                          {
                            "expression": {
                              "id": 921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 910,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 803,
                                "src": "6526:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 919,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6565:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 916,
                                        "name": "total1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 815,
                                        "src": "6553:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "31",
                                            "id": 913,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6546:1:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "expression": {
                                            "id": 911,
                                            "name": "cross",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 890,
                                            "src": "6536:5:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 912,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sub",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3791,
                                          "src": "6536:9:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 914,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6536:12:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 915,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3847,
                                      "src": "6536:16:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 917,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6536:24:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 918,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3769,
                                  "src": "6536:28:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6536:31:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6526:41:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 922,
                            "nodeType": "ExpressionStatement",
                            "src": "6526:41:23"
                          },
                          {
                            "expression": {
                              "id": 934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 923,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 805,
                                "src": "6581:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6620:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 929,
                                        "name": "total0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 813,
                                        "src": "6608:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "31",
                                            "id": 926,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6601:1:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "expression": {
                                            "id": 924,
                                            "name": "cross",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 890,
                                            "src": "6591:5:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 925,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sub",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3791,
                                          "src": "6591:9:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 927,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6591:12:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 928,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3847,
                                      "src": "6591:16:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 930,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6591:24:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3769,
                                  "src": "6591:28:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6591:31:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6581:41:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 935,
                            "nodeType": "ExpressionStatement",
                            "src": "6581:41:23"
                          },
                          {
                            "expression": {
                              "id": 947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 936,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 801,
                                "src": "6636:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 945,
                                    "name": "total1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 815,
                                    "src": "6684:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 942,
                                        "name": "total0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 813,
                                        "src": "6672:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 939,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 808,
                                            "src": "6655:11:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 937,
                                            "name": "cross",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 890,
                                            "src": "6645:5:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 938,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3825,
                                          "src": "6645:9:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 940,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6645:22:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 941,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3847,
                                      "src": "6645:26:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 943,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6645:34:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 944,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3847,
                                  "src": "6645:38:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6645:46:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6636:55:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 948,
                            "nodeType": "ExpressionStatement",
                            "src": "6636:55:23"
                          }
                        ]
                      },
                      "id": 950,
                      "nodeType": "IfStatement",
                      "src": "6213:489:23",
                      "trueBody": {
                        "id": 888,
                        "nodeType": "Block",
                        "src": "6230:108:23",
                        "statements": [
                          {
                            "expression": {
                              "id": 876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 874,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 803,
                                "src": "6244:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 875,
                                "name": "amount0Desired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 796,
                                "src": "6254:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6244:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 877,
                            "nodeType": "ExpressionStatement",
                            "src": "6244:24:23"
                          },
                          {
                            "expression": {
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 878,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 801,
                                "src": "6282:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 884,
                                    "name": "total0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "6320:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 881,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 808,
                                        "src": "6303:11:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 879,
                                        "name": "amount0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 803,
                                        "src": "6291:7:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 880,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3825,
                                      "src": "6291:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 882,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6291:24:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 883,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3847,
                                  "src": "6291:28:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6291:36:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6282:45:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 887,
                            "nodeType": "ExpressionStatement",
                            "src": "6282:45:23"
                          }
                        ]
                      }
                    },
                    "id": 951,
                    "nodeType": "IfStatement",
                    "src": "6082:620:23",
                    "trueBody": {
                      "id": 870,
                      "nodeType": "Block",
                      "src": "6099:108:23",
                      "statements": [
                        {
                          "expression": {
                            "id": 858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 856,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "6113:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 857,
                              "name": "amount1Desired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 798,
                              "src": "6123:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6113:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 859,
                          "nodeType": "ExpressionStatement",
                          "src": "6113:24:23"
                        },
                        {
                          "expression": {
                            "id": 868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 860,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 801,
                              "src": "6151:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 866,
                                  "name": "total1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "6189:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 863,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 808,
                                      "src": "6172:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 861,
                                      "name": "amount1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 805,
                                      "src": "6160:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 862,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3825,
                                    "src": "6160:11:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6160:24:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3847,
                                "src": "6160:28:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6160:36:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6151:45:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 869,
                          "nodeType": "ExpressionStatement",
                          "src": "6151:45:23"
                        }
                      ]
                    }
                  },
                  "id": 952,
                  "nodeType": "IfStatement",
                  "src": "5855:847:23",
                  "trueBody": {
                    "id": 852,
                    "nodeType": "Block",
                    "src": "5877:199:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 836,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 803,
                            "src": "5954:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 837,
                            "name": "amount0Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "5964:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5954:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 839,
                        "nodeType": "ExpressionStatement",
                        "src": "5954:24:23"
                      },
                      {
                        "expression": {
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 840,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 805,
                            "src": "5992:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 841,
                            "name": "amount1Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "6002:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5992:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 843,
                        "nodeType": "ExpressionStatement",
                        "src": "5992:24:23"
                      },
                      {
                        "expression": {
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 844,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 801,
                            "src": "6030:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 847,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 803,
                                "src": "6048:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 848,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 805,
                                "src": "6057:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 845,
                                "name": "Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3587,
                                "src": "6039:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Math_$3587_$",
                                  "typeString": "type(library Math)"
                                }
                              },
                              "id": 846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3535,
                              "src": "6039:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6039:26:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6030:35:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 851,
                        "nodeType": "ExpressionStatement",
                        "src": "6030:35:23"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calcSharesAndAmounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "amount0Desired",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "5426:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5426:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "amount1Desired",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "5450:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5450:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5425:48:23"
            },
            "returnParameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "5534:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "5562:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5562:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "5591:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5591:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5520:96:23"
            },
            "scope": 2169,
            "src": "5395:1313:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5191
            ],
            "body": {
              "id": 1117,
              "nodeType": "Block",
              "src": "7495:1286:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 974,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 957,
                          "src": "7513:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7522:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7513:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736861726573",
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7525:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                          "typeString": "literal_string \"shares\""
                        },
                        "value": "shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                          "typeString": "literal_string \"shares\""
                        }
                      ],
                      "id": 973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7505:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7505:29:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "7505:29:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 981,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "7552:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7566:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7558:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 982,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7558:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7558:10:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7552:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 987,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "7572:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 990,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7586:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                  "typeString": "contract AlphaVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                  "typeString": "contract AlphaVault"
                                }
                              ],
                              "id": 989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7578:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 988,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7578:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7578:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7572:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7552:39:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f",
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7593:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                          "typeString": "literal_string \"to\""
                        },
                        "value": "to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                          "typeString": "literal_string \"to\""
                        }
                      ],
                      "id": 980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7544:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7544:54:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "7544:54:23"
                },
                {
                  "assignments": [
                    998,
                    1000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 998,
                      "mutability": "mutable",
                      "name": "baseAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1117,
                      "src": "7731:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 997,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7731:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1000,
                      "mutability": "mutable",
                      "name": "baseAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1117,
                      "src": "7752:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 999,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7752:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1007,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1002,
                        "name": "baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "7807:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1003,
                        "name": "baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "7818:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1004,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 957,
                        "src": "7829:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1005,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "7837:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1001,
                      "name": "_burnLiquidityShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "7787:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24,uint256,address) returns (uint256,uint256)"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7787:53:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7730:110:23"
                },
                {
                  "assignments": [
                    1009,
                    1011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1009,
                      "mutability": "mutable",
                      "name": "limitAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1117,
                      "src": "7851:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1008,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7851:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1011,
                      "mutability": "mutable",
                      "name": "limitAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1117,
                      "src": "7873:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1010,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7873:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1018,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1013,
                        "name": "limitLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "7929:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1014,
                        "name": "limitUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "7941:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1015,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 957,
                        "src": "7953:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1016,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "7961:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1012,
                      "name": "_burnLiquidityShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "7909:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24,uint256,address) returns (uint256,uint256)"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7909:55:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7850:114:23"
                },
                {
                  "assignments": [
                    1020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1020,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 1117,
                      "src": "8030:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1019,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8030:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1023,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1021,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4031,
                      "src": "8052:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8052:13:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8030:35:23"
                },
                {
                  "assignments": [
                    1025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1025,
                      "mutability": "mutable",
                      "name": "unusedAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1117,
                      "src": "8075:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1024,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8075:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1034,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1032,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "8127:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1029,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 957,
                            "src": "8115:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1026,
                              "name": "_balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1661,
                              "src": "8099:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8099:11:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3825,
                          "src": "8099:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8099:23:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3847,
                      "src": "8099:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8099:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8075:64:23"
                },
                {
                  "assignments": [
                    1036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1036,
                      "mutability": "mutable",
                      "name": "unusedAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1117,
                      "src": "8149:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1035,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8149:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1045,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1043,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "8201:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1040,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 957,
                            "src": "8189:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1037,
                              "name": "_balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1679,
                              "src": "8173:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8173:11:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3825,
                          "src": "8173:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8173:23:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3847,
                      "src": "8173:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8173:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8149:64:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1046,
                      "name": "unusedAmount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1025,
                      "src": "8227:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8243:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8227:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1056,
                  "nodeType": "IfStatement",
                  "src": "8223:61:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1052,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "8266:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1053,
                          "name": "unusedAmount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "8270:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1049,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "8246:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4557,
                        "src": "8246:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8246:38:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1055,
                    "nodeType": "ExpressionStatement",
                    "src": "8246:38:23"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1057,
                      "name": "unusedAmount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "8298:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8314:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8298:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1067,
                  "nodeType": "IfStatement",
                  "src": "8294:61:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1063,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "8337:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1064,
                          "name": "unusedAmount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1036,
                          "src": "8341:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1060,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "8317:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4557,
                        "src": "8317:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8317:38:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1066,
                    "nodeType": "ExpressionStatement",
                    "src": "8317:38:23"
                  }
                },
                {
                  "expression": {
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1068,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "8416:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1074,
                          "name": "unusedAmount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "8460:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1071,
                              "name": "limitAmount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1009,
                              "src": "8442:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1069,
                              "name": "baseAmount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "8426:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3769,
                            "src": "8426:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8426:29:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3769,
                        "src": "8426:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8426:48:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8416:58:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "8416:58:23"
                },
                {
                  "expression": {
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1078,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "8484:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1084,
                          "name": "unusedAmount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1036,
                          "src": "8528:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1081,
                              "name": "limitAmount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1011,
                              "src": "8510:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1079,
                              "name": "baseAmount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "8494:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3769,
                            "src": "8494:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8494:29:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3769,
                        "src": "8494:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8494:48:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8484:58:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1087,
                  "nodeType": "ExpressionStatement",
                  "src": "8484:58:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1089,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "8560:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1090,
                          "name": "amount0Min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 959,
                          "src": "8571:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8560:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74304d696e",
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8583:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                          "typeString": "literal_string \"amount0Min\""
                        },
                        "value": "amount0Min"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                          "typeString": "literal_string \"amount0Min\""
                        }
                      ],
                      "id": 1088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8552:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8552:44:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "8552:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1096,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "8614:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1097,
                          "name": "amount1Min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "8625:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8614:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74314d696e",
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8637:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                          "typeString": "literal_string \"amount1Min\""
                        },
                        "value": "amount1Min"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                          "typeString": "literal_string \"amount1Min\""
                        }
                      ],
                      "id": 1095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8606:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8606:44:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "8606:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8690:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8690:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1105,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 957,
                        "src": "8702:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1102,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4377,
                      "src": "8684:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8684:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "8684:25:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8733:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8733:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1111,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "8745:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1112,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 957,
                        "src": "8749:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1113,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "8757:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1114,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "8766:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1108,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "8724:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8724:50:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "EmitStatement",
                  "src": "8719:55:23"
                }
              ]
            },
            "documentation": {
              "id": 955,
              "nodeType": "StructuredDocumentation",
              "src": "6714:578:23",
              "text": " @notice Withdraws tokens in proportion to the vault's holdings.\n @dev Removes proportional amount of liquidity from Uniswap. Note it\n doesn't collect share of fees since last rebalance to save gas.\n @param shares Shares burned by sender\n @param amount0Min Revert if resulting `amount0` is smaller than this\n @param amount1Min Revert if resulting `amount1` is smaller than this\n @param to Recipient of tokens\n @return amount0 Amount of token0 sent to recipient\n @return amount1 Amount of token1 sent to recipient"
            },
            "functionSelector": "d331bef7",
            "id": 1118,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 967,
                "modifierName": {
                  "id": 966,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4775,
                  "src": "7439:12:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7439:12:23"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7430:8:23"
            },
            "parameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "7324:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7324:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "amount0Min",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "7348:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7348:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "amount1Min",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "7376:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7376:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "7404:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7404:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7314:106:23"
            },
            "returnParameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "7461:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7461:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "7478:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7478:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7460:34:23"
            },
            "scope": 2169,
            "src": "7297:1484:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1199,
              "nodeType": "Block",
              "src": "9107:581:23",
              "statements": [
                {
                  "assignments": [
                    1135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1135,
                      "mutability": "mutable",
                      "name": "position",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "9117:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1134,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "9117:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1140,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1137,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "9155:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1138,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "9166:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1136,
                      "name": "_positionLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1710,
                      "src": "9136:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$",
                        "typeString": "function (int24,int24) view returns (uint128)"
                      }
                    },
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9136:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9117:59:23"
                },
                {
                  "assignments": [
                    1142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1142,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "9186:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1141,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9186:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1154,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1151,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4031,
                          "src": "9240:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9240:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1148,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "9228:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1145,
                                "name": "position",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1135,
                                "src": "9214:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "id": 1144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9206:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1143,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9206:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9206:17:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3825,
                          "src": "9206:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9206:29:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3847,
                      "src": "9206:33:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9206:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9186:68:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1155,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1142,
                      "src": "9269:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9281:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9269:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1198,
                  "nodeType": "IfStatement",
                  "src": "9265:417:23",
                  "trueBody": {
                    "id": 1197,
                    "nodeType": "Block",
                    "src": "9284:398:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1158,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1130,
                                "src": "9299:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1159,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1132,
                                "src": "9308:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1160,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "9298:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1163,
                                "name": "tickLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1121,
                                "src": "9329:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1164,
                                "name": "tickUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "9340:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1166,
                                    "name": "liquidity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1142,
                                    "src": "9362:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1165,
                                  "name": "_toUint128",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1871,
                                  "src": "9351:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                                    "typeString": "function (uint256) pure returns (uint128)"
                                  }
                                },
                                "id": 1167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9351:21:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "id": 1161,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 532,
                                "src": "9319:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5272,
                              "src": "9319:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                              }
                            },
                            "id": 1168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9319:54:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "9298:75:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1170,
                        "nodeType": "ExpressionStatement",
                        "src": "9298:75:23"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1171,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "9392:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9402:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9392:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1174,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "9407:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9417:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9407:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9392:26:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1196,
                        "nodeType": "IfStatement",
                        "src": "9388:284:23",
                        "trueBody": {
                          "id": 1195,
                          "nodeType": "Block",
                          "src": "9420:252:23",
                          "statements": [
                            {
                              "expression": {
                                "id": 1193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1178,
                                      "name": "amount0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1130,
                                      "src": "9439:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1179,
                                      "name": "amount1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1132,
                                      "src": "9448:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1180,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "9438:18:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1183,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1127,
                                      "src": "9493:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1184,
                                      "name": "tickLower",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1121,
                                      "src": "9517:9:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    {
                                      "id": 1185,
                                      "name": "tickUpper",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1123,
                                      "src": "9548:9:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 1187,
                                          "name": "amount0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1130,
                                          "src": "9590:7:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1186,
                                        "name": "_toUint128",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1871,
                                        "src": "9579:10:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                                          "typeString": "function (uint256) pure returns (uint128)"
                                        }
                                      },
                                      "id": 1188,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9579:19:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 1190,
                                          "name": "amount1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1132,
                                          "src": "9631:7:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1189,
                                        "name": "_toUint128",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1871,
                                        "src": "9620:10:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                                          "typeString": "function (uint256) pure returns (uint128)"
                                        }
                                      },
                                      "id": 1191,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9620:19:23",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      },
                                      {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      },
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      },
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1181,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 532,
                                      "src": "9459:4:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                        "typeString": "contract IUniswapV3Pool"
                                      }
                                    },
                                    "id": 1182,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "collect",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5258,
                                    "src": "9459:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
                                      "typeString": "function (address,int24,int24,uint128,uint128) external returns (uint128,uint128)"
                                    }
                                  },
                                  "id": 1192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9459:198:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                                    "typeString": "tuple(uint128,uint128)"
                                  }
                                },
                                "src": "9438:219:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1194,
                              "nodeType": "ExpressionStatement",
                              "src": "9438:219:23"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1119,
              "nodeType": "StructuredDocumentation",
              "src": "8787:134:23",
              "text": "@dev Withdraws share of liquidity in a range from Uniswap pool. Doesn't\n collect earned fees. Reverts if total supply is 0."
            },
            "id": 1200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnLiquidityShare",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1121,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "8964:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "8964:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "8989:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "8989:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "9014:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9014:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "9038:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9038:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8954:100:23"
            },
            "returnParameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "9073:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9073:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "9090:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9090:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9072:34:23"
            },
            "scope": 2169,
            "src": "8926:762:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "10284:1655:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1219,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10302:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10302:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1221,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "10316:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10302:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7374726174656779",
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10326:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e16920893711b985df3893d85b39127b3a481e91c3c57640cd8970c06e9e6007",
                          "typeString": "literal_string \"strategy\""
                        },
                        "value": "strategy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e16920893711b985df3893d85b39127b3a481e91c3c57640cd8970c06e9e6007",
                          "typeString": "literal_string \"strategy\""
                        }
                      ],
                      "id": 1218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10294:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10294:43:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "10294:43:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1227,
                        "name": "_baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "10359:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1228,
                        "name": "_baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1205,
                        "src": "10371:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1226,
                      "name": "_checkRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1428,
                      "src": "10347:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) view"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10347:35:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "10347:35:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1232,
                        "name": "_bidLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "10404:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1233,
                        "name": "_bidUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1209,
                        "src": "10415:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1231,
                      "name": "_checkRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1428,
                      "src": "10392:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) view"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10392:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "10392:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1237,
                        "name": "_askLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1211,
                        "src": "10447:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1238,
                        "name": "_askUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "10458:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1236,
                      "name": "_checkRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1428,
                      "src": "10435:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) view"
                      }
                    },
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10435:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "10435:33:23"
                },
                {
                  "assignments": [
                    null,
                    1242,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1242,
                      "mutability": "mutable",
                      "name": "tick",
                      "nodeType": "VariableDeclaration",
                      "scope": 1374,
                      "src": "10482:10:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1241,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "10482:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1246,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1243,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "10506:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5546,
                      "src": "10506:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10506:12:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10479:39:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1248,
                          "name": "_bidUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1209,
                          "src": "10536:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1249,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1242,
                          "src": "10549:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "10536:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6269645570706572",
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10555:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47d6159d9ec3ed75f3ee90e5219273c430980de7e46ca022e6a5f3d48f0639d5",
                          "typeString": "literal_string \"bidUpper\""
                        },
                        "value": "bidUpper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47d6159d9ec3ed75f3ee90e5219273c430980de7e46ca022e6a5f3d48f0639d5",
                          "typeString": "literal_string \"bidUpper\""
                        }
                      ],
                      "id": 1247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10528:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10528:38:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "10528:38:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1255,
                          "name": "_askLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "10584:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1256,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1242,
                          "src": "10596:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "10584:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61736b4c6f776572",
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10602:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf382eb48ee7682ce64ea5965ffc123c796d68167a98fff969bdabfb56765e53",
                          "typeString": "literal_string \"askLower\""
                        },
                        "value": "askLower"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf382eb48ee7682ce64ea5965ffc123c796d68167a98fff969bdabfb56765e53",
                          "typeString": "literal_string \"askLower\""
                        }
                      ],
                      "id": 1254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10576:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10576:37:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1260,
                  "nodeType": "ExpressionStatement",
                  "src": "10576:37:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1262,
                        "name": "baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "10750:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1263,
                        "name": "baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "10761:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1261,
                      "name": "_burnAllLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1564,
                      "src": "10732:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24)"
                      }
                    },
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10732:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "10732:39:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1267,
                        "name": "limitLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "10799:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1268,
                        "name": "limitUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "10811:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1266,
                      "name": "_burnAllLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1564,
                      "src": "10781:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24)"
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10781:41:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "10781:41:23"
                },
                {
                  "assignments": [
                    1272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1272,
                      "mutability": "mutable",
                      "name": "balance0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1374,
                      "src": "10888:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1271,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10888:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1275,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1273,
                      "name": "_balance0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1661,
                      "src": "10907:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10907:11:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10888:30:23"
                },
                {
                  "assignments": [
                    1277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1277,
                      "mutability": "mutable",
                      "name": "balance1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1374,
                      "src": "10928:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10928:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1280,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1278,
                      "name": "_balance1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1679,
                      "src": "10947:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10947:11:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10928:30:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1282,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "10982:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1283,
                        "name": "balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "10988:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1284,
                        "name": "balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "10998:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1285,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4031,
                          "src": "11008:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11008:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1281,
                      "name": "Snapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "10973:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int24_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (int24,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10973:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1288,
                  "nodeType": "EmitStatement",
                  "src": "10968:54:23"
                },
                {
                  "assignments": [
                    1290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1290,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1374,
                      "src": "11072:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1289,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11072:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1297,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1292,
                        "name": "_baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "11113:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1293,
                        "name": "_baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1205,
                        "src": "11125:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1294,
                        "name": "balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "11137:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1295,
                        "name": "balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "11147:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1291,
                      "name": "_liquidityForAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "11092:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                        "typeString": "function (int24,int24,uint256,uint256) view returns (uint128)"
                      }
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11092:64:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11072:84:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1299,
                        "name": "_baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "11181:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1300,
                        "name": "_baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1205,
                        "src": "11193:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1301,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1290,
                        "src": "11205:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1298,
                      "name": "_mintLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1593,
                      "src": "11166:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$__$",
                        "typeString": "function (int24,int24,uint128)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11166:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1303,
                  "nodeType": "ExpressionStatement",
                  "src": "11166:49:23"
                },
                {
                  "expression": {
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1304,
                          "name": "baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 552,
                          "src": "11226:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1305,
                          "name": "baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 554,
                          "src": "11237:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "id": 1306,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11225:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                        "typeString": "tuple(int24,int24)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "id": 1307,
                          "name": "_baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "11251:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1308,
                          "name": "_baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1205,
                          "src": "11263:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "id": 1309,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11250:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                        "typeString": "tuple(int24,int24)"
                      }
                    },
                    "src": "11225:49:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "11225:49:23"
                },
                {
                  "expression": {
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1312,
                      "name": "balance0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1272,
                      "src": "11285:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1313,
                        "name": "_balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1661,
                        "src": "11296:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11296:11:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11285:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "11285:22:23"
                },
                {
                  "expression": {
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1317,
                      "name": "balance1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "11317:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1318,
                        "name": "_balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1679,
                        "src": "11328:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11328:11:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11317:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1321,
                  "nodeType": "ExpressionStatement",
                  "src": "11317:22:23"
                },
                {
                  "assignments": [
                    1323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1323,
                      "mutability": "mutable",
                      "name": "bidLiquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1374,
                      "src": "11428:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1322,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11428:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1330,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1325,
                        "name": "_bidLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "11472:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1326,
                        "name": "_bidUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1209,
                        "src": "11483:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1327,
                        "name": "balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "11494:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1328,
                        "name": "balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "11504:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1324,
                      "name": "_liquidityForAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "11451:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                        "typeString": "function (int24,int24,uint256,uint256) view returns (uint128)"
                      }
                    },
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11451:62:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11428:85:23"
                },
                {
                  "assignments": [
                    1332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1332,
                      "mutability": "mutable",
                      "name": "askLiquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1374,
                      "src": "11523:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1331,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11523:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1339,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1334,
                        "name": "_askLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1211,
                        "src": "11567:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1335,
                        "name": "_askUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "11578:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1336,
                        "name": "balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "11589:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1337,
                        "name": "balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "11599:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1333,
                      "name": "_liquidityForAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "11546:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                        "typeString": "function (int24,int24,uint256,uint256) view returns (uint128)"
                      }
                    },
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11546:62:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11523:85:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1340,
                      "name": "bidLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1323,
                      "src": "11622:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1341,
                      "name": "askLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1332,
                      "src": "11637:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "11622:27:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1372,
                    "nodeType": "Block",
                    "src": "11795:138:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1359,
                              "name": "_askLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1211,
                              "src": "11824:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1360,
                              "name": "_askUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "11835:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1361,
                              "name": "askLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1332,
                              "src": "11846:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1358,
                            "name": "_mintLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1593,
                            "src": "11809:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$__$",
                              "typeString": "function (int24,int24,uint128)"
                            }
                          },
                          "id": 1362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11809:50:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1363,
                        "nodeType": "ExpressionStatement",
                        "src": "11809:50:23"
                      },
                      {
                        "expression": {
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1364,
                                "name": "limitLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 556,
                                "src": "11874:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1365,
                                "name": "limitUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 558,
                                "src": "11886:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "id": 1366,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "11873:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                              "typeString": "tuple(int24,int24)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "id": 1367,
                                "name": "_askLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1211,
                                "src": "11901:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1368,
                                "name": "_askUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1213,
                                "src": "11912:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "id": 1369,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11900:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                              "typeString": "tuple(int24,int24)"
                            }
                          },
                          "src": "11873:49:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1371,
                        "nodeType": "ExpressionStatement",
                        "src": "11873:49:23"
                      }
                    ]
                  },
                  "id": 1373,
                  "nodeType": "IfStatement",
                  "src": "11618:315:23",
                  "trueBody": {
                    "id": 1357,
                    "nodeType": "Block",
                    "src": "11651:138:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1344,
                              "name": "_bidLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "11680:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1345,
                              "name": "_bidUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1209,
                              "src": "11691:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1346,
                              "name": "bidLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "11702:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1343,
                            "name": "_mintLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1593,
                            "src": "11665:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$__$",
                              "typeString": "function (int24,int24,uint128)"
                            }
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11665:50:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1348,
                        "nodeType": "ExpressionStatement",
                        "src": "11665:50:23"
                      },
                      {
                        "expression": {
                          "id": 1355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1349,
                                "name": "limitLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 556,
                                "src": "11730:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1350,
                                "name": "limitUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 558,
                                "src": "11742:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "id": 1351,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "11729:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                              "typeString": "tuple(int24,int24)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "id": 1352,
                                "name": "_bidLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1207,
                                "src": "11757:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1353,
                                "name": "_bidUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "11768:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "id": 1354,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11756:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                              "typeString": "tuple(int24,int24)"
                            }
                          },
                          "src": "11729:49:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1356,
                        "nodeType": "ExpressionStatement",
                        "src": "11729:49:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1201,
              "nodeType": "StructuredDocumentation",
              "src": "9694:386:23",
              "text": " @notice Updates vault's positions. Can only be called by the strategy.\n @dev Two orders are placed - a base order and a limit order. The base\n order is placed first with as much liquidity as possible. This order\n should use up all of one token, leaving only the other one. This excess\n amount is then placed as a single-sided bid or ask order."
            },
            "functionSelector": "89a28eb2",
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1216,
                "modifierName": {
                  "id": 1215,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4775,
                  "src": "10271:12:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10271:12:23"
              }
            ],
            "name": "rebalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "_baseLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "10113:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10113:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1205,
                  "mutability": "mutable",
                  "name": "_baseUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "10139:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1204,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10139:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "_bidLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "10165:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10165:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "_bidUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "10190:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10190:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1211,
                  "mutability": "mutable",
                  "name": "_askLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "10215:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10215:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "_askUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "10240:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10240:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10103:158:23"
            },
            "returnParameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10284:0:23"
            },
            "scope": 2169,
            "src": "10085:1854:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1427,
              "nodeType": "Block",
              "src": "12014:405:23",
              "statements": [
                {
                  "assignments": [
                    1383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1383,
                      "mutability": "mutable",
                      "name": "_tickSpacing",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "12024:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1382,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "12024:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1385,
                  "initialValue": {
                    "id": 1384,
                    "name": "tickSpacing",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 538,
                    "src": "12045:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12024:32:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1387,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1377,
                          "src": "12074:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1388,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1379,
                          "src": "12086:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "12074:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b4c6f776572203c207469636b5570706572",
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12097:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ee6ba4bc9dfde00a40d7971b955705720d4769a2c20ed3685538ff5c699cc81",
                          "typeString": "literal_string \"tickLower < tickUpper\""
                        },
                        "value": "tickLower < tickUpper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ee6ba4bc9dfde00a40d7971b955705720d4769a2c20ed3685538ff5c699cc81",
                          "typeString": "literal_string \"tickLower < tickUpper\""
                        }
                      ],
                      "id": 1386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12066:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12066:55:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1392,
                  "nodeType": "ExpressionStatement",
                  "src": "12066:55:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1394,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1377,
                          "src": "12139:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1395,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3514,
                            "src": "12152:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MIN_TICK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2987,
                          "src": "12152:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "12139:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b4c6f77657220746f6f206c6f77",
                        "id": 1398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12171:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7e5215e9236c248c269a1e30abc87607c099c2533f496f35f675ac994361979",
                          "typeString": "literal_string \"tickLower too low\""
                        },
                        "value": "tickLower too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7e5215e9236c248c269a1e30abc87607c099c2533f496f35f675ac994361979",
                          "typeString": "literal_string \"tickLower too low\""
                        }
                      ],
                      "id": 1393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12131:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12131:60:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1400,
                  "nodeType": "ExpressionStatement",
                  "src": "12131:60:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1402,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1379,
                          "src": "12209:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1403,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3514,
                            "src": "12222:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_TICK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2992,
                          "src": "12222:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "12209:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b557070657220746f6f2068696768",
                        "id": 1406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12241:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbf41dddac27bd038006364d94c710a987ab101b411ac3380bf559fe4bee9692",
                          "typeString": "literal_string \"tickUpper too high\""
                        },
                        "value": "tickUpper too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbf41dddac27bd038006364d94c710a987ab101b411ac3380bf559fe4bee9692",
                          "typeString": "literal_string \"tickUpper too high\""
                        }
                      ],
                      "id": 1401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12201:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12201:61:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1408,
                  "nodeType": "ExpressionStatement",
                  "src": "12201:61:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1410,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "12280:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 1411,
                            "name": "_tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "12292:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "12280:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12308:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12280:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b4c6f7765722025207469636b53706163696e67",
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12311:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_340d48e5d6212412e670fd49421bae23c293aaa4e22a7ce9a56dc801a3390fc8",
                          "typeString": "literal_string \"tickLower % tickSpacing\""
                        },
                        "value": "tickLower % tickSpacing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_340d48e5d6212412e670fd49421bae23c293aaa4e22a7ce9a56dc801a3390fc8",
                          "typeString": "literal_string \"tickLower % tickSpacing\""
                        }
                      ],
                      "id": 1409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12272:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12272:65:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "12272:65:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 1421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1419,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1379,
                            "src": "12355:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 1420,
                            "name": "_tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1383,
                            "src": "12367:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "12355:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12383:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12355:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b55707065722025207469636b53706163696e67",
                        "id": 1424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12386:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c6ca85372617d539740da5304d313adf563e1119a44b290a3d8dcbe5d416a01",
                          "typeString": "literal_string \"tickUpper % tickSpacing\""
                        },
                        "value": "tickUpper % tickSpacing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c6ca85372617d539740da5304d313adf563e1119a44b290a3d8dcbe5d416a01",
                          "typeString": "literal_string \"tickUpper % tickSpacing\""
                        }
                      ],
                      "id": 1418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12347:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12347:65:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1426,
                  "nodeType": "ExpressionStatement",
                  "src": "12347:65:23"
                }
              ]
            },
            "id": 1428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "11966:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "11966:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1379,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1428,
                  "src": "11983:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1378,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "11983:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11965:34:23"
            },
            "returnParameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12014:0:23"
            },
            "scope": 2169,
            "src": "11945:474:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1563,
              "nodeType": "Block",
              "src": "12607:1285:23",
              "statements": [
                {
                  "assignments": [
                    1437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1437,
                      "mutability": "mutable",
                      "name": "owed0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "12661:13:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12661:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1439,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12677:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12661:17:23"
                },
                {
                  "assignments": [
                    1441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1441,
                      "mutability": "mutable",
                      "name": "owed1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "12688:13:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1440,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12688:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1443,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12704:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12688:17:23"
                },
                {
                  "assignments": [
                    1445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1445,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "12715:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1444,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12715:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1450,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1447,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "12754:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1448,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "12765:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1446,
                      "name": "_positionLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1710,
                      "src": "12735:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$",
                        "typeString": "function (int24,int24) view returns (uint128)"
                      }
                    },
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12735:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12715:60:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1451,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "12789:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12801:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12789:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1466,
                  "nodeType": "IfStatement",
                  "src": "12785:103:23",
                  "trueBody": {
                    "id": 1465,
                    "nodeType": "Block",
                    "src": "12804:84:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1454,
                                "name": "owed0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1437,
                                "src": "12819:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1455,
                                "name": "owed1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1441,
                                "src": "12826:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1456,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "12818:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1459,
                                "name": "tickLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1431,
                                "src": "12845:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1460,
                                "name": "tickUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1433,
                                "src": "12856:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1461,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1445,
                                "src": "12867:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "id": 1457,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 532,
                                "src": "12835:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 1458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5272,
                              "src": "12835:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                              }
                            },
                            "id": 1462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12835:42:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "12818:59:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1464,
                        "nodeType": "ExpressionStatement",
                        "src": "12818:59:23"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1468,
                    1470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1468,
                      "mutability": "mutable",
                      "name": "collect0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "12956:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1467,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12956:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1470,
                      "mutability": "mutable",
                      "name": "collect1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "12974:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1469,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12974:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1490,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1475,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13044:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlphaVault_$2169",
                              "typeString": "contract AlphaVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlphaVault_$2169",
                              "typeString": "contract AlphaVault"
                            }
                          ],
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13036:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1473,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13036:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13036:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1477,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1431,
                        "src": "13067:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1478,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1433,
                        "src": "13094:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13126:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 1480,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "13126:7:23",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 1479,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "13121:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13121:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 1483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "13121:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13161:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 1485,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "13161:7:23",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 1484,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "13156:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13156:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "13156:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 1471,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "13006:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5258,
                      "src": "13006:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function (address,int24,int24,uint128,uint128) external returns (uint128,uint128)"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13006:181:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12955:232:23"
                },
                {
                  "assignments": [
                    1492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1492,
                      "mutability": "mutable",
                      "name": "feesFromPool0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "13198:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1491,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13198:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1497,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1495,
                        "name": "owed0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "13235:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1493,
                        "name": "collect0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1468,
                        "src": "13222:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3791,
                      "src": "13222:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13222:19:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13198:43:23"
                },
                {
                  "assignments": [
                    1499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1499,
                      "mutability": "mutable",
                      "name": "feesFromPool1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "13251:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1498,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13251:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1504,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1502,
                        "name": "owed1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1441,
                        "src": "13288:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1500,
                        "name": "collect1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1470,
                        "src": "13275:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3791,
                      "src": "13275:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13275:19:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13251:43:23"
                },
                {
                  "assignments": [
                    1506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1506,
                      "mutability": "mutable",
                      "name": "feesToProtocol0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "13304:23:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1505,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13304:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1508,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13330:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13304:27:23"
                },
                {
                  "assignments": [
                    1510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1510,
                      "mutability": "mutable",
                      "name": "feesToProtocol1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "13341:23:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13341:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1512,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13367:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13341:27:23"
                },
                {
                  "assignments": [
                    1514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1514,
                      "mutability": "mutable",
                      "name": "_protocolFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "13419:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1513,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13419:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1516,
                  "initialValue": {
                    "id": 1515,
                    "name": "protocolFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 540,
                    "src": "13442:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13419:34:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1517,
                      "name": "_protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1514,
                      "src": "13467:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13482:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13467:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1555,
                  "nodeType": "IfStatement",
                  "src": "13463:333:23",
                  "trueBody": {
                    "id": 1554,
                    "nodeType": "Block",
                    "src": "13485:311:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 1528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1520,
                            "name": "feesToProtocol0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1506,
                            "src": "13499:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "316536",
                                "id": 1526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13553:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1e6"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1523,
                                    "name": "_protocolFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1514,
                                    "src": "13535:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1521,
                                    "name": "feesFromPool0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1492,
                                    "src": "13517:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3825,
                                  "src": "13517:17:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13517:31:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3847,
                              "src": "13517:35:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13517:40:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13499:58:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1529,
                        "nodeType": "ExpressionStatement",
                        "src": "13499:58:23"
                      },
                      {
                        "expression": {
                          "id": 1538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1530,
                            "name": "feesToProtocol1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "13571:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "316536",
                                "id": 1536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13625:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1e6"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1533,
                                    "name": "_protocolFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1514,
                                    "src": "13607:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1531,
                                    "name": "feesFromPool1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1499,
                                    "src": "13589:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3825,
                                  "src": "13589:17:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13589:31:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3847,
                              "src": "13589:35:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13589:40:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13571:58:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1539,
                        "nodeType": "ExpressionStatement",
                        "src": "13571:58:23"
                      },
                      {
                        "expression": {
                          "id": 1545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1540,
                            "name": "accruedProtocolFees0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "13643:20:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1543,
                                "name": "feesToProtocol0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1506,
                                "src": "13691:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1541,
                                "name": "accruedProtocolFees0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 560,
                                "src": "13666:20:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3769,
                              "src": "13666:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13666:41:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13643:64:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1546,
                        "nodeType": "ExpressionStatement",
                        "src": "13643:64:23"
                      },
                      {
                        "expression": {
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1547,
                            "name": "accruedProtocolFees1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "13721:20:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1550,
                                "name": "feesToProtocol1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1510,
                                "src": "13769:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1548,
                                "name": "accruedProtocolFees1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 562,
                                "src": "13744:20:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3769,
                              "src": "13744:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13744:41:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13721:64:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1553,
                        "nodeType": "ExpressionStatement",
                        "src": "13721:64:23"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1557,
                        "name": "feesFromPool0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1492,
                        "src": "13822:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1558,
                        "name": "feesFromPool1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1499,
                        "src": "13837:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1559,
                        "name": "feesToProtocol0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1506,
                        "src": "13852:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1560,
                        "name": "feesToProtocol1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "13869:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1556,
                      "name": "CollectFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "13810:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13810:75:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "EmitStatement",
                  "src": "13805:80:23"
                }
              ]
            },
            "documentation": {
              "id": 1429,
              "nodeType": "StructuredDocumentation",
              "src": "12425:107:23",
              "text": "@dev Withdraws all liquidity in a range from Uniswap pool and collects\n all fees in the process."
            },
            "id": 1564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnAllLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1431,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "12564:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "12564:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "12581:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "12581:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12563:34:23"
            },
            "returnParameters": {
              "id": 1435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12607:0:23"
            },
            "scope": 2169,
            "src": "12537:1355:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1592,
              "nodeType": "Block",
              "src": "14078:121:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1574,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1571,
                      "src": "14092:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14104:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14092:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1591,
                  "nodeType": "IfStatement",
                  "src": "14088:105:23",
                  "trueBody": {
                    "id": 1590,
                    "nodeType": "Block",
                    "src": "14107:86:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1582,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14139:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                    "typeString": "contract AlphaVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                    "typeString": "contract AlphaVault"
                                  }
                                ],
                                "id": 1581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14131:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1580,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14131:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14131:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1584,
                              "name": "tickLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "14146:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1585,
                              "name": "tickUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1569,
                              "src": "14157:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1586,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1571,
                              "src": "14168:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14179:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 1577,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "14121:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 1579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5240,
                            "src": "14121:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (address,int24,int24,uint128,bytes memory) external returns (uint256,uint256)"
                            }
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14121:61:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 1589,
                        "nodeType": "ExpressionStatement",
                        "src": "14121:61:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1565,
              "nodeType": "StructuredDocumentation",
              "src": "13898:59:23",
              "text": "@dev Deposits liquidity in a range on the Uniswap pool."
            },
            "id": 1593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "13995:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13995:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "14020:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14020:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "14045:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14045:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13985:83:23"
            },
            "returnParameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14078:0:23"
            },
            "scope": 2169,
            "src": "13962:237:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5198
            ],
            "body": {
              "id": 1642,
              "nodeType": "Block",
              "src": "14507:327:23",
              "statements": [
                {
                  "assignments": [
                    1603,
                    1605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1603,
                      "mutability": "mutable",
                      "name": "baseAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1642,
                      "src": "14518:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1602,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14518:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1605,
                      "mutability": "mutable",
                      "name": "baseAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1642,
                      "src": "14539:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14539:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1610,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1607,
                        "name": "baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "14579:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1608,
                        "name": "baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "14590:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1606,
                      "name": "_positionAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1776,
                      "src": "14562:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14562:38:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14517:83:23"
                },
                {
                  "assignments": [
                    1612,
                    1614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1612,
                      "mutability": "mutable",
                      "name": "limitAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1642,
                      "src": "14611:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1611,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14611:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1614,
                      "mutability": "mutable",
                      "name": "limitAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1642,
                      "src": "14633:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1613,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14633:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1619,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1616,
                        "name": "limitLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "14674:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1617,
                        "name": "limitUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "14686:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1615,
                      "name": "_positionAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1776,
                      "src": "14657:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14657:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14610:87:23"
                },
                {
                  "expression": {
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1620,
                      "name": "total0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "14707:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1627,
                          "name": "limitAmount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1612,
                          "src": "14749:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1624,
                              "name": "baseAmount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1603,
                              "src": "14732:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1621,
                                "name": "_balance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1661,
                                "src": "14716:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14716:11:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3769,
                            "src": "14716:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14716:28:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3769,
                        "src": "14716:32:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14716:46:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14707:55:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1630,
                  "nodeType": "ExpressionStatement",
                  "src": "14707:55:23"
                },
                {
                  "expression": {
                    "id": 1640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1631,
                      "name": "total1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1600,
                      "src": "14772:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1638,
                          "name": "limitAmount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1614,
                          "src": "14814:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1635,
                              "name": "baseAmount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1605,
                              "src": "14797:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1632,
                                "name": "_balance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1679,
                                "src": "14781:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14781:11:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3769,
                            "src": "14781:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14781:28:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3769,
                        "src": "14781:32:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14781:46:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14772:55:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1641,
                  "nodeType": "ExpressionStatement",
                  "src": "14772:55:23"
                }
              ]
            },
            "documentation": {
              "id": 1594,
              "nodeType": "StructuredDocumentation",
              "src": "14205:208:23",
              "text": " @notice Calculates the vault's total holdings of token0 and token1 - in\n other words, how much of each token the vault would hold if it withdrew\n all its liquidity from Uniswap."
            },
            "functionSelector": "c4a7761e",
            "id": 1643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmounts",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1596,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14457:8:23"
            },
            "parameters": {
              "id": 1595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14442:2:23"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1598,
                  "mutability": "mutable",
                  "name": "total0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "14475:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14475:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1600,
                  "mutability": "mutable",
                  "name": "total1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "14491:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14491:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14474:32:23"
            },
            "scope": 2169,
            "src": "14418:416:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1660,
              "nodeType": "Block",
              "src": "14947:81:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1657,
                        "name": "accruedProtocolFees0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "15000:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1653,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14989:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                  "typeString": "contract AlphaVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                  "typeString": "contract AlphaVault"
                                }
                              ],
                              "id": 1652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14981:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1651,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14981:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14981:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1649,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "14964:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4523",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4462,
                          "src": "14964:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14964:31:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3791,
                      "src": "14964:35:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14964:57:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1648,
                  "id": 1659,
                  "nodeType": "Return",
                  "src": "14957:64:23"
                }
              ]
            },
            "documentation": {
              "id": 1644,
              "nodeType": "StructuredDocumentation",
              "src": "14840:49:23",
              "text": "@dev Amount of token0 held as unused balance."
            },
            "id": 1661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_balance0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14912:2:23"
            },
            "returnParameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1647,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "14938:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14938:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14937:9:23"
            },
            "scope": 2169,
            "src": "14894:134:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1678,
              "nodeType": "Block",
              "src": "15141:81:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1675,
                        "name": "accruedProtocolFees1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 562,
                        "src": "15194:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1671,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15183:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                  "typeString": "contract AlphaVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                  "typeString": "contract AlphaVault"
                                }
                              ],
                              "id": 1670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15175:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1669,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15175:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15175:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1667,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "15158:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4523",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4462,
                          "src": "15158:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15158:31:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3791,
                      "src": "15158:35:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15158:57:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1666,
                  "id": 1677,
                  "nodeType": "Return",
                  "src": "15151:64:23"
                }
              ]
            },
            "documentation": {
              "id": 1662,
              "nodeType": "StructuredDocumentation",
              "src": "15034:49:23",
              "text": "@dev Amount of token1 held as unused balance."
            },
            "id": 1679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_balance1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15106:2:23"
            },
            "returnParameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1665,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "15132:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15132:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15131:9:23"
            },
            "scope": 2169,
            "src": "15088:134:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1709,
              "nodeType": "Block",
              "src": "15414:154:23",
              "statements": [
                {
                  "assignments": [
                    1690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1690,
                      "mutability": "mutable",
                      "name": "positionKey",
                      "nodeType": "VariableDeclaration",
                      "scope": 1709,
                      "src": "15424:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1689,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15424:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1700,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1695,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15474:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlphaVault_$2169",
                              "typeString": "contract AlphaVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlphaVault_$2169",
                              "typeString": "contract AlphaVault"
                            }
                          ],
                          "id": 1694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15466:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1693,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15466:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15466:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1697,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1682,
                        "src": "15481:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1698,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "15492:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "expression": {
                        "id": 1691,
                        "name": "PositionKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5155,
                        "src": "15446:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PositionKey_$5155_$",
                          "typeString": "type(library PositionKey)"
                        }
                      },
                      "id": 1692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "compute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "15446:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_int24_$_t_int24_$returns$_t_bytes32_$",
                        "typeString": "function (address,int24,int24) pure returns (bytes32)"
                      }
                    },
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15446:56:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15424:78:23"
                },
                {
                  "expression": {
                    "id": 1707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1701,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "15513:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 1702,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15512:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$__$__$",
                        "typeString": "tuple(uint128,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1705,
                          "name": "positionKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1690,
                          "src": "15549:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 1703,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "15534:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 1704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "positions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5618,
                        "src": "15534:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (bytes32) view external returns (uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "id": 1706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15534:27:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "src": "15512:49:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1708,
                  "nodeType": "ExpressionStatement",
                  "src": "15512:49:23"
                }
              ]
            },
            "documentation": {
              "id": 1680,
              "nodeType": "StructuredDocumentation",
              "src": "15228:49:23",
              "text": "@dev Amount of liquidity in vault's position."
            },
            "id": 1710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_positionLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1682,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1710,
                  "src": "15310:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1681,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "15310:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1684,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1710,
                  "src": "15327:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1683,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "15327:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15309:34:23"
            },
            "returnParameters": {
              "id": 1688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1687,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1710,
                  "src": "15391:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1686,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "15391:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15390:19:23"
            },
            "scope": 2169,
            "src": "15282:286:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1775,
              "nodeType": "Block",
              "src": "15787:403:23",
              "statements": [
                {
                  "assignments": [
                    1723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1723,
                      "mutability": "mutable",
                      "name": "positionKey",
                      "nodeType": "VariableDeclaration",
                      "scope": 1775,
                      "src": "15797:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1722,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15797:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1733,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1728,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15847:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlphaVault_$2169",
                              "typeString": "contract AlphaVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlphaVault_$2169",
                              "typeString": "contract AlphaVault"
                            }
                          ],
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15839:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1726,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15839:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15839:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1730,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "15854:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1731,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1715,
                        "src": "15865:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "expression": {
                        "id": 1724,
                        "name": "PositionKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5155,
                        "src": "15819:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PositionKey_$5155_$",
                          "typeString": "type(library PositionKey)"
                        }
                      },
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "compute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "15819:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_int24_$_t_int24_$returns$_t_bytes32_$",
                        "typeString": "function (address,int24,int24) pure returns (bytes32)"
                      }
                    },
                    "id": 1732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15819:56:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15797:78:23"
                },
                {
                  "assignments": [
                    1735,
                    null,
                    null,
                    1737,
                    1739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1735,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1775,
                      "src": "15886:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1734,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "15886:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 1737,
                      "mutability": "mutable",
                      "name": "tokensOwed0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1775,
                      "src": "15909:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1736,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "15909:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1739,
                      "mutability": "mutable",
                      "name": "tokensOwed1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1775,
                      "src": "15930:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1738,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "15930:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1744,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1742,
                        "name": "positionKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1723,
                        "src": "15980:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1740,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "15965:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "positions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5618,
                      "src": "15965:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (bytes32) view external returns (uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "id": 1743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15965:27:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15885:107:23"
                },
                {
                  "expression": {
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1745,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1718,
                          "src": "16004:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1746,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1720,
                          "src": "16013:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1747,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16003:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1749,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1713,
                          "src": "16045:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1750,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1715,
                          "src": "16056:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1751,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1735,
                          "src": "16067:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 1748,
                        "name": "_amountsForLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "16024:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (int24,int24,uint128) view returns (uint256,uint256)"
                        }
                      },
                      "id": 1752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16024:53:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16003:74:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1754,
                  "nodeType": "ExpressionStatement",
                  "src": "16003:74:23"
                },
                {
                  "expression": {
                    "id": 1763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1755,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1718,
                      "src": "16087:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1760,
                              "name": "tokensOwed0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1737,
                              "src": "16117:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16109:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1758,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16109:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16109:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1756,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1718,
                          "src": "16097:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3769,
                        "src": "16097:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16097:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16087:43:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1764,
                  "nodeType": "ExpressionStatement",
                  "src": "16087:43:23"
                },
                {
                  "expression": {
                    "id": 1773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1765,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "16140:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1770,
                              "name": "tokensOwed1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1739,
                              "src": "16170:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16162:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1768,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16162:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16162:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1766,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1720,
                          "src": "16150:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3769,
                        "src": "16150:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16150:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16140:43:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1774,
                  "nodeType": "ExpressionStatement",
                  "src": "16140:43:23"
                }
              ]
            },
            "documentation": {
              "id": 1711,
              "nodeType": "StructuredDocumentation",
              "src": "15574:63:23",
              "text": "@dev Amounts of token0 and token1 held in vault's position."
            },
            "id": 1776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_positionAmounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1713,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1776,
                  "src": "15668:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1712,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "15668:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1715,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1776,
                  "src": "15685:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1714,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "15685:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15667:34:23"
            },
            "returnParameters": {
              "id": 1721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1776,
                  "src": "15749:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15749:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1776,
                  "src": "15766:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15766:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15748:34:23"
            },
            "scope": 2169,
            "src": "15642:548:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1810,
              "nodeType": "Block",
              "src": "16423:317:23",
              "statements": [
                {
                  "assignments": [
                    1791,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1791,
                      "mutability": "mutable",
                      "name": "sqrtRatioX96",
                      "nodeType": "VariableDeclaration",
                      "scope": 1810,
                      "src": "16434:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 1790,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "16434:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1795,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1792,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "16470:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5546,
                      "src": "16470:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 1794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16470:12:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16433:49:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1798,
                        "name": "sqrtRatioX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1791,
                        "src": "16568:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1801,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1779,
                            "src": "16626:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 1799,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3514,
                            "src": "16598:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "16598:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 1802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16598:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1805,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1781,
                            "src": "16682:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 1803,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3514,
                            "src": "16654:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "16654:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 1806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16654:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "id": 1807,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "16710:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 1796,
                        "name": "LiquidityAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5130,
                        "src": "16511:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$5130_$",
                          "typeString": "type(library LiquidityAmounts)"
                        }
                      },
                      "id": 1797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountsForLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5129,
                      "src": "16511:39:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint160,uint160,uint160,uint128) pure returns (uint256,uint256)"
                      }
                    },
                    "id": 1808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16511:222:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1789,
                  "id": 1809,
                  "nodeType": "Return",
                  "src": "16492:241:23"
                }
              ]
            },
            "documentation": {
              "id": 1777,
              "nodeType": "StructuredDocumentation",
              "src": "16196:68:23",
              "text": "@dev Wrapper around `LiquidityAmounts.getAmountsForLiquidity()`."
            },
            "id": 1811,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_amountsForLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1779,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "16308:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1778,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "16308:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1781,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "16333:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1780,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "16333:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1783,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "16358:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1782,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "16358:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16298:83:23"
            },
            "returnParameters": {
              "id": 1789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1786,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "16405:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16405:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1788,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "16414:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16414:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16404:18:23"
            },
            "scope": 2169,
            "src": "16269:471:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1846,
              "nodeType": "Block",
              "src": "16987:340:23",
              "statements": [
                {
                  "assignments": [
                    1826,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1826,
                      "mutability": "mutable",
                      "name": "sqrtRatioX96",
                      "nodeType": "VariableDeclaration",
                      "scope": 1846,
                      "src": "16998:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 1825,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "16998:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1830,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1827,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "17034:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5546,
                      "src": "17034:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 1829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17034:12:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16997:49:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1833,
                        "name": "sqrtRatioX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1826,
                        "src": "17132:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1836,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1814,
                            "src": "17190:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 1834,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3514,
                            "src": "17162:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "17162:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17162:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1840,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1816,
                            "src": "17246:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 1838,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3514,
                            "src": "17218:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "17218:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 1841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17218:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "id": 1842,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "17274:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1843,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1820,
                        "src": "17299:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1831,
                        "name": "LiquidityAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5130,
                        "src": "17075:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$5130_$",
                          "typeString": "type(library LiquidityAmounts)"
                        }
                      },
                      "id": 1832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLiquidityForAmounts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4980,
                      "src": "17075:39:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                        "typeString": "function (uint160,uint160,uint160,uint256,uint256) pure returns (uint128)"
                      }
                    },
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17075:245:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 1824,
                  "id": 1845,
                  "nodeType": "Return",
                  "src": "17056:264:23"
                }
              ]
            },
            "documentation": {
              "id": 1812,
              "nodeType": "StructuredDocumentation",
              "src": "16746:68:23",
              "text": "@dev Wrapper around `LiquidityAmounts.getLiquidityForAmounts()`."
            },
            "id": 1847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liquidityForAmounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1814,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "16858:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1813,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "16858:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1816,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "16883:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1815,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "16883:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1818,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "16908:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16908:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1820,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "16933:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16933:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16848:106:23"
            },
            "returnParameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1823,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "16978:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1822,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "16978:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16977:9:23"
            },
            "scope": 2169,
            "src": "16819:508:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1870,
              "nodeType": "Block",
              "src": "17455:74:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1856,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1850,
                          "src": "17472:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17482:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 1858,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17482:7:23",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                }
                              ],
                              "id": 1857,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "17477:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17477:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint128",
                              "typeString": "type(uint128)"
                            }
                          },
                          "id": 1861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "17477:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "17472:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1855,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "17465:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17465:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1864,
                  "nodeType": "ExpressionStatement",
                  "src": "17465:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1867,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1850,
                        "src": "17520:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "17512:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint128_$",
                        "typeString": "type(uint128)"
                      },
                      "typeName": {
                        "id": 1865,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "17512:7:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17512:10:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 1854,
                  "id": 1869,
                  "nodeType": "Return",
                  "src": "17505:17:23"
                }
              ]
            },
            "documentation": {
              "id": 1848,
              "nodeType": "StructuredDocumentation",
              "src": "17333:54:23",
              "text": "@dev Casts uint256 to uint128 with overflow check."
            },
            "id": 1871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_toUint128",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1850,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 1871,
                  "src": "17412:9:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17412:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17411:11:23"
            },
            "returnParameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1853,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1871,
                  "src": "17446:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1852,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "17446:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17445:9:23"
            },
            "scope": 2169,
            "src": "17392:137:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4789
            ],
            "body": {
              "id": 1916,
              "nodeType": "Block",
              "src": "17712:187:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1883,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "17730:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "17730:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1887,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "17752:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            ],
                            "id": 1886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17744:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1885,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17744:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17744:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17730:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17722:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17722:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1891,
                  "nodeType": "ExpressionStatement",
                  "src": "17722:36:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1892,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1874,
                      "src": "17772:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17782:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17772:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1903,
                  "nodeType": "IfStatement",
                  "src": "17768:57:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1898,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "17805:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "17805:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 1900,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1874,
                          "src": "17817:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1895,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "17785:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4557,
                        "src": "17785:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17785:40:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1902,
                    "nodeType": "ExpressionStatement",
                    "src": "17785:40:23"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1904,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1876,
                      "src": "17839:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17849:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17839:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1915,
                  "nodeType": "IfStatement",
                  "src": "17835:57:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1910,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "17872:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "17872:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 1912,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1876,
                          "src": "17884:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1907,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "17852:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4557,
                        "src": "17852:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17852:40:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1914,
                    "nodeType": "ExpressionStatement",
                    "src": "17852:40:23"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1872,
              "nodeType": "StructuredDocumentation",
              "src": "17535:38:23",
              "text": "@dev Callback for Uniswap V3 pool."
            },
            "functionSelector": "d3487997",
            "id": 1917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3MintCallback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1880,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17703:8:23"
            },
            "parameters": {
              "id": 1879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1874,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1917,
                  "src": "17618:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17618:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1917,
                  "src": "17643:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17643:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1878,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1917,
                  "src": "17668:19:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1877,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17668:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17608:85:23"
            },
            "returnParameters": {
              "id": 1881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17712:0:23"
            },
            "scope": 2169,
            "src": "17578:321:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1965,
              "nodeType": "Block",
              "src": "18104:257:23",
              "statements": [
                {
                  "expression": {
                    "id": 1934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1929,
                      "name": "accruedProtocolFees0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "18114:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1932,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "18162:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1930,
                          "name": "accruedProtocolFees0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "18137:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3791,
                        "src": "18137:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18137:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18114:56:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1935,
                  "nodeType": "ExpressionStatement",
                  "src": "18114:56:23"
                },
                {
                  "expression": {
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1936,
                      "name": "accruedProtocolFees1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 562,
                      "src": "18180:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1939,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1922,
                          "src": "18228:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1937,
                          "name": "accruedProtocolFees1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "18203:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3791,
                        "src": "18203:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18203:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18180:56:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1942,
                  "nodeType": "ExpressionStatement",
                  "src": "18180:56:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1943,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1920,
                      "src": "18250:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18260:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18250:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1953,
                  "nodeType": "IfStatement",
                  "src": "18246:49:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1949,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1924,
                          "src": "18283:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1950,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "18287:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1946,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "18263:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4557,
                        "src": "18263:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18263:32:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1952,
                    "nodeType": "ExpressionStatement",
                    "src": "18263:32:23"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1954,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1922,
                      "src": "18309:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18319:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18309:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1964,
                  "nodeType": "IfStatement",
                  "src": "18305:49:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1960,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1924,
                          "src": "18342:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1961,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1922,
                          "src": "18346:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1957,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "18322:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4557,
                        "src": "18322:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18322:32:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1963,
                    "nodeType": "ExpressionStatement",
                    "src": "18322:32:23"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1918,
              "nodeType": "StructuredDocumentation",
              "src": "17905:69:23",
              "text": " @notice Used to collect accumulated protocol fees."
            },
            "functionSelector": "0430c130",
            "id": 1966,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1927,
                "modifierName": {
                  "id": 1926,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2168,
                  "src": "18089:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18089:14:23"
              }
            ],
            "name": "collectProtocol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1920,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "18013:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18013:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1922,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "18038:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18038:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1924,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "18063:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18063:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18003:76:23"
            },
            "returnParameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18104:0:23"
            },
            "scope": 2169,
            "src": "17979:382:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1996,
              "nodeType": "Block",
              "src": "18557:109:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          },
                          "id": 1981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1979,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1969,
                            "src": "18575:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4523",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1980,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "18584:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4523",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "18575:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$4523",
                            "typeString": "contract IERC20"
                          },
                          "id": 1984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1982,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1969,
                            "src": "18594:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4523",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1983,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "18603:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4523",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "18594:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "18575:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e",
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18611:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        },
                        "value": "token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        }
                      ],
                      "id": 1978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18567:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18567:52:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "18567:52:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1992,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1973,
                        "src": "18648:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1993,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1971,
                        "src": "18652:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1989,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "18629:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4523",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4557,
                      "src": "18629:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18629:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1995,
                  "nodeType": "ExpressionStatement",
                  "src": "18629:30:23"
                }
              ]
            },
            "documentation": {
              "id": 1967,
              "nodeType": "StructuredDocumentation",
              "src": "18367:74:23",
              "text": " @notice Removes tokens accidentally sent to this vault."
            },
            "functionSelector": "dc2c256f",
            "id": 1997,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1976,
                "modifierName": {
                  "id": 1975,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2168,
                  "src": "18542:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18542:14:23"
              }
            ],
            "name": "sweep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1997,
                  "src": "18470:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$4523",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4523,
                    "src": "18470:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4523",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1971,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1997,
                  "src": "18492:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18492:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1973,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1997,
                  "src": "18516:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18516:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18460:72:23"
            },
            "returnParameters": {
              "id": 1977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18557:0:23"
            },
            "scope": 2169,
            "src": "18446:220:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "18919:37:23",
              "statements": [
                {
                  "expression": {
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2005,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "18929:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2006,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2000,
                      "src": "18940:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18929:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2008,
                  "nodeType": "ExpressionStatement",
                  "src": "18929:20:23"
                }
              ]
            },
            "documentation": {
              "id": 1998,
              "nodeType": "StructuredDocumentation",
              "src": "18672:178:23",
              "text": " @notice Used to set the strategy contract that determines the position\n ranges and calls rebalance(). Must be called after this vault is\n deployed."
            },
            "functionSelector": "33a100ca",
            "id": 2010,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2003,
                "modifierName": {
                  "id": 2002,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2168,
                  "src": "18904:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18904:14:23"
              }
            ],
            "name": "setStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2000,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "18876:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18876:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18875:19:23"
            },
            "returnParameters": {
              "id": 2004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18919:0:23"
            },
            "scope": 2169,
            "src": "18855:101:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2029,
              "nodeType": "Block",
              "src": "19175:95:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2019,
                          "name": "_protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2013,
                          "src": "19193:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 2020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19208:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "19193:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f746f636f6c466565",
                        "id": 2022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19213:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                          "typeString": "literal_string \"protocolFee\""
                        },
                        "value": "protocolFee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                          "typeString": "literal_string \"protocolFee\""
                        }
                      ],
                      "id": 2018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19185:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19185:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2024,
                  "nodeType": "ExpressionStatement",
                  "src": "19185:42:23"
                },
                {
                  "expression": {
                    "id": 2027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2025,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "19237:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2026,
                      "name": "_protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "19251:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19237:26:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2028,
                  "nodeType": "ExpressionStatement",
                  "src": "19237:26:23"
                }
              ]
            },
            "documentation": {
              "id": 2011,
              "nodeType": "StructuredDocumentation",
              "src": "18962:138:23",
              "text": " @notice Used to change the protocol fee charged on pool fees earned from\n Uniswap, expressed as multiple of 1e-6."
            },
            "functionSelector": "787dce3d",
            "id": 2030,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2016,
                "modifierName": {
                  "id": 2015,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2168,
                  "src": "19160:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19160:14:23"
              }
            ],
            "name": "setProtocolFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "_protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2030,
                  "src": "19129:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19129:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19128:22:23"
            },
            "returnParameters": {
              "id": 2017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19175:0:23"
            },
            "scope": 2169,
            "src": "19105:165:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2042,
              "nodeType": "Block",
              "src": "19628:49:23",
              "statements": [
                {
                  "expression": {
                    "id": 2040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2038,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 542,
                      "src": "19638:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2039,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2033,
                      "src": "19655:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19638:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2041,
                  "nodeType": "ExpressionStatement",
                  "src": "19638:32:23"
                }
              ]
            },
            "documentation": {
              "id": 2031,
              "nodeType": "StructuredDocumentation",
              "src": "19276:271:23",
              "text": " @notice Used to change deposit cap for a guarded launch or to ensure\n vault doesn't grow too large relative to the pool. Cap is on total\n supply rather than amounts of token0 and token1 as those amounts\n fluctuate naturally over time."
            },
            "functionSelector": "3f3e4c11",
            "id": 2043,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2036,
                "modifierName": {
                  "id": 2035,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2168,
                  "src": "19613:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19613:14:23"
              }
            ],
            "name": "setMaxTotalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2033,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2043,
                  "src": "19579:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19579:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19578:25:23"
            },
            "returnParameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19628:0:23"
            },
            "scope": 2169,
            "src": "19552:125:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2053,
              "nodeType": "Block",
              "src": "19811:33:23",
              "statements": [
                {
                  "expression": {
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2049,
                      "name": "finalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "19821:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19833:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "19821:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2052,
                  "nodeType": "ExpressionStatement",
                  "src": "19821:16:23"
                }
              ]
            },
            "documentation": {
              "id": 2044,
              "nodeType": "StructuredDocumentation",
              "src": "19683:79:23",
              "text": " @notice Used to renounce emergency powers. Cannot be undone."
            },
            "functionSelector": "4bb278f3",
            "id": 2054,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2047,
                "modifierName": {
                  "id": 2046,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2168,
                  "src": "19796:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19796:14:23"
              }
            ],
            "name": "finalize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19784:2:23"
            },
            "returnParameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19811:0:23"
            },
            "scope": 2169,
            "src": "19767:77:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2078,
              "nodeType": "Block",
              "src": "20061:97:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "20079:10:23",
                        "subExpression": {
                          "id": 2065,
                          "name": "finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "20080:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696e616c697a6564",
                        "id": 2067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20091:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60cfc0e4c73ce8e46b07c3167ce01ce17e6c2deaaa5b88b977bbb10abe25c9ad",
                          "typeString": "literal_string \"finalized\""
                        },
                        "value": "finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60cfc0e4c73ce8e46b07c3167ce01ce17e6c2deaaa5b88b977bbb10abe25c9ad",
                          "typeString": "literal_string \"finalized\""
                        }
                      ],
                      "id": 2064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20071:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20071:32:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2069,
                  "nodeType": "ExpressionStatement",
                  "src": "20071:32:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2073,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20132:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20132:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2075,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2059,
                        "src": "20144:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2070,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2057,
                        "src": "20113:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4523",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4557,
                      "src": "20113:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20113:38:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2077,
                  "nodeType": "ExpressionStatement",
                  "src": "20113:38:23"
                }
              ]
            },
            "documentation": {
              "id": 2055,
              "nodeType": "StructuredDocumentation",
              "src": "19850:125:23",
              "text": " @notice Transfers tokens to governance in case of emergency. Cannot be\n called if already finalized."
            },
            "functionSelector": "95ccea67",
            "id": 2079,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2062,
                "modifierName": {
                  "id": 2061,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2168,
                  "src": "20046:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20046:14:23"
              }
            ],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2057,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2079,
                  "src": "20007:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$4523",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2056,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4523,
                    "src": "20007:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4523",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2059,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2079,
                  "src": "20021:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20021:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20006:30:23"
            },
            "returnParameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20061:0:23"
            },
            "scope": 2169,
            "src": "19980:178:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2124,
              "nodeType": "Block",
              "src": "20445:195:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "20463:10:23",
                        "subExpression": {
                          "id": 2092,
                          "name": "finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "20464:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696e616c697a6564",
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20475:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60cfc0e4c73ce8e46b07c3167ce01ce17e6c2deaaa5b88b977bbb10abe25c9ad",
                          "typeString": "literal_string \"finalized\""
                        },
                        "value": "finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60cfc0e4c73ce8e46b07c3167ce01ce17e6c2deaaa5b88b977bbb10abe25c9ad",
                          "typeString": "literal_string \"finalized\""
                        }
                      ],
                      "id": 2091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20455:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20455:32:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "20455:32:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2100,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "20507:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2101,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2084,
                        "src": "20518:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2102,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2086,
                        "src": "20529:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 2097,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "20497:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5272,
                      "src": "20497:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                      }
                    },
                    "id": 2103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20497:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 2104,
                  "nodeType": "ExpressionStatement",
                  "src": "20497:42:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20562:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20562:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2110,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "20574:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2111,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2084,
                        "src": "20585:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20601:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 2113,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "20601:7:23",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 2112,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "20596:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20596:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 2116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "20596:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20620:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 2118,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "20620:7:23",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 2117,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "20615:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20615:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 2121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "20615:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 2105,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "20549:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5258,
                      "src": "20549:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function (address,int24,int24,uint128,uint128) external returns (uint128,uint128)"
                      }
                    },
                    "id": 2122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20549:84:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "id": 2123,
                  "nodeType": "ExpressionStatement",
                  "src": "20549:84:23"
                }
              ]
            },
            "documentation": {
              "id": 2080,
              "nodeType": "StructuredDocumentation",
              "src": "20164:146:23",
              "text": " @notice Removes liquidity and transfer tokens to governance in case of\n emergency. Cannot be called if already finalized."
            },
            "functionSelector": "abbffcb9",
            "id": 2125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2089,
                "modifierName": {
                  "id": 2088,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2168,
                  "src": "20430:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20430:14:23"
              }
            ],
            "name": "emergencyBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2082,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 2125,
                  "src": "20347:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "20347:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 2125,
                  "src": "20372:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "20372:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 2125,
                  "src": "20397:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "20397:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20337:83:23"
            },
            "returnParameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20445:0:23"
            },
            "scope": 2169,
            "src": "20315:325:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2137,
              "nodeType": "Block",
              "src": "20882:48:23",
              "statements": [
                {
                  "expression": {
                    "id": 2135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2133,
                      "name": "pendingGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "20892:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2134,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2128,
                      "src": "20912:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20892:31:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2136,
                  "nodeType": "ExpressionStatement",
                  "src": "20892:31:23"
                }
              ]
            },
            "documentation": {
              "id": 2126,
              "nodeType": "StructuredDocumentation",
              "src": "20646:163:23",
              "text": " @notice Governance address is not updated until the new governance\n address has called `acceptGovernance()` to accept this responsibility."
            },
            "functionSelector": "ab033ea9",
            "id": 2138,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2131,
                "modifierName": {
                  "id": 2130,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2168,
                  "src": "20867:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20867:14:23"
              }
            ],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2128,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2138,
                  "src": "20837:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20837:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20836:21:23"
            },
            "returnParameters": {
              "id": 2132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20882:0:23"
            },
            "scope": 2169,
            "src": "20814:116:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2155,
              "nodeType": "Block",
              "src": "21113:111:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2143,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "21131:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21131:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2145,
                          "name": "pendingGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "21145:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "21131:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70656e64696e67476f7665726e616e6365",
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21164:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75cf2b35fcd3ae39eaae9f0f8330524c89324e61aa5b818420bc93e577fb9a45",
                          "typeString": "literal_string \"pendingGovernance\""
                        },
                        "value": "pendingGovernance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75cf2b35fcd3ae39eaae9f0f8330524c89324e61aa5b818420bc93e577fb9a45",
                          "typeString": "literal_string \"pendingGovernance\""
                        }
                      ],
                      "id": 2142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21123:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21123:61:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2149,
                  "nodeType": "ExpressionStatement",
                  "src": "21123:61:23"
                },
                {
                  "expression": {
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2150,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "21194:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2151,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "21207:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "21207:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "21194:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "21194:23:23"
                }
              ]
            },
            "documentation": {
              "id": 2139,
              "nodeType": "StructuredDocumentation",
              "src": "20936:135:23",
              "text": " @notice `setGovernance()` should be called by the existing governance\n address prior to calling this function."
            },
            "functionSelector": "238efcbc",
            "id": 2156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21101:2:23"
            },
            "returnParameters": {
              "id": 2141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21113:0:23"
            },
            "scope": 2169,
            "src": "21076:148:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2167,
              "nodeType": "Block",
              "src": "21254:75:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2159,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "21272:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21272:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2161,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "21286:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "21272:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "676f7665726e616e6365",
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21298:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        },
                        "value": "governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        }
                      ],
                      "id": 2158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21264:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21264:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2165,
                  "nodeType": "ExpressionStatement",
                  "src": "21264:47:23"
                },
                {
                  "id": 2166,
                  "nodeType": "PlaceholderStatement",
                  "src": "21321:1:23"
                }
              ]
            },
            "id": 2168,
            "name": "onlyGovernance",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21254:0:23"
            },
            "src": "21230:99:23",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2170,
        "src": "876:20455:23"
      }
    ],
    "src": "39:21293:23"
  },
  "bytecode": "60e06040523480156200001157600080fd5b50604051620041a7380380620041a7833981810160405260608110156200003757600080fd5b50805160208083015160409384015184518086018652600b81526a105b1c1a184815985d5b1d60aa1b8185019081528651808801909752600287526120ab60f11b9487019490945280519495929491939092916200009891600391620002d0565b508051620000ae906004906020840190620002d0565b50506005805460ff19166012179055506001600655600780546001600160a01b038086166001600160a01b0319909216919091179182905560408051630dfe168160e01b815290519290911691630dfe168191600480820192602092909190829003018186803b1580156200012257600080fd5b505afa15801562000137573d6000803e3d6000fd5b505050506040513d60208110156200014e57600080fd5b505160601b6001600160601b0319166080526007546040805163d21220a760e01b815290516001600160a01b039092169163d21220a791600480820192602092909190829003018186803b158015620001a657600080fd5b505afa158015620001bb573d6000803e3d6000fd5b505050506040513d6020811015620001d257600080fd5b505160601b6001600160601b03191660a052600754604080516334324e9f60e21b815290516001600160a01b039092169163d0c93a7c91600480820192602092909190829003018186803b1580156200022a57600080fd5b505afa1580156200023f573d6000803e3d6000fd5b505050506040513d60208110156200025657600080fd5b5051600290810b900b60e81b60c05260088290556009819055600b80546001600160a01b03191633179055620f42408210620002c7576040805162461bcd60e51b815260206004820152600b60248201526a70726f746f636f6c46656560a81b604482015290519081900360640190fd5b5050506200037c565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000308576000855562000353565b82601f106200032357805160ff191683800117855562000353565b8280016001018555821562000353579182015b828111156200035357825182559160200191906001019062000336565b506200036192915062000365565b5090565b5b8082111562000361576000815560010162000366565b60805160601c60a05160601c60c05160e81c613db4620003f360003980611a2c52806126665250806108bb5280610f235280611a505280611c4a5280611de85280611ea05280612b35525080610881528061099d5280610ee85280611c105280611dae5280611e635280612a895250613db46000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c806389a28eb211610146578063b3f05b97116100c3578063d348799711610087578063d34879971461070a578063dc2c256f14610786578063dd62ed3e146107bc578063eae989a2146107ea578063f39c38a0146107f2578063fa082743146107fa5761025e565b8063b3f05b9714610699578063c4a7761e146106a1578063d0c93a7c146106c2578063d21220a7146106ca578063d331bef7146106d25761025e565b8063a8c62e761161010a578063a8c62e76146105fd578063a9059cbb14610605578063ab033ea914610631578063abbffcb914610657578063b0e21e8a146106915761025e565b806389a28eb21461054b57806395ccea671461059557806395d89b41146105c1578063a00fa77f146105c9578063a457c2d7146105d15761025e565b8063313ce567116101df5780634bb278f3116101a35780634bb278f3146104e857806351e87af7146104f05780635aa6e675146104f857806370a0823114610500578063787dce3d14610526578063888a9134146105435761025e565b8063313ce567146103ff57806333a100ca1461041d578063365d0ed714610443578063395093511461049f5780633f3e4c11146104cb5761025e565b806316f0115b1161022657806316f0115b1461039757806318160ddd1461039f578063238efcbc146103b957806323b872dd146103c15780632ab4d052146103f75761025e565b80630430c1301461026357806306fdde0314610297578063095ea7b3146103145780630dfe1681146103545780630f35bcac14610378575b600080fd5b6102956004803603606081101561027957600080fd5b50803590602081013590604001356001600160a01b0316610802565b005b61029f6108e7565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d95781810151838201526020016102c1565b50505050905090810190601f1680156103065780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103406004803603604081101561032a57600080fd5b506001600160a01b03813516906020013561097d565b604080519115158252519081900360200190f35b61035c61099b565b604080516001600160a01b039092168252519081900360200190f35b6103806109bf565b6040805160029290920b8252519081900360200190f35b61035c6109c8565b6103a76109d7565b60408051918252519081900360200190f35b6102956109dd565b610340600480360360608110156103d757600080fd5b506001600160a01b03813581169160208101359091169060400135610a44565b6103a7610acc565b610407610ad2565b6040805160ff9092168252519081900360200190f35b6102956004803603602081101561043357600080fd5b50356001600160a01b0316610adb565b610481600480360360a081101561045957600080fd5b50803590602081013590604081013590606081013590608001356001600160a01b0316610b49565b60408051938452602084019290925282820152519081900360600190f35b610340600480360360408110156104b557600080fd5b506001600160a01b038135169060200135611004565b610295600480360360208110156104e157600080fd5b5035611052565b6102956110a3565b610380611104565b61035c611114565b6103a76004803603602081101561051657600080fd5b50356001600160a01b0316611123565b6102956004803603602081101561053c57600080fd5b5035611142565b6103806111d8565b610295600480360360c081101561056157600080fd5b508035600290810b916020810135820b916040820135810b916060810135820b916080820135810b9160a00135900b6111e8565b610295600480360360408110156105ab57600080fd5b506001600160a01b0381351690602001356115b1565b61029f611660565b6103a76116c1565b610340600480360360408110156105e757600080fd5b506001600160a01b0381351690602001356116c7565b61035c61172f565b6103406004803603604081101561061b57600080fd5b506001600160a01b03813516906020013561173e565b6102956004803603602081101561064757600080fd5b50356001600160a01b0316611752565b6102956004803603606081101561066d57600080fd5b508035600290810b91602081013590910b90604001356001600160801b03166117c0565b6103a7611989565b61034061198f565b6106a961199f565b6040805192835260208301919091528051918290030190f35b610380611a2a565b61035c611a4e565b6106a9600480360360808110156106e857600080fd5b50803590602081013590604081013590606001356001600160a01b0316611a72565b6102956004803603606081101561072057600080fd5b81359160208101359181019060608101604082013564010000000081111561074757600080fd5b82018360208201111561075957600080fd5b8035906020019184600183028401116401000000008311171561077b57600080fd5b509092509050611d84565b6102956004803603606081101561079c57600080fd5b506001600160a01b03813581169160208101359160409091013516611e15565b6103a7600480360360408110156107d257600080fd5b506001600160a01b0381358116916020013516611f22565b6103a7611f4d565b61035c611f53565b610380611f62565b600b546001600160a01b0316331461084e576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600e5461085b9084611f72565b600e55600f5461086b9083611f72565b600f5582156108a8576108a86001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168285611fcf565b81156108e2576108e26001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168284611fcf565b505050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109735780601f1061094857610100808354040283529160200191610973565b820191906000526020600020905b81548152906001019060200180831161095657829003601f168201915b5050505050905090565b600061099161098a612021565b8484612025565b5060015b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600d5460020b81565b6007546001600160a01b031681565b60025490565b600c546001600160a01b03163314610a30576040805162461bcd60e51b815260206004820152601160248201527070656e64696e67476f7665726e616e636560781b604482015290519081900360640190fd5b600b80546001600160a01b03191633179055565b6000610a51848484612111565b610ac184610a5d612021565b610abc85604051806060016040528060288152602001613c9e602891396001600160a01b038a16600090815260016020526040812090610a9b612021565b6001600160a01b03168152602081019190915260400160002054919061226c565b612025565b5060015b9392505050565b60095481565b60055460ff1690565b600b546001600160a01b03163314610b27576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600080600060026006541415610ba6576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260065587151580610bb95750600087115b610c0a576040805162461bcd60e51b815260206004820181905260248201527f616d6f756e743044657369726564206f7220616d6f756e743144657369726564604482015290519081900360640190fd5b6001600160a01b03841615801590610c2b57506001600160a01b0384163014155b610c61576040805162461bcd60e51b8152602060048201526002602482015261746f60f01b604482015290519081900360640190fd5b600c54600090610c8690600160a81b8104600290810b91600160c01b9004900b612303565b6001600160801b03161115610d3657600754600c546040805163a34123a760e01b8152600160a81b8304600290810b810b6004830152600160c01b909304830b90920b602483015260006044830181905281516001600160a01b039094169363a34123a79360648082019493918390030190829087803b158015610d0957600080fd5b505af1158015610d1d573d6000803e3d6000fd5b505050506040513d6040811015610d3357600080fd5b50505b600c54600d54600091610d5891600160d81b909104600290810b91900b612303565b6001600160801b03161115610e0557600754600c54600d546040805163a34123a760e01b8152600160d81b909304600290810b810b600485015291820b90910b602483015260006044830181905281516001600160a01b039094169363a34123a79360648082019493918390030190829087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b505050506040513d6040811015610e0257600080fd5b50505b610e0f8888612394565b9194509250905082610e51576040805162461bcd60e51b815260206004820152600660248201526573686172657360d01b604482015290519081900360640190fd5b85821015610e93576040805162461bcd60e51b815260206004820152600a60248201526930b6b7bab73a1826b4b760b11b604482015290519081900360640190fd5b84811015610ed5576040805162461bcd60e51b815260206004820152600a60248201526930b6b7bab73a18a6b4b760b11b604482015290519081900360640190fd5b8115610f1057610f106001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330856124c0565b8015610f4b57610f4b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846124c0565b610f55848461251a565b604080518481526020810184905280820183905290516001600160a01b0386169133917f4e2ca0515ed1aef1395f66b5303bb5d6f1bf9d61a353fa53f73f8ac9973fa9f69181900360600190a3600954610fad6109d7565b1115610ff1576040805162461bcd60e51b815260206004820152600e60248201526d6d6178546f74616c537570706c7960901b604482015290519081900360640190fd5b6001600681905550955095509592505050565b6000610991611011612021565b84610abc8560016000611022612021565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061260a565b600b546001600160a01b0316331461109e576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600955565b600b546001600160a01b031633146110ef576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600c805460ff60a01b1916600160a01b179055565b600c54600160d81b900460020b81565b600b546001600160a01b031681565b6001600160a01b0381166000908152602081905260409020545b919050565b600b546001600160a01b0316331461118e576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b620f424081106111d3576040805162461bcd60e51b815260206004820152600b60248201526a70726f746f636f6c46656560a81b604482015290519081900360640190fd5b600855565b600c54600160c01b900460020b81565b60026006541415611240576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600655600a546001600160a01b0316331461128f576040805162461bcd60e51b8152602060048201526008602482015267737472617465677960c01b604482015290519081900360640190fd5b6112998686612664565b6112a38484612664565b6112ad8282612664565b60075460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e0929190829003018186803b1580156112f257600080fd5b505afa158015611306573d6000803e3d6000fd5b505050506040513d60e081101561131c57600080fd5b50602001519050600281810b9085900b131561136a576040805162461bcd60e51b81526020600482015260086024820152673134b22ab83832b960c11b604482015290519081900360640190fd5b8060020b8360020b136113af576040805162461bcd60e51b815260206004820152600860248201526730b9b5a637bbb2b960c11b604482015290519081900360640190fd5b600c546113d190600160a81b8104600290810b91600160c01b9004900b612844565b600c54600d546113ef91600160d81b9004600290810b91900b612844565b60006113f9612a7f565b90506000611405612b2b565b90507f210f60adf1db7a02e9db9a49ec7c2eb2060c516cbcfd01a0c05288144738ee5d8383836114336109d7565b6040805160029590950b85526020850193909352838301919091526060830152519081900360800190a1600061146b8a8a8585612ba0565b90506114788a8a83612c46565b600c805460028c810b62ffffff908116600160a81b0262ffffff60a81b19928e900b909116600160c01b0262ffffff60c01b1990931692909217161790556114be612a7f565b92506114c8612b2b565b915060006114d889898686612ba0565b905060006114e888888787612ba0565b9050806001600160801b0316826001600160801b031611156115535761150f8a8a84612c46565b600d805462ffffff191662ffffff60028c810b821692909217909255600c805462ffffff60d81b1916600160d81b928e900b9093169190910291909117905561159e565b61155e888883612c46565b600d805462ffffff191662ffffff60028a810b821692909217909255600c805462ffffff60d81b1916600160d81b928c900b909316919091029190911790555b5050600160065550505050505050505050565b600b546001600160a01b031633146115fd576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600c54600160a01b900460ff1615611648576040805162461bcd60e51b8152602060048201526009602482015268199a5b985b1a5e995960ba1b604482015290519081900360640190fd5b61165c6001600160a01b0383163383611fcf565b5050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109735780601f1061094857610100808354040283529160200191610973565b600f5481565b60006109916116d4612021565b84610abc85604051806060016040528060258152602001613d5a60259139600160006116fe612021565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061226c565b600a546001600160a01b031681565b600061099161174b612021565b8484612111565b600b546001600160a01b0316331461179e576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b0316331461180c576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600c54600160a01b900460ff1615611857576040805162461bcd60e51b8152602060048201526009602482015268199a5b985b1a5e995960ba1b604482015290519081900360640190fd5b6007546040805163a34123a760e01b8152600286810b600483015285900b60248201526001600160801b038416604482015281516001600160a01b039093169263a34123a7926064808401939192918290030181600087803b1580156118bc57600080fd5b505af11580156118d0573d6000803e3d6000fd5b505050506040513d60408110156118e657600080fd5b5050600754604080516309e3d67b60e31b8152336004820152600286810b602483015285900b60448201526001600160801b0360648201819052608482015281516001600160a01b0390931692634f1eb3d89260a4808401939192918290030181600087803b15801561195857600080fd5b505af115801561196c573d6000803e3d6000fd5b505050506040513d604081101561198257600080fd5b5050505050565b60085481565b600c54600160a01b900460ff1681565b600c546000908190819081906119ca90600160a81b8104600290810b91600160c01b9004900b612cd0565b600c54600d5492945090925060009182916119f491600160d81b909104600290810b91900b612cd0565b91509150611a0e82611a0886611a08612a7f565b9061260a565b9550611a2081611a0885611a08612b2b565b9450505050509091565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060026006541415611acd576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260065585611b0d576040805162461bcd60e51b815260206004820152600660248201526573686172657360d01b604482015290519081900360640190fd5b6001600160a01b03831615801590611b2e57506001600160a01b0383163014155b611b64576040805162461bcd60e51b8152602060048201526002602482015261746f60f01b604482015290519081900360640190fd5b600c546000908190611b8d90600160a81b8104600290810b91600160c01b9004900b8a88612dc5565b600c54600d549294509092506000918291611bb991600160d81b909104600290810b91900b8c8a612dc5565b915091506000611bc76109d7565b90506000611be782611be18e611bdb612a7f565b90612f9e565b90612ff7565b90506000611bfb83611be18f611bdb612b2b565b90508115611c3757611c376001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168b84611fcf565b8015611c7157611c716001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168b83611fcf565b611c7f82611a08898861260a565b9850611c8f81611a08888761260a565b97508b891015611cd3576040805162461bcd60e51b815260206004820152600a60248201526930b6b7bab73a1826b4b760b11b604482015290519081900360640190fd5b8a881015611d15576040805162461bcd60e51b815260206004820152600a60248201526930b6b7bab73a18a6b4b760b11b604482015290519081900360640190fd5b611d1f338e61305e565b604080518e8152602081018b90528082018a905290516001600160a01b038c169133917febff2602b3f468259e1e99f613fed6691f3a6526effe6ef3e768ba7ae7a36c4f9181900360600190a350505050505050600160068190555094509492505050565b6007546001600160a01b03163314611d9b57600080fd5b8315611dd557611dd56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163386611fcf565b8215611e0f57611e0f6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385611fcf565b50505050565b600b546001600160a01b03163314611e61576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614158015611ed557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b611f0e576040805162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b604482015290519081900360640190fd5b6108e26001600160a01b0384168284611fcf565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600e5481565b600c546001600160a01b031681565b600c54600160a81b900460020b81565b600082821115611fc9576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526108e290849061315a565b3390565b6001600160a01b03831661206a5760405162461bcd60e51b8152600401808060200182810382526024815260200180613d0c6024913960400191505060405180910390fd5b6001600160a01b0382166120af5760405162461bcd60e51b8152600401808060200182810382526022815260200180613c0f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166121565760405162461bcd60e51b8152600401808060200182810382526025815260200180613ce76025913960400191505060405180910390fd5b6001600160a01b03821661219b5760405162461bcd60e51b8152600401808060200182810382526023815260200180613bca6023913960400191505060405180910390fd5b6121a68383836108e2565b6121e381604051806060016040528060268152602001613c31602691396001600160a01b038616600090815260208190526040902054919061226c565b6001600160a01b038085166000908152602081905260408082209390935590841681522054612212908261260a565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156122fb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156122c05781810151838201526020016122a8565b50505050905090810190601f1680156122ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008061231130858561320b565b6007546040805163514ea4bf60e01b81526004810184905290519293506001600160a01b039091169163514ea4bf9160248082019260a092909190829003018186803b15801561236057600080fd5b505afa158015612374573d6000803e3d6000fd5b505050506040513d60a081101561238a57600080fd5b5051949350505050565b6000806000806123a26109d7565b90506000806123af61199f565b9150915082600014806123c25750600082115b806123cd5750600081115b6123d357fe5b826123ef578794508693506123e88585613261565b95506124b6565b81612405578693506123e881611be18686612f9e565b8061241b578794506123e882611be18786612f9e565b600061243961242a8a84612f9e565b6124348a86612f9e565b613278565b905060008111612478576040805162461bcd60e51b815260206004820152600560248201526463726f737360d81b604482015290519081900360640190fd5b61248b6001611a0884611be18584611f72565b95506124a06001611a0885611be18584611f72565b94506124b282611be185818589612f9e565b9650505b5050509250925092565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611e0f90859061315a565b6001600160a01b038216612575576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b612581600083836108e2565b60025461258e908261260a565b6002556001600160a01b0382166000908152602081905260409020546125b4908261260a565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600082820183811015610ac5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000600282810b9084900b126126d8576040805162461bcd60e51b81526020600482015260156024820152743a34b1b5a637bbb2b9101e103a34b1b5aab83832b960591b604482015290519081900360640190fd5b620d89e719600284900b1215612729576040805162461bcd60e51b81526020600482015260116024820152707469636b4c6f77657220746f6f206c6f7760781b604482015290519081900360640190fd5b620d89e8600283900b131561277a576040805162461bcd60e51b81526020600482015260126024820152710e8d2c6d6aae0e0cae440e8dede40d0d2ced60731b604482015290519081900360640190fd5b8060020b8360020b8161278957fe5b0760020b156127df576040805162461bcd60e51b815260206004820152601760248201527f7469636b4c6f7765722025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b8060020b8260020b816127ee57fe5b0760020b156108e2576040805162461bcd60e51b815260206004820152601760248201527f7469636b55707065722025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b60008060006128538585612303565b90506001600160801b03811615612902576007546040805163a34123a760e01b8152600288810b600483015287900b60248201526001600160801b038416604482015281516001600160a01b039093169263a34123a7926064808401939192918290030181600087803b1580156128c957600080fd5b505af11580156128dd573d6000803e3d6000fd5b505050506040513d60408110156128f357600080fd5b50805160209091015190935091505b600754604080516309e3d67b60e31b8152306004820152600288810b602483015287900b60448201526001600160801b03606482018190526084820152815160009384936001600160a01b0390911692634f1eb3d89260a4808301939282900301818787803b15801561297457600080fd5b505af1158015612988573d6000803e3d6000fd5b505050506040513d604081101561299e57600080fd5b5080516020909101516001600160801b03918216935016905060006129c38387611f72565b905060006129d18387611f72565b60085490915060009081908015612a2a576129f3620f4240611be18784612f9e565b9250612a06620f4240611be18684612f9e565b600e54909250612a16908461260a565b600e55600f54612a26908361260a565b600f555b60408051868152602081018690528082018590526060810184905290517f1ac56d7e866e3f5ea9aa92aa11758ead39a0a5f013f3fefb0f47cb9d008edd279181900360800190a1505050505050505050505050565b6000612b26600e547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612af457600080fd5b505afa158015612b08573d6000803e3d6000fd5b505050506040513d6020811015612b1e57600080fd5b505190611f72565b905090565b6000612b26600f547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612af457600080fd5b600080600760009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015612bf157600080fd5b505afa158015612c05573d6000803e3d6000fd5b505050506040513d60e0811015612c1b57600080fd5b50519050612c3c81612c2c88613287565b612c3588613287565b87876135b9565b9695505050505050565b6001600160801b038116156108e25760075460408051633c8a7d8d60e01b8152306004820152600286810b602483015285900b60448201526001600160801b038416606482015260a06084820152600060a4820181905282516001600160a01b0390941693633c8a7d8d9360c4808501949193918390030190829087803b15801561195857600080fd5b6000806000612ce030868661320b565b90506000806000600760009054906101000a90046001600160a01b03166001600160a01b031663514ea4bf856040518263ffffffff1660e01b81526004018082815260200191505060a06040518083038186803b158015612d4057600080fd5b505afa158015612d54573d6000803e3d6000fd5b505050506040513d60a0811015612d6a57600080fd5b50805160608201516080909201519094509092509050612d8b88888561367d565b9096509450612da3866001600160801b03841661260a565b9550612db8856001600160801b03831661260a565b9450505050509250929050565b6000806000612dd48787612303565b90506000612df6612de36109d7565b611be16001600160801b03851689612f9e565b90508015612f93576007546001600160a01b031663a34123a78989612e1a85613727565b6040518463ffffffff1660e01b8152600401808460020b81526020018360020b8152602001826001600160801b0316815260200193505050506040805180830381600087803b158015612e6c57600080fd5b505af1158015612e80573d6000803e3d6000fd5b505050506040513d6040811015612e9657600080fd5b508051602090910151909450925083151580612eb25750600083115b15612f93576007546001600160a01b0316634f1eb3d8868a8a612ed489613727565b612edd89613727565b6040518663ffffffff1660e01b815260040180866001600160a01b031681526020018560020b81526020018460020b8152602001836001600160801b03168152602001826001600160801b03168152602001955050505050506040805180830381600087803b158015612f4f57600080fd5b505af1158015612f63573d6000803e3d6000fd5b505050506040513d6040811015612f7957600080fd5b5080516020909101516001600160801b0391821695501692505b505094509492505050565b600082612fad57506000610995565b82820282848281612fba57fe5b0414610ac55760405162461bcd60e51b8152600401808060200182810382526021815260200180613c7d6021913960400191505060405180910390fd5b600080821161304d576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161305657fe5b049392505050565b6001600160a01b0382166130a35760405162461bcd60e51b8152600401808060200182810382526021815260200180613cc66021913960400191505060405180910390fd5b6130af826000836108e2565b6130ec81604051806060016040528060228152602001613bed602291396001600160a01b038516600090815260208190526040902054919061226c565b6001600160a01b0383166000908152602081905260409020556002546131129082611f72565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006131af826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661373e9092919063ffffffff16565b8051909150156108e2578080602001905160208110156131ce57600080fd5b50516108e25760405162461bcd60e51b815260040180806020018281038252602a815260200180613d30602a913960400191505060405180910390fd5b6040805160609490941b6bffffffffffffffffffffffff1916602080860191909152600293840b60e890811b60348701529290930b90911b60378401528051808403601a018152603a9093019052815191012090565b6000818310156132715781610ac5565b5090919050565b60008183106132715781610ac5565b60008060008360020b1261329e578260020b6132a6565b8260020b6000035b9050620d89e88111156132e4576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b6000600182166132f857600160801b61330a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561333e576ffff97272373d413259a46990580e213a0260801c5b600482161561335d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561337c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561339b576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156133ba576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156133d9576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156133f8576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613418576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613438576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613458576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613478576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613498576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156134b8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156134d8576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156134f8576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613519576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613539576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613558576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613575576b048a170391f7dc42444e8fa20260801c5b60008460020b131561359057806000198161358c57fe5b0490505b6401000000008106156135a45760016135a7565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b031611156135d9579293925b846001600160a01b0316866001600160a01b031611613604576135fd858585613755565b9050613674565b836001600160a01b0316866001600160a01b0316101561366657600061362b878686613755565b9050600061363a8789866137b8565b9050806001600160801b0316826001600160801b03161061365b578061365d565b815b92505050613674565b6136718585846137b8565b90505b95945050505050565b6000806000600760009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156136d057600080fd5b505afa1580156136e4573d6000803e3d6000fd5b505050506040513d60e08110156136fa57600080fd5b5051905061371a8161370b88613287565b61371488613287565b876137f5565b9250925050935093915050565b60006001600160801b0382111561373a57fe5b5090565b606061374d8484600085613891565b949350505050565b6000826001600160a01b0316846001600160a01b03161115613775579192915b6000613798856001600160a01b0316856001600160a01b0316600160601b6139ec565b90506136746137b384838888036001600160a01b03166139ec565b613a9b565b6000826001600160a01b0316846001600160a01b031611156137d8579192915b61374d6137b383600160601b8787036001600160a01b03166139ec565b600080836001600160a01b0316856001600160a01b03161115613816579293925b846001600160a01b0316866001600160a01b0316116138415761383a858585613ab1565b9150613888565b836001600160a01b0316866001600160a01b0316101561387a57613866868585613ab1565b9150613873858785613b1a565b9050613888565b613885858585613b1a565b90505b94509492505050565b6060824710156138d25760405162461bcd60e51b8152600401808060200182810382526026815260200180613c576026913960400191505060405180910390fd5b6138db85613b5d565b61392c576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b6020831061396a5780518252601f19909201916020918201910161394b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146139cc576040519150601f19603f3d011682016040523d82523d6000602084013e6139d1565b606091505b50915091506139e1828286613b63565b979650505050505050565b6000808060001985870986860292508281109083900303905080613a225760008411613a1757600080fd5b508290049050610ac5565b808411613a2e57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b806001600160801b038116811461113d57600080fd5b6000826001600160a01b0316846001600160a01b03161115613ad1579192915b836001600160a01b0316613b0a606060ff16846001600160801b0316901b8686036001600160a01b0316866001600160a01b03166139ec565b81613b1157fe5b04949350505050565b6000826001600160a01b0316846001600160a01b03161115613b3a579192915b61374d826001600160801b03168585036001600160a01b0316600160601b6139ec565b3b151590565b60608315613b72575081610ac5565b825115613b825782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156122c05781810151838201526020016122a856fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220dce8d7a7edf09d3a1b911589256ab98d16ec5637988da43cd8225dc5d2e8e5a364736f6c63430007060033",
  "bytecodeSha1": "fe3830a11ab5aabf3544cbd0340caa01d8ab0f86",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "AlphaVault",
  "coverageMap": {
    "branches": {
      "0": {
        "Math.max": {
          "282": [
            307,
            313,
            true
          ]
        },
        "Math.min": {
          "283": [
            483,
            488,
            true
          ]
        }
      },
      "1": {
        "SafeMath.add": {
          "289": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "292": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mul": {
          "290": [
            3619,
            3625,
            false
          ],
          "291": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "287": [
            3221,
            3227,
            true
          ],
          "288": [
            5545,
            5551,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {
        "FullMath.mulDiv": {
          "267": [
            1540,
            1550,
            false
          ],
          "268": [
            1574,
            1589,
            true
          ],
          "269": [
            1828,
            1847,
            true
          ]
        }
      },
      "19": {
        "TickMath.getSqrtRatioAtTick": {
          "293": [
            1468,
            1476,
            true
          ],
          "294": [
            1543,
            1571,
            true
          ],
          "295": [
            1711,
            1729,
            false
          ],
          "296": [
            1804,
            1822,
            false
          ],
          "297": [
            1897,
            1915,
            false
          ],
          "298": [
            1990,
            2009,
            false
          ],
          "299": [
            2084,
            2103,
            false
          ],
          "300": [
            2178,
            2197,
            false
          ],
          "301": [
            2272,
            2291,
            false
          ],
          "302": [
            2366,
            2386,
            false
          ],
          "303": [
            2461,
            2481,
            false
          ],
          "304": [
            2556,
            2576,
            false
          ],
          "305": [
            2651,
            2671,
            false
          ],
          "306": [
            2746,
            2767,
            false
          ],
          "307": [
            2842,
            2863,
            false
          ],
          "308": [
            2938,
            2959,
            false
          ],
          "309": [
            3034,
            3055,
            false
          ],
          "310": [
            3130,
            3152,
            false
          ],
          "311": [
            3226,
            3248,
            false
          ],
          "312": [
            3321,
            3343,
            false
          ],
          "313": [
            3414,
            3436,
            false
          ],
          "314": [
            3503,
            3511,
            false
          ],
          "315": [
            3896,
            3918,
            true
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "261": [
            9456,
            9475,
            true
          ],
          "262": [
            9534,
            9555,
            true
          ]
        },
        "ERC20._burn": {
          "266": [
            8605,
            8626,
            true
          ]
        },
        "ERC20._mint": {
          "265": [
            7915,
            7936,
            true
          ]
        },
        "ERC20._transfer": {
          "263": [
            7136,
            7156,
            true
          ],
          "264": [
            7216,
            7239,
            true
          ]
        }
      },
      "20": {
        "LiquidityAmounts.getAmount0ForLiquidity": {
          "280": [
            4422,
            4451,
            false
          ]
        },
        "LiquidityAmounts.getAmount1ForLiquidity": {
          "281": [
            5278,
            5307,
            false
          ]
        },
        "LiquidityAmounts.getAmountsForLiquidity": {
          "276": [
            6241,
            6270,
            false
          ],
          "277": [
            6350,
            6379,
            false
          ],
          "278": [
            6489,
            6517,
            false
          ]
        },
        "LiquidityAmounts.getLiquidityForAmount0": {
          "274": [
            1266,
            1295,
            false
          ]
        },
        "LiquidityAmounts.getLiquidityForAmount1": {
          "275": [
            2180,
            2209,
            false
          ]
        },
        "LiquidityAmounts.getLiquidityForAmounts": {
          "270": [
            3218,
            3247,
            false
          ],
          "271": [
            3327,
            3356,
            false
          ],
          "272": [
            3466,
            3494,
            false
          ],
          "273": [
            3713,
            3736,
            true
          ]
        },
        "LiquidityAmounts.toUint128": {
          "279": [
            588,
            609,
            true
          ]
        }
      },
      "21": {},
      "23": {
        "AlphaVault._burnAllLiquidity": {
          "251": [
            12789,
            12802,
            false
          ],
          "252": [
            13467,
            13483,
            false
          ]
        },
        "AlphaVault._burnLiquidityShare": {
          "254": [
            9269,
            9282,
            false
          ],
          "255": [
            9392,
            9403,
            true
          ],
          "256": [
            9407,
            9418,
            false
          ]
        },
        "AlphaVault._calcSharesAndAmounts": {
          "242": [
            5859,
            5875,
            false
          ],
          "243": [
            6086,
            6097,
            false
          ],
          "244": [
            6217,
            6228,
            false
          ],
          "245": [
            6460,
            6469,
            true
          ]
        },
        "AlphaVault._checkRange": {
          "246": [
            12074,
            12095,
            true
          ],
          "247": [
            12139,
            12169,
            true
          ],
          "248": [
            12209,
            12239,
            true
          ],
          "249": [
            12280,
            12309,
            true
          ],
          "250": [
            12355,
            12384,
            true
          ]
        },
        "AlphaVault._mintLiquidity": {
          "253": [
            14092,
            14105,
            false
          ]
        },
        "AlphaVault.acceptGovernance": {
          "210": [
            21131,
            21162,
            true
          ]
        },
        "AlphaVault.collectProtocol": {
          "208": [
            18250,
            18261,
            false
          ],
          "209": [
            18309,
            18320,
            false
          ]
        },
        "AlphaVault.deposit": {
          "211": [
            4061,
            4079,
            true
          ],
          "212": [
            4083,
            4101,
            true
          ],
          "213": [
            4156,
            4172,
            false
          ],
          "214": [
            4176,
            4195,
            true
          ],
          "215": [
            4295,
            4339,
            false
          ],
          "216": [
            4413,
            4459,
            false
          ],
          "217": [
            4632,
            4642,
            true
          ],
          "218": [
            4671,
            4692,
            true
          ],
          "219": [
            4725,
            4746,
            true
          ],
          "220": [
            4814,
            4825,
            false
          ],
          "221": [
            4900,
            4911,
            false
          ],
          "222": [
            5118,
            5149,
            true
          ]
        },
        "AlphaVault.emergencyBurn": {
          "229": [
            20463,
            20473,
            true
          ]
        },
        "AlphaVault.emergencyWithdraw": {
          "228": [
            20079,
            20089,
            true
          ]
        },
        "AlphaVault.rebalance": {
          "224": [
            10302,
            10324,
            true
          ],
          "225": [
            10536,
            10553,
            true
          ],
          "226": [
            10584,
            10600,
            true
          ],
          "227": [
            11622,
            11649,
            false
          ]
        },
        "AlphaVault.setProtocolFee": {
          "223": [
            19193,
            19211,
            true
          ]
        },
        "AlphaVault.sweep": {
          "240": [
            18575,
            18590,
            false
          ],
          "241": [
            18594,
            18609,
            true
          ]
        },
        "AlphaVault.uniswapV3MintCallback": {
          "237": [
            17730,
            17757,
            true
          ],
          "238": [
            17772,
            17783,
            false
          ],
          "239": [
            17839,
            17850,
            false
          ]
        },
        "AlphaVault.withdraw": {
          "230": [
            7513,
            7523,
            true
          ],
          "231": [
            7552,
            7568,
            false
          ],
          "232": [
            7572,
            7591,
            true
          ],
          "233": [
            8227,
            8244,
            false
          ],
          "234": [
            8298,
            8315,
            false
          ],
          "235": [
            8560,
            8581,
            true
          ],
          "236": [
            8614,
            8635,
            true
          ]
        }
      },
      "27": {},
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "285": [
            3495,
            3516,
            false
          ],
          "286": [
            3624,
            3654,
            true
          ]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "259": [
            7234,
            7241,
            false
          ],
          "260": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "257": [
            4767,
            4797,
            true
          ],
          "258": [
            4858,
            4876,
            true
          ]
        }
      },
      "6": {},
      "7": {
        "AlphaVault.withdraw": {
          "284": [
            2277,
            2296,
            true
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Math.max": {
          "145": [
            300,
            321
          ]
        },
        "Math.min": {
          "146": [
            476,
            496
          ]
        }
      },
      "1": {
        "SafeMath.add": {
          "113": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "136": [
            4294,
            4338
          ],
          "137": [
            4348,
            4360
          ]
        },
        "SafeMath.mul": {
          "134": [
            3627,
            3635
          ],
          "135": [
            3672,
            3728
          ]
        },
        "SafeMath.sub": {
          "78": [
            3213,
            3262
          ],
          "79": [
            3272,
            3284
          ],
          "92": [
            5537,
            5566
          ],
          "93": [
            5576,
            5588
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {
        "FullMath.mulDiv": {
          "189": [
            1566,
            1590
          ],
          "190": [
            1691,
            1704
          ],
          "191": [
            1820,
            1848
          ],
          "192": [
            3707,
            3735
          ],
          "193": [
            3765,
            3793
          ],
          "194": [
            3824,
            3852
          ],
          "195": [
            3883,
            3911
          ],
          "196": [
            3942,
            3970
          ],
          "197": [
            4002,
            4030
          ],
          "198": [
            3102,
            3123
          ],
          "199": [
            4468,
            4488
          ]
        }
      },
      "19": {
        "TickMath.getSqrtRatioAtTick": {
          "147": [
            1535,
            1577
          ],
          "148": [
            1731,
            1790
          ],
          "149": [
            1824,
            1883
          ],
          "150": [
            1917,
            1976
          ],
          "151": [
            2011,
            2070
          ],
          "152": [
            2105,
            2164
          ],
          "153": [
            2199,
            2258
          ],
          "154": [
            2293,
            2352
          ],
          "155": [
            2388,
            2447
          ],
          "156": [
            2483,
            2542
          ],
          "157": [
            2578,
            2637
          ],
          "158": [
            2673,
            2732
          ],
          "159": [
            2769,
            2828
          ],
          "160": [
            2865,
            2924
          ],
          "161": [
            2961,
            3020
          ],
          "162": [
            3057,
            3116
          ],
          "163": [
            3154,
            3212
          ],
          "164": [
            3250,
            3307
          ],
          "165": [
            3345,
            3400
          ],
          "166": [
            3438,
            3488
          ],
          "167": [
            3513,
            3546
          ],
          "168": [
            3856,
            3928
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "82": [
            9448,
            9516
          ],
          "83": [
            9526,
            9594
          ],
          "84": [
            9605,
            9641
          ],
          "85": [
            9651,
            9688
          ]
        },
        "ERC20._burn": {
          "138": [
            8597,
            8664
          ],
          "139": [
            8675,
            8724
          ],
          "140": [
            8735,
            8824
          ],
          "141": [
            8834,
            8873
          ],
          "142": [
            8883,
            8925
          ]
        },
        "ERC20._mint": {
          "108": [
            7907,
            7972
          ],
          "109": [
            7983,
            8032
          ],
          "110": [
            8043,
            8082
          ],
          "111": [
            8092,
            8143
          ],
          "112": [
            8153,
            8195
          ]
        },
        "ERC20._transfer": {
          "86": [
            7128,
            7198
          ],
          "87": [
            7208,
            7279
          ],
          "88": [
            7290,
            7337
          ],
          "89": [
            7348,
            7439
          ],
          "90": [
            7449,
            7504
          ],
          "91": [
            7514,
            7554
          ]
        },
        "ERC20.allowance": {
          "77": [
            4065,
            4099
          ]
        },
        "ERC20.approve": {
          "5": [
            4343,
            4382
          ],
          "6": [
            4392,
            4403
          ]
        },
        "ERC20.balanceOf": {
          "31": [
            3492,
            3517
          ]
        },
        "ERC20.decimals": {
          "13": [
            3152,
            3168
          ]
        },
        "ERC20.decreaseAllowance": {
          "54": [
            6400,
            6529
          ]
        },
        "ERC20.increaseAllowance": {
          "28": [
            5693,
            5776
          ]
        },
        "ERC20.name": {
          "4": [
            2238,
            2250
          ]
        },
        "ERC20.symbol": {
          "53": [
            2442,
            2456
          ]
        },
        "ERC20.totalSupply": {
          "7": [
            3315,
            3334
          ]
        },
        "ERC20.transfer": {
          "55": [
            3829,
            3871
          ]
        },
        "ERC20.transferFrom": {
          "10": [
            4999,
            5035
          ],
          "11": [
            5045,
            5166
          ],
          "12": [
            5176,
            5187
          ]
        }
      },
      "20": {
        "LiquidityAmounts.getAmount0ForLiquidity": {
          "201": [
            4453,
            4516
          ],
          "202": [
            4527,
            4732
          ]
        },
        "LiquidityAmounts.getAmount1ForLiquidity": {
          "203": [
            5309,
            5372
          ],
          "204": [
            5383,
            5465
          ]
        },
        "LiquidityAmounts.getAmountsForLiquidity": {
          "181": [
            6272,
            6335
          ],
          "182": [
            6395,
            6468
          ],
          "183": [
            6533,
            6605
          ],
          "184": [
            6619,
            6691
          ],
          "185": [
            6722,
            6795
          ]
        },
        "LiquidityAmounts.getLiquidityForAmount0": {
          "177": [
            1297,
            1360
          ],
          "178": [
            1466,
            1553
          ]
        },
        "LiquidityAmounts.getLiquidityForAmount1": {
          "179": [
            2211,
            2274
          ],
          "180": [
            2284,
            2375
          ]
        },
        "LiquidityAmounts.getLiquidityForAmounts": {
          "169": [
            3249,
            3312
          ],
          "170": [
            3372,
            3445
          ],
          "171": [
            3701,
            3762
          ],
          "172": [
            3793,
            3866
          ]
        },
        "LiquidityAmounts.toUint128": {
          "200": [
            580,
            610
          ]
        }
      },
      "21": {
        "PositionKey.compute": {
          "144": [
            300,
            363
          ]
        }
      },
      "23": {
        "AlphaVault._amountsForLiquidity": {
          "173": [
            16492,
            16733
          ]
        },
        "AlphaVault._balance0": {
          "125": [
            14957,
            15021
          ]
        },
        "AlphaVault._balance1": {
          "126": [
            15151,
            15215
          ]
        },
        "AlphaVault._burnAllLiquidity": {
          "119": [
            12818,
            12877
          ],
          "120": [
            13499,
            13557
          ],
          "121": [
            13571,
            13629
          ],
          "122": [
            13643,
            13707
          ],
          "123": [
            13721,
            13785
          ],
          "124": [
            13805,
            13885
          ]
        },
        "AlphaVault._burnLiquidityShare": {
          "132": [
            9298,
            9373
          ],
          "133": [
            9438,
            9657
          ]
        },
        "AlphaVault._calcSharesAndAmounts": {
          "95": [
            5792,
            5844
          ],
          "96": [
            5954,
            5978
          ],
          "97": [
            5992,
            6016
          ],
          "98": [
            6030,
            6065
          ],
          "99": [
            6113,
            6137
          ],
          "100": [
            6151,
            6196
          ],
          "101": [
            6244,
            6268
          ],
          "102": [
            6282,
            6327
          ],
          "103": [
            6452,
            6479
          ],
          "104": [
            6526,
            6567
          ],
          "105": [
            6581,
            6622
          ],
          "106": [
            6636,
            6691
          ]
        },
        "AlphaVault._checkRange": {
          "114": [
            12066,
            12121
          ],
          "115": [
            12131,
            12191
          ],
          "116": [
            12201,
            12262
          ],
          "117": [
            12272,
            12337
          ],
          "118": [
            12347,
            12412
          ]
        },
        "AlphaVault._liquidityForAmounts": {
          "127": [
            17056,
            17320
          ]
        },
        "AlphaVault._mintLiquidity": {
          "128": [
            14121,
            14182
          ]
        },
        "AlphaVault._positionAmounts": {
          "129": [
            16003,
            16077
          ],
          "130": [
            16087,
            16130
          ],
          "131": [
            16140,
            16183
          ]
        },
        "AlphaVault._positionLiquidity": {
          "94": [
            15512,
            15561
          ]
        },
        "AlphaVault._toUint128": {
          "174": [
            17465,
            17495
          ],
          "175": [
            17505,
            17522
          ]
        },
        "AlphaVault.acceptGovernance": {
          "8": [
            21123,
            21184
          ],
          "9": [
            21194,
            21217
          ]
        },
        "AlphaVault.collectProtocol": {
          "0": [
            18114,
            18170
          ],
          "1": [
            18180,
            18236
          ],
          "2": [
            18263,
            18295
          ],
          "3": [
            18322,
            18354
          ]
        },
        "AlphaVault.deposit": {
          "15": [
            4053,
            4138
          ],
          "16": [
            4148,
            4202
          ],
          "17": [
            4355,
            4389
          ],
          "18": [
            4475,
            4511
          ],
          "19": [
            4532,
            4614
          ],
          "20": [
            4624,
            4653
          ],
          "21": [
            4663,
            4707
          ],
          "22": [
            4717,
            4761
          ],
          "23": [
            4827,
            4886
          ],
          "24": [
            4913,
            4972
          ],
          "25": [
            5019,
            5036
          ],
          "26": [
            5046,
            5100
          ],
          "27": [
            5110,
            5168
          ]
        },
        "AlphaVault.emergencyBurn": {
          "57": [
            20455,
            20487
          ],
          "58": [
            20497,
            20539
          ],
          "59": [
            20549,
            20633
          ]
        },
        "AlphaVault.emergencyWithdraw": {
          "51": [
            20071,
            20103
          ],
          "52": [
            20113,
            20151
          ]
        },
        "AlphaVault.finalize": {
          "30": [
            19821,
            19837
          ]
        },
        "AlphaVault.getTotalAmounts": {
          "60": [
            14707,
            14762
          ],
          "61": [
            14772,
            14827
          ]
        },
        "AlphaVault.rebalance": {
          "34": [
            10294,
            10337
          ],
          "35": [
            10347,
            10382
          ],
          "36": [
            10392,
            10425
          ],
          "37": [
            10435,
            10468
          ],
          "38": [
            10528,
            10566
          ],
          "39": [
            10576,
            10613
          ],
          "40": [
            10732,
            10771
          ],
          "41": [
            10781,
            10822
          ],
          "42": [
            10968,
            11022
          ],
          "43": [
            11166,
            11215
          ],
          "44": [
            11225,
            11274
          ],
          "45": [
            11285,
            11307
          ],
          "46": [
            11317,
            11339
          ],
          "47": [
            11665,
            11715
          ],
          "48": [
            11729,
            11778
          ],
          "49": [
            11809,
            11859
          ],
          "50": [
            11873,
            11922
          ]
        },
        "AlphaVault.setGovernance": {
          "56": [
            20892,
            20923
          ]
        },
        "AlphaVault.setMaxTotalSupply": {
          "29": [
            19638,
            19670
          ]
        },
        "AlphaVault.setProtocolFee": {
          "32": [
            19185,
            19227
          ],
          "33": [
            19237,
            19263
          ]
        },
        "AlphaVault.setStrategy": {
          "14": [
            18929,
            18949
          ]
        },
        "AlphaVault.sweep": {
          "75": [
            18567,
            18619
          ],
          "76": [
            18629,
            18659
          ]
        },
        "AlphaVault.uniswapV3MintCallback": {
          "72": [
            17722,
            17758
          ],
          "73": [
            17785,
            17825
          ],
          "74": [
            17852,
            17892
          ]
        },
        "AlphaVault.withdraw": {
          "62": [
            7505,
            7534
          ],
          "63": [
            7544,
            7598
          ],
          "64": [
            8246,
            8284
          ],
          "65": [
            8317,
            8355
          ],
          "66": [
            8416,
            8474
          ],
          "67": [
            8484,
            8542
          ],
          "68": [
            8552,
            8596
          ],
          "69": [
            8606,
            8650
          ],
          "70": [
            8684,
            8709
          ],
          "71": [
            8719,
            8774
          ]
        }
      },
      "27": {},
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "143": [
            3616,
            3701
          ]
        },
        "SafeERC20.safeTransfer": {
          "80": [
            786,
            872
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "107": [
            985,
            1081
          ]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "206": [
            7257,
            7274
          ],
          "207": [
            7765,
            7785
          ]
        },
        "Address.functionCall": {
          "176": [
            3708,
            3767
          ]
        },
        "Address.functionCallWithValue": {
          "186": [
            4759,
            4840
          ],
          "187": [
            4850,
            4910
          ],
          "188": [
            5065,
            5124
          ]
        },
        "Address.isContract": {
          "205": [
            1117,
            1132
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "81": [
            678,
            695
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20",
    "Uniswap/uniswap-v3-core@1.0.0/FixedPoint96",
    "Uniswap/uniswap-v3-core@1.0.0/FullMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3MintCallback",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3Pool",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolDerivedState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolEvents",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolImmutables",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolOwnerActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolState",
    "IVault",
    "LiquidityAmounts",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Math",
    "PositionKey",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "Uniswap/uniswap-v3-core@1.0.0/TickMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "876:20455:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17979:382;;;;;;;;;;;;;;;;-1:-1:-1;17979:382:23;;;;;;;;;;;-1:-1:-1;;;;;17979:382:23;;:::i;:::-;;2168:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4244:166:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1634:30:23;;;:::i;:::-;;;;-1:-1:-1;;;;;1634:30:23;;;;;;;;;;;;;;2025:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1602:26;;;:::i;3235:106:2:-;;;:::i;:::-;;;;;;;;;;;;;;;;21076:148:23;;;:::i;4877:317:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4877:317:2;;;;;;;;;;;;;;;;;:::i;1779:29:23:-;;;:::i;3086:89:2:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18855:101:23;;;;;;;;;;;;;;;;-1:-1:-1;18855:101:23;-1:-1:-1;;;;;18855:101:23;;:::i;3708:1467::-;;;;;;;;;;;;;;;;-1:-1:-1;3708:1467:23;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3708:1467:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;5589:215:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5589:215:2;;;;;;;;:::i;19552:125:23:-;;;;;;;;;;;;;;;;-1:-1:-1;19552:125:23;;:::i;19767:77::-;;;:::i;1996:23::-;;;:::i;1843:25::-;;;:::i;3399:125:2:-;;;;;;;;;;;;;;;;-1:-1:-1;3399:125:2;-1:-1:-1;;;;;3399:125:2;;:::i;19105:165:23:-;;;;;;;;;;;;;;;;-1:-1:-1;19105:165:23;;:::i;1968:22::-;;;:::i;10085:1854::-;;;;;;;;;;;;;;;;-1:-1:-1;10085:1854:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19980:178::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19980:178:23;;;;;;;;:::i;2370:93:2:-;;;:::i;2095:35:23:-;;;:::i;6291:266:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6291:266:2;;;;;;;;:::i;1814:23:23:-;;;:::i;3727:172:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3727:172:2;;;;;;;;:::i;20814:116:23:-;;;;;;;;;;;;;;;;-1:-1:-1;20814:116:23;-1:-1:-1;;;;;20814:116:23;;:::i;20315:325::-;;;;;;;;;;;;;;;;-1:-1:-1;20315:325:23;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20315:325:23;;:::i;1747:26::-;;;:::i;1912:21::-;;;:::i;14418:416::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1706:34;;;:::i;1670:30::-;;;:::i;7297:1484::-;;;;;;;;;;;;;;;;-1:-1:-1;7297:1484:23;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7297:1484:23;;:::i;17578:321::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17578:321:23;;-1:-1:-1;17578:321:23;-1:-1:-1;17578:321:23;:::i;18446:220::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18446:220:23;;;;;;;;;;;;;;;;;:::i;3957:149:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3957:149:2;;;;;;;;;;:::i;2054:35:23:-;;;:::i;1874:32::-;;;:::i;1940:22::-;;;:::i;17979:382::-;21286:10;;-1:-1:-1;;;;;21286:10:23;21272;:24;21264:47;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;;;;18137:20:::1;::::0;:33:::1;::::0;18162:7;18137:24:::1;:33::i;:::-;18114:20;:56:::0;18203:20:::1;::::0;:33:::1;::::0;18228:7;18203:24:::1;:33::i;:::-;18180:20;:56:::0;18250:11;;18246:49:::1;;18263:32;-1:-1:-1::0;;;;;18263:6:23::1;:19;18283:2:::0;18287:7;18263:19:::1;:32::i;:::-;18309:11:::0;;18305:49:::1;;18322:32;-1:-1:-1::0;;;;;18322:6:23::1;:19;18342:2:::0;18346:7;18322:19:::1;:32::i;:::-;17979:382:::0;;;:::o;2168:89:2:-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:2;4244:166;;;;;:::o;1634:30:23:-;;;:::o;2025:23::-;;;;;;:::o;1602:26::-;;;-1:-1:-1;;;;;1602:26:23;;:::o;3235:106:2:-;3322:12;;3235:106;:::o;21076:148:23:-;21145:17;;-1:-1:-1;;;;;21145:17:23;21131:10;:31;21123:61;;;;;-1:-1:-1;;;21123:61:23;;;;;;;;;;;;-1:-1:-1;;;21123:61:23;;;;;;;;;;;;;;;21194:10;:23;;-1:-1:-1;;;;;;21194:23:23;21207:10;21194:23;;;21076:148::o;4877:317:2:-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:2;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:2;;;;;;;;;;;;-1:-1:-1;5076:33:2;;;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:2;4877:317;;;;;;:::o;1779:29:23:-;;;;:::o;3086:89:2:-;3159:9;;;;3086:89;:::o;18855:101:23:-;21286:10;;-1:-1:-1;;;;;21286:10:23;21272;:24;21264:47;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;;;;18929:8:::1;:20:::0;;-1:-1:-1;;;;;;18929:20:23::1;-1:-1:-1::0;;;;;18929:20:23;;;::::1;::::0;;;::::1;::::0;;18855:101::o;3708:1467::-;3956:14;3984:15;4013;1688:1:7;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;4061::23;;;;:40:::1;;;4100:1;4083:14;:18;4061:40;4053:85;;;::::0;;-1:-1:-1;;;4053:85:23;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;4156:16:23;::::1;::::0;;::::1;::::0;:39:::1;;-1:-1:-1::0;;;;;;4176:19:23;::::1;4190:4;4176:19;;4156:39;4148:54;;;::::0;;-1:-1:-1;;;4148:54:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4148:54:23;;;;;;;;;;;;;::::1;;4314:9;::::0;4338:1:::1;::::0;4295:40:::1;::::0;-1:-1:-1;;;4314:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;4325:9:23;::::1;::::0;::::1;4295:18;:40::i;:::-;-1:-1:-1::0;;;;;4295:44:23::1;;4291:109;;;4355:4;::::0;4365:9:::1;::::0;4355:34:::1;::::0;;-1:-1:-1;;;4355:34:23;;-1:-1:-1;;;4365:9:23;::::1;;::::0;;::::1;4355:34:::0;::::1;;::::0;::::1;::::0;-1:-1:-1;;;4376:9:23;;::::1;::::0;::::1;4355:34:::0;;::::1;::::0;;;;:4:::1;:34:::0;;;;;;;;-1:-1:-1;;;;;4355:4:23;;::::1;::::0;:9:::1;::::0;:34;;;;;;;;;;;;;;:4;:34;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;4291:109:23::1;4432:10;::::0;4444::::1;::::0;4458:1:::1;::::0;4413:42:::1;::::0;-1:-1:-1;;;4432:10:23;;::::1;;::::0;;::::1;::::0;4444;::::1;4413:18;:42::i;:::-;-1:-1:-1::0;;;;;4413:46:23::1;;4409:113;;;4475:4;::::0;4485:10:::1;::::0;4497::::1;::::0;4475:36:::1;::::0;;-1:-1:-1;;;4475:36:23;;-1:-1:-1;;;4485:10:23;;::::1;;::::0;;::::1;4475:36:::0;::::1;;::::0;::::1;::::0;4497:10;;::::1;4475:36:::0;;::::1;::::0;;;;:4:::1;:36:::0;;;;;;;;-1:-1:-1;;;;;4475:4:23;;::::1;::::0;:9:::1;::::0;:36;;;;;;;;;;;;;;:4;:36;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;4409:113:23::1;4561:53;4583:14;4599;4561:21;:53::i;:::-;4532:82:::0;;-1:-1:-1;4532:82:23;-1:-1:-1;4532:82:23;-1:-1:-1;4632:10:23;4624:29:::1;;;::::0;;-1:-1:-1;;;4624:29:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4624:29:23;;;;;;;;;;;;;::::1;;4682:10;4671:7;:21;;4663:44;;;::::0;;-1:-1:-1;;;4663:44:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4663:44:23;;;;;;;;;;;;;::::1;;4736:10;4725:7;:21;;4717:44;;;::::0;;-1:-1:-1;;;4717:44:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4717:44:23;;;;;;;;;;;;;::::1;;4814:11:::0;;4810:76:::1;;4827:59;-1:-1:-1::0;;;;;4827:6:23::1;:23;4851:10;4871:4;4878:7:::0;4827:23:::1;:59::i;:::-;4900:11:::0;;4896:76:::1;;4913:59;-1:-1:-1::0;;;;;4913:6:23::1;:23;4937:10;4957:4;4964:7:::0;4913:23:::1;:59::i;:::-;5019:17;5025:2;5029:6;5019:5;:17::i;:::-;5051:49;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;;;;;5051:49:23;::::1;::::0;5059:10:::1;::::0;5051:49:::1;::::0;;;;;;;::::1;5135:14;;5118:13;:11;:13::i;:::-;:31;;5110:58;;;::::0;;-1:-1:-1;;;5110:58:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;5110:58:23;;;;;;;;;;;;;::::1;;1645:1:7::0;2580:7;:22;;;;3708:1467:23;;;;;;;;;:::o;5589:215:2:-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:2;;;:34;;;;;;;;;;;:38;:50::i;19552:125:23:-;21286:10;;-1:-1:-1;;;;;21286:10:23;21272;:24;21264:47;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;;;;19638:14:::1;:32:::0;19552:125::o;19767:77::-;21286:10;;-1:-1:-1;;;;;21286:10:23;21272;:24;21264:47;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;;;;19821:9:::1;:16:::0;;-1:-1:-1;;;;19821:16:23::1;-1:-1:-1::0;;;19821:16:23::1;::::0;;19767:77::o;1996:23::-;;;-1:-1:-1;;;1996:23:23;;;;;:::o;1843:25::-;;;-1:-1:-1;;;;;1843:25:23;;:::o;3399:125:2:-;-1:-1:-1;;;;;3499:18:2;;3473:7;3499:18;;;;;;;;;;;3399:125;;;;:::o;19105:165:23:-;21286:10;;-1:-1:-1;;;;;21286:10:23;21272;:24;21264:47;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;;;;19208:3:::1;19193:12;:18;19185:42;;;::::0;;-1:-1:-1;;;19185:42:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;19185:42:23;;;;;;;;;;;;;::::1;;19237:11;:26:::0;19105:165::o;1968:22::-;;;-1:-1:-1;;;1968:22:23;;;;;:::o;10085:1854::-;1688:1:7;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;10316:8:23::1;::::0;-1:-1:-1;;;;;10316:8:23::1;10302:10;:22;10294:43;;;::::0;;-1:-1:-1;;;10294:43:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;10294:43:23;;;;;;;;;;;;;::::1;;10347:35;10359:10;10371;10347:11;:35::i;:::-;10392:33;10404:9;10415;10392:11;:33::i;:::-;10435;10447:9;10458;10435:11;:33::i;:::-;10506:4;::::0;:12:::1;::::0;;-1:-1:-1;;;10506:12:23;;;;10482:10:::1;::::0;-1:-1:-1;;;;;10506:4:23::1;::::0;:10:::1;::::0;:12:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:4;:12;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10506:12:23::1;;::::0;;-1:-1:-1;10536:17:23::1;::::0;;::::1;::::0;;;::::1;;;10528:38;;;::::0;;-1:-1:-1;;;10528:38:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;10528:38:23;;;;;;;;;;;;;::::1;;10596:4;10584:16;;:9;:16;;;10576:37;;;::::0;;-1:-1:-1;;;10576:37:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;10576:37:23;;;;;;;;;;;;;::::1;;10750:9;::::0;10732:39:::1;::::0;-1:-1:-1;;;10750:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;10761:9:23;::::1;::::0;::::1;10732:17;:39::i;:::-;10799:10;::::0;10811::::1;::::0;10781:41:::1;::::0;-1:-1:-1;;;10799:10:23;::::1;;::::0;;::::1;::::0;10811;::::1;10781:17;:41::i;:::-;10888:16;10907:11;:9;:11::i;:::-;10888:30;;10928:16;10947:11;:9;:11::i;:::-;10928:30;;10973:49;10982:4;10988:8;10998;11008:13;:11;:13::i;:::-;10973:49;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;::::1;11072:17;11092:64;11113:10;11125;11137:8;11147;11092:20;:64::i;:::-;11072:84;;11166:49;11181:10;11193;11205:9;11166:14;:49::i;:::-;11226:9;11225:49:::0;;::::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;;11225:49:23::1;-1:-1:-1::0;;;;11225:49:23;;;::::1;::::0;;::::1;-1:-1:-1::0;;;11225:49:23::1;-1:-1:-1::0;;;;11225:49:23;;::::1;::::0;;;::::1;;;::::0;;11296:11:::1;:9;:11::i;:::-;11285:22;;11328:11;:9;:11::i;:::-;11317:22;;11428:20;11451:62;11472:9;11483;11494:8;11504;11451:20;:62::i;:::-;11428:85;;11523:20;11546:62;11567:9;11578;11589:8;11599;11546:20;:62::i;:::-;11523:85;;11637:12;-1:-1:-1::0;;;;;11622:27:23::1;:12;-1:-1:-1::0;;;;;11622:27:23::1;;11618:315;;;11665:50;11680:9;11691;11702:12;11665:14;:50::i;:::-;11742:10;11729:49:::0;;-1:-1:-1;;11729:49:23::1;;;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;11730:10:::1;11729:49:::0;;-1:-1:-1;;;;11729:49:23::1;-1:-1:-1::0;;;11729:49:23;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;11618:315:::1;;;11809:50;11824:9;11835;11846:12;11809:14;:50::i;:::-;11886:10;11873:49:::0;;-1:-1:-1;;11873:49:23::1;;;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;11874:10:::1;11873:49:::0;;-1:-1:-1;;;;11873:49:23::1;-1:-1:-1::0;;;11873:49:23;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;11618:315:::1;-1:-1:-1::0;;1645:1:7;2580:7;:22;-1:-1:-1;;;;;;;;;;10085:1854:23:o;19980:178::-;21286:10;;-1:-1:-1;;;;;21286:10:23;21272;:24;21264:47;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;;;;20080:9:::1;::::0;-1:-1:-1;;;20080:9:23;::::1;;;20079:10;20071:32;;;::::0;;-1:-1:-1;;;20071:32:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;20071:32:23;;;;;;;;;;;;;::::1;;20113:38;-1:-1:-1::0;;;;;20113:18:23;::::1;20132:10;20144:6:::0;20113:18:::1;:38::i;:::-;19980:178:::0;;:::o;2370:93:2:-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;2095:35:23;;;;:::o;6291:266:2:-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:2;;;:34;;;;;;;;;;;:96;:38;:96::i;1814:23:23:-;;;-1:-1:-1;;;;;1814:23:23;;:::o;3727:172:2:-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;20814:116:23:-;21286:10;;-1:-1:-1;;;;;21286:10:23;21272;:24;21264:47;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;;;;20892:17:::1;:31:::0;;-1:-1:-1;;;;;;20892:31:23::1;-1:-1:-1::0;;;;;20892:31:23;;;::::1;::::0;;;::::1;::::0;;20814:116::o;20315:325::-;21286:10;;-1:-1:-1;;;;;21286:10:23;21272;:24;21264:47;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;;;;20464:9:::1;::::0;-1:-1:-1;;;20464:9:23;::::1;;;20463:10;20455:32;;;::::0;;-1:-1:-1;;;20455:32:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;20455:32:23;;;;;;;;;;;;;::::1;;20497:4;::::0;:42:::1;::::0;;-1:-1:-1;;;20497:42:23;;::::1;::::0;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;;;20497:42:23;::::1;::::0;;;;;;-1:-1:-1;;;;;20497:4:23;;::::1;::::0;:9:::1;::::0;:42;;;;;;;;;;;;;:4:::1;::::0;:42;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;20549:4:23::1;::::0;20497:42;20549:84;;-1:-1:-1;;;20549:84:23;;20562:10:::1;20549:84;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;;-1:-1:-1;;;;;20549:84:23;;;;;;;;;;;;-1:-1:-1;;;;;20549:4:23;;::::1;::::0;:12:::1;::::0;:84;;;;;20497:42;;20549:84;;;;;;:4:::1;::::0;:84;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;20315:325:23:o;1747:26::-;;;;:::o;1912:21::-;;;-1:-1:-1;;;1912:21:23;;;;;:::o;14418:416::-;14579:9;;14475:14;;;;;;;;14562:38;;-1:-1:-1;;;14579:9:23;;;;;;;-1:-1:-1;;;14590:9:23;;;;14562:16;:38::i;:::-;14674:10;;14686;;14517:83;;-1:-1:-1;14517:83:23;;-1:-1:-1;14611:20:23;;;;14657:40;;-1:-1:-1;;;14674:10:23;;;;;;;;14686;;14657:16;:40::i;:::-;14610:87;;;;14716:46;14749:12;14716:28;14732:11;14716;:9;:11::i;:::-;:15;;:28::i;:46::-;14707:55;;14781:46;14814:12;14781:28;14797:11;14781;:9;:11::i;:46::-;14772:55;;14418:416;;;;;;:::o;1706:34::-;;;:::o;1670:30::-;;;:::o;7297:1484::-;7461:15;7478;1688:1:7;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;7513:10:23;7505:29:::1;;;::::0;;-1:-1:-1;;;7505:29:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7505:29:23;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;7552:16:23;::::1;::::0;;::::1;::::0;:39:::1;;-1:-1:-1::0;;;;;;7572:19:23;::::1;7586:4;7572:19;;7552:39;7544:54;;;::::0;;-1:-1:-1;;;7544:54:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7544:54:23;;;;;;;;;;;;;::::1;;7807:9;::::0;7731:19:::1;::::0;;;7787:53:::1;::::0;-1:-1:-1;;;7807:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;7818:9:23;::::1;::::0;::::1;7829:6:::0;7837:2;7787:19:::1;:53::i;:::-;7929:10;::::0;7941::::1;::::0;7730:110;;-1:-1:-1;7730:110:23;;-1:-1:-1;7851:20:23::1;::::0;;;7909:55:::1;::::0;-1:-1:-1;;;7929:10:23;;::::1;;::::0;;::::1;::::0;7941;::::1;7953:6:::0;7961:2;7909:19:::1;:55::i;:::-;7850:114;;;;8030:19;8052:13;:11;:13::i;:::-;8030:35;;8075:21;8099:40;8127:11;8099:23;8115:6;8099:11;:9;:11::i;:::-;:15:::0;::::1;:23::i;:::-;:27:::0;::::1;:40::i;:::-;8075:64;;8149:21;8173:40;8201:11;8173:23;8189:6;8173:11;:9;:11::i;:40::-;8149:64:::0;-1:-1:-1;8227:17:23;;8223:61:::1;;8246:38;-1:-1:-1::0;;;;;8246:6:23::1;:19;8266:2:::0;8270:13;8246:19:::1;:38::i;:::-;8298:17:::0;;8294:61:::1;;8317:38;-1:-1:-1::0;;;;;8317:6:23::1;:19;8337:2:::0;8341:13;8317:19:::1;:38::i;:::-;8426:48;8460:13:::0;8426:29:::1;:11:::0;8442:12;8426:15:::1;:29::i;:48::-;8416:58:::0;-1:-1:-1;8494:48:23::1;8528:13:::0;8494:29:::1;:11:::0;8510:12;8494:15:::1;:29::i;:48::-;8484:58;;8571:10;8560:7;:21;;8552:44;;;::::0;;-1:-1:-1;;;8552:44:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;8552:44:23;;;;;;;;;;;;;::::1;;8625:10;8614:7;:21;;8606:44;;;::::0;;-1:-1:-1;;;8606:44:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;8606:44:23;;;;;;;;;;;;;::::1;;8684:25;8690:10;8702:6;8684:5;:25::i;:::-;8724:50;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;;;;;8724:50:23;::::1;::::0;8733:10:::1;::::0;8724:50:::1;::::0;;;;;;;::::1;2436:1:7;;;;;;;1645::::0;2580:7;:22;;;;7297:1484:23;;;;;;;:::o;17578:321::-;17752:4;;-1:-1:-1;;;;;17752:4:23;17730:10;:27;17722:36;;;;;;17772:11;;17768:57;;17785:40;-1:-1:-1;;;;;17785:6:23;:19;17805:10;17817:7;17785:19;:40::i;:::-;17839:11;;17835:57;;17852:40;-1:-1:-1;;;;;17852:6:23;:19;17872:10;17884:7;17852:19;:40::i;:::-;17578:321;;;;:::o;18446:220::-;21286:10;;-1:-1:-1;;;;;21286:10:23;21272;:24;21264:47;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;-1:-1:-1;;;21264:47:23;;;;;;;;;;;;;;;18584:6:::1;-1:-1:-1::0;;;;;18575:15:23::1;:5;-1:-1:-1::0;;;;;18575:15:23::1;;;:34;;;;;18603:6;-1:-1:-1::0;;;;;18594:15:23::1;:5;-1:-1:-1::0;;;;;18594:15:23::1;;;18575:34;18567:52;;;::::0;;-1:-1:-1;;;18567:52:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;18567:52:23;;;;;;;;;;;;;::::1;;18629:30;-1:-1:-1::0;;;;;18629:18:23;::::1;18648:2:::0;18652:6;18629:18:::1;:30::i;3957:149:2:-:0;-1:-1:-1;;;;;4072:18:2;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;2054:35:23:-;;;;:::o;1874:32::-;;;-1:-1:-1;;;;;1874:32:23;;:::o;1940:22::-;;;-1:-1:-1;;;1940:22:23;;;;;:::o;3136:155:1:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:1;;;3136:155::o;704:175:4:-;813:58;;;-1:-1:-1;;;;;813:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:4;-1:-1:-1;;;813:58:4;;;786:86;;806:5;;786:19;:86::i;598:104:6:-;685:10;598:104;:::o;9355:340:2:-;-1:-1:-1;;;;;9456:19:2;;9448:68;;;;-1:-1:-1;;;9448:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:2;;9526:68;;;;-1:-1:-1;;;9526:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:2;;7128:70;;;;-1:-1:-1;;;7128:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:23:2;;7208:71;;;;-1:-1:-1;;;7208:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:2;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:2;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:2;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;7449:20;;7519:35;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:1;;;5432:163::o;15282:286:23:-;15391:17;15424:19;15446:56;15474:4;15481:9;15492;15446:19;:56::i;:::-;15534:4;;:27;;;-1:-1:-1;;;15534:27:23;;;;;;;;;;15424:78;;-1:-1:-1;;;;;;15534:4:23;;;;:14;;:27;;;;;;;;;;;;;;;:4;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15534:27:23;;15282:286;-1:-1:-1;;;;15282:286:23:o;5395:1313::-;5534:14;5562:15;5591;5631:19;5653:13;:11;:13::i;:::-;5631:35;;5677:14;5693;5711:17;:15;:17::i;:::-;5676:52;;;;5799:11;5814:1;5799:16;:30;;;;5828:1;5819:6;:10;5799:30;:44;;;;5842:1;5833:6;:10;5799:44;5792:52;;;;5859:16;5855:847;;5964:14;5954:24;;6002:14;5992:24;;6039:26;6048:7;6057;6039:8;:26::i;:::-;6030:35;;5855:847;;;6086:11;6082:620;;6123:14;;-1:-1:-1;6160:36:23;6189:6;6160:24;6123:14;6172:11;6160;:24::i;6082:620::-;6217:11;6213:489;;6254:14;;-1:-1:-1;6291:36:23;6320:6;6291:24;6254:14;6303:11;6291;:24::i;6213:489::-;6358:13;6374:64;6383:26;:14;6402:6;6383:18;:26::i;:::-;6411;:14;6430:6;6411:18;:26::i;:::-;6374:8;:64::i;:::-;6358:80;;6468:1;6460:5;:9;6452:27;;;;;-1:-1:-1;;;6452:27:23;;;;;;;;;;;;-1:-1:-1;;;6452:27:23;;;;;;;;;;;;;;;6536:31;6565:1;6536:24;6553:6;6536:12;:5;6565:1;6536:9;:12::i;:31::-;6526:41;-1:-1:-1;6591:31:23;6620:1;6591:24;6608:6;6591:12;:5;6620:1;6591:9;:12::i;:31::-;6581:41;-1:-1:-1;6645:46:23;6684:6;6645:34;6672:6;6645:34;:5;6655:11;6645:9;:22::i;:46::-;6636:55;;6213:489;;5395:1313;;;;;;;;:::o;885:203:4:-;1012:68;;;-1:-1:-1;;;;;1012:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:4;-1:-1:-1;;;1012:68:4;;;985:96;;1005:5;;985:19;:96::i;7832:370:2:-;-1:-1:-1;;;;;7915:21:2;;7907:65;;;;;-1:-1:-1;;;7907:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:12;;:24;;8075:6;8058:16;:24::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:2;;:9;:18;;;;;;;;;;;:30;;8136:6;8113:22;:30::i;:::-;-1:-1:-1;;;;;8092:18:2;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;;;;;;8092:18;;:9;;8158:37;;;;;;;;;;7832:370;;:::o;2690:175:1:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;11945:474:23;12045:11;12074:21;;;;;;;;;12066:55;;;;;-1:-1:-1;;;12066:55:23;;;;;;;;;;;;-1:-1:-1;;;12066:55:23;;;;;;;;;;;;;;;-1:-1:-1;;12139:30:23;;;;;;12131:60;;;;;-1:-1:-1;;;12131:60:23;;;;;;;;;;;;-1:-1:-1;;;12131:60:23;;;;;;;;;;;;;;;637:9:19;12209:30:23;;;;;;12201:61;;;;;-1:-1:-1;;;12201:61:23;;;;;;;;;;;;-1:-1:-1;;;12201:61:23;;;;;;;;;;;;;;;12292:12;12280:24;;:9;:24;;;;;;;;:29;;;12272:65;;;;;-1:-1:-1;;;12272:65:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;12367:12;12355:24;;:9;:24;;;;;;;;:29;;;12347:65;;;;;-1:-1:-1;;;12347:65:23;;;;;;;;;;;;;;;;;;;;;;;;;;;12537:1355;12661:13;12688;12715:17;12735:40;12754:9;12765;12735:18;:40::i;:::-;12715:60;-1:-1:-1;;;;;;12789:13:23;;;12785:103;;12835:4;;:42;;;-1:-1:-1;;;12835:42:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12835:42:23;;;;;;;;-1:-1:-1;;;;;12835:4:23;;;;:9;;:42;;;;;;;;;;;;;:4;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12835:42:23;;;;;;;;;-1:-1:-1;12835:42:23;-1:-1:-1;12785:103:23;13006:4;;:181;;;-1:-1:-1;;;13006:181:23;;13044:4;13006:181;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13006:181:23;;;;;;;;;;;;12956:16;;;;-1:-1:-1;;;;;13006:4:23;;;;:12;;:181;;;;;;;;;;;12956:16;13006:4;:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13006:181:23;;;;;;;-1:-1:-1;;;;;12955:232:23;;;;-1:-1:-1;12955:232:23;;-1:-1:-1;13198:21:23;13222:19;12955:232;13235:5;13222:12;:19::i;:::-;13198:43;-1:-1:-1;13251:21:23;13275:19;:8;13288:5;13275:12;:19::i;:::-;13442:11;;13251:43;;-1:-1:-1;13304:23:23;;;;13467:16;;13463:333;;13517:40;13553:3;13517:31;:13;13535:12;13517:17;:31::i;:40::-;13499:58;-1:-1:-1;13589:40:23;13625:3;13589:31;:13;13607:12;13589:17;:31::i;:40::-;13666:20;;13571:58;;-1:-1:-1;13666:41:23;;13691:15;13666:24;:41::i;:::-;13643:20;:64;13744:20;;:41;;13769:15;13744:24;:41::i;:::-;13721:20;:64;13463:333;13810:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12537:1355;;;;;;;;;;;;:::o;14894:134::-;14938:7;14964:57;15000:20;;14964:6;-1:-1:-1;;;;;14964:16:23;;14989:4;14964:31;;;;;;;;;;;;;-1:-1:-1;;;;;14964:31:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14964:31:23;;:35;:57::i;:::-;14957:64;;14894:134;:::o;15088:::-;15132:7;15158:57;15194:20;;15158:6;-1:-1:-1;;;;;15158:16:23;;15183:4;15158:31;;;;;;;;;;;;;-1:-1:-1;;;;;15158:31:23;;;;;;;;;;;;;;;;;;;;;;;;;;16819:508;16978:7;16998:20;17034:4;;;;;;;;;-1:-1:-1;;;;;17034:4:23;-1:-1:-1;;;;;17034:10:23;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17034:12:23;;-1:-1:-1;17075:245:23;17034:12;17162:38;17190:9;17162:27;:38::i;:::-;17218;17246:9;17218:27;:38::i;:::-;17274:7;17299;17075:39;:245::i;:::-;17056:264;16819:508;-1:-1:-1;;;;;;16819:508:23:o;13962:237::-;-1:-1:-1;;;;;14092:13:23;;;14088:105;;14121:4;;:61;;;-1:-1:-1;;;14121:61:23;;14139:4;14121:61;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14121:61:23;;;;;;;;;;;:4;:61;;;;;;;;-1:-1:-1;;;;;14121:4:23;;;;:9;;:61;;;;;;;;;;;;;;;:4;:61;;;;;;;;;;15642:548;15749:15;15766;15797:19;15819:56;15847:4;15854:9;15865;15819:19;:56::i;:::-;15797:78;;15886:17;15909:19;15930;15965:4;;;;;;;;;-1:-1:-1;;;;;15965:4:23;-1:-1:-1;;;;;15965:14:23;;15980:11;15965:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15965:27:23;;;;;;;;;;;;;-1:-1:-1;15965:27:23;;-1:-1:-1;15965:27:23;-1:-1:-1;16024:53:23;16045:9;16056;15965:27;16024:20;:53::i;:::-;16003:74;;-1:-1:-1;16003:74:23;-1:-1:-1;16097:33:23;16003:74;-1:-1:-1;;;;;16109:20:23;;16097:11;:33::i;:::-;16087:43;-1:-1:-1;16150:33:23;:7;-1:-1:-1;;;;;16162:20:23;;16150:11;:33::i;:::-;16140:43;;15642:548;;;;;;;;;:::o;8926:762::-;9073:15;9090;9117:16;9136:40;9155:9;9166;9136:18;:40::i;:::-;9117:59;;9186:17;9206:48;9240:13;:11;:13::i;:::-;9206:29;-1:-1:-1;;;;;9206:17:23;;9228:6;9206:21;:29::i;:48::-;9186:68;-1:-1:-1;9269:13:23;;9265:417;;9319:4;;-1:-1:-1;;;;;9319:4:23;:9;9329;9340;9351:21;9362:9;9351:10;:21::i;:::-;9319:54;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9319:54:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9319:54:23;;;;;;;;;-1:-1:-1;9319:54:23;-1:-1:-1;9392:11:23;;;;:26;;;9417:1;9407:7;:11;9392:26;9388:284;;;9459:4;;-1:-1:-1;;;;;9459:4:23;:12;9493:2;9517:9;9548;9579:19;9590:7;9579:10;:19::i;:::-;9620;9631:7;9620:10;:19::i;:::-;9459:198;;;;;;;;;;;;;-1:-1:-1;;;;;9459:198:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9459:198:23;;;;;;-1:-1:-1;;;;;9459:198:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9459:198:23;;;;;;;-1:-1:-1;;;;;9438:219:23;;;;-1:-1:-1;9438:219:23;;-1:-1:-1;9388:284:23;8926:762;;;;;;;;;:::o;3538:215:1:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:1;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:1:o;8522:410:2:-;-1:-1:-1;;;;;8605:21:2;;8597:67;;;;-1:-1:-1;;;8597:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8675:49;8696:7;8713:1;8717:6;8675:20;:49::i;:::-;8756:68;8779:6;8756:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8756:18:2;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8735:18:2;;:9;:18;;;;;;;;;;:89;8849:12;;:24;;8866:6;8849:16;:24::i;:::-;8834:12;:39;8888:37;;;;;;;;8914:1;;-1:-1:-1;;;;;8888:37:2;;;;;;;;;;;;8522:410;;:::o;2967:751:4:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;162:208:21;317:45;;;;;;;;-1:-1:-1;;317:45:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:56;;;;;;162:208::o;223:105:0:-;281:7;312:1;307;:6;;:14;;320:1;307:14;;;-1:-1:-1;316:1:0;;300:21;-1:-1:-1;223:105:0:o;399:104::-;457:7;487:1;483;:5;:13;;495:1;483:13;;1355:2580:19;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;1468:57;1450:75;-1:-1:-1;637:9:19;1543:28;;;1535:42;;;;;-1:-1:-1;;;1535:42:19;;;;;;;;;;;;-1:-1:-1;;;1535:42:19;;;;;;;;;;;;;;;1588:13;1614:3;1604:13;;:93;;-1:-1:-1;;;1604:93:19;;;1625:34;1604:93;1588:109;;;-1:-1:-1;1721:3:19;1711:13;;:18;1707:83;;1748:34;1740:42;1787:3;1739:51;1707:83;1814:3;1804:13;;:18;1800:83;;1841:34;1833:42;1880:3;1832:51;1800:83;1907:3;1897:13;;:18;1893:83;;1934:34;1926:42;1973:3;1925:51;1893:83;2000:4;1990:14;;:19;1986:84;;2028:34;2020:42;2067:3;2019:51;1986:84;2094:4;2084:14;;:19;2080:84;;2122:34;2114:42;2161:3;2113:51;2080:84;2188:4;2178:14;;:19;2174:84;;2216:34;2208:42;2255:3;2207:51;2174:84;2282:4;2272:14;;:19;2268:84;;2310:34;2302:42;2349:3;2301:51;2268:84;2376:5;2366:15;;:20;2362:85;;2405:34;2397:42;2444:3;2396:51;2362:85;2471:5;2461:15;;:20;2457:85;;2500:34;2492:42;2539:3;2491:51;2457:85;2566:5;2556:15;;:20;2552:85;;2595:34;2587:42;2634:3;2586:51;2552:85;2661:5;2651:15;;:20;2647:85;;2690:34;2682:42;2729:3;2681:51;2647:85;2756:6;2746:16;;:21;2742:86;;2786:34;2778:42;2825:3;2777:51;2742:86;2852:6;2842:16;;:21;2838:86;;2882:34;2874:42;2921:3;2873:51;2838:86;2948:6;2938:16;;:21;2934:86;;2978:34;2970:42;3017:3;2969:51;2934:86;3044:6;3034:16;;:21;3030:86;;3074:34;3066:42;3113:3;3065:51;3030:86;3140:7;3130:17;;:22;3126:86;;3171:33;3163:41;3209:3;3162:50;3126:86;3236:7;3226:17;;:22;3222:85;;3267:32;3259:40;3304:3;3258:49;3222:85;3331:7;3321:17;;:22;3317:83;;3362:30;3354:38;3397:3;3353:47;3317:83;3424:7;3414:17;;:22;3410:78;;3455:25;3447:33;3485:3;3446:42;3410:78;3510:1;3503:4;:8;;;3499:47;;;3541:5;-1:-1:-1;;3521:25:19;;;;;;3513:33;;3499:47;3905:7;3896:5;:17;:22;:30;;3925:1;3896:30;;;3921:1;3896:30;3879:48;;3889:2;3880:5;:11;;3879:48;3856:72;;1355:2580;;;;;:::o;2982:901:20:-;3185:17;3234:13;-1:-1:-1;;;;;3218:29:20;:13;-1:-1:-1;;;;;3218:29:20;;3214:98;;;3283:13;;3298;3214:98;3343:13;-1:-1:-1;;;;;3327:29:20;:12;-1:-1:-1;;;;;3327:29:20;;3323:554;;3384:61;3407:13;3422;3437:7;3384:22;:61::i;:::-;3372:73;;3323:554;;;3481:13;-1:-1:-1;;;;;3466:28:20;:12;-1:-1:-1;;;;;3466:28:20;;3462:415;;;3510:18;3531:60;3554:12;3568:13;3583:7;3531:22;:60::i;:::-;3510:81;;3605:18;3626:60;3649:13;3664:12;3678:7;3626:22;:60::i;:::-;3605:81;;3726:10;-1:-1:-1;;;;;3713:23:20;:10;-1:-1:-1;;;;;3713:23:20;;:49;;3752:10;3713:49;;;3739:10;3713:49;3701:61;;3462:415;;;;;3805:61;3828:13;3843;3858:7;3805:22;:61::i;:::-;3793:73;;3462:415;2982:901;;;;;;;:::o;16269:471:23:-;16405:7;16414;16434:20;16470:4;;;;;;;;;-1:-1:-1;;;;;16470:4:23;-1:-1:-1;;;;;16470:10:23;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16470:12:23;;-1:-1:-1;16511:222:23;16470:12;16598:38;16626:9;16598:27;:38::i;:::-;16654;16682:9;16654:27;:38::i;:::-;16710:9;16511:39;:222::i;:::-;16492:241;;;;;16269:471;;;;;;:::o;17392:137::-;17446:7;-1:-1:-1;;;;;17472:22:23;;;17465:30;;;;-1:-1:-1;17520:1:23;17392:137::o;3581:193:5:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;3581:193;-1:-1:-1;;;;3581:193:5:o;1085:475:20:-;1233:17;1282:13;-1:-1:-1;;;;;1266:29:20;:13;-1:-1:-1;;;;;1266:29:20;;1262:98;;;1331:13;;1346;1262:98;1370:20;1393:63;1409:13;-1:-1:-1;;;;;1393:63:20;1424:13;-1:-1:-1;;;;;1393:63:20;-1:-1:-1;;;1393:15:20;:63::i;:::-;1370:86;;1473:80;1483:69;1499:7;1508:12;1538:13;1522;:29;-1:-1:-1;;;;;1483:69:20;:15;:69::i;:::-;1473:9;:80::i;1999:383::-;2147:17;2196:13;-1:-1:-1;;;;;2180:29:20;:13;-1:-1:-1;;;;;2180:29:20;;2176:98;;;2245:13;;2260;2176:98;2291:84;2301:73;2317:7;-1:-1:-1;;;2360:13:20;2344;:29;-1:-1:-1;;;;;2301:73:20;:15;:73::i;6013:799::-;6193:15;6210;6257:13;-1:-1:-1;;;;;6241:29:20;:13;-1:-1:-1;;;;;6241:29:20;;6237:98;;;6306:13;;6321;6237:98;6366:13;-1:-1:-1;;;;;6350:29:20;:12;-1:-1:-1;;;;;6350:29:20;;6346:460;;6405:63;6428:13;6443;6458:9;6405:22;:63::i;:::-;6395:73;;6346:460;;;6504:13;-1:-1:-1;;;;;6489:28:20;:12;-1:-1:-1;;;;;6489:28:20;;6485:321;;;6543:62;6566:12;6580:13;6595:9;6543:22;:62::i;:::-;6533:72;;6629:62;6652:13;6667:12;6681:9;6629:22;:62::i;:::-;6619:72;;6485:321;;;6732:63;6755:13;6770;6785:9;6732:22;:63::i;:::-;6722:73;;6485:321;6013:799;;;;;;;:::o;4608:523:5:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:5;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:5:o;742:3776:18:-;854:14;;;-1:-1:-1;;1361:1:18;1358;1351:20;1393:9;;;;-1:-1:-1;1444:13:18;;;1428:14;;;;1424:34;;-1:-1:-1;1540:10:18;1536:179;;1588:1;1574:11;:15;1566:24;;;;;;-1:-1:-1;1641:23:18;;;;-1:-1:-1;1691:13:18;;1536:179;1842:5;1828:11;:19;1820:28;;;;;;2125:17;2201:11;2198:1;2195;2188:25;2553:12;2568;;;:26;;2688:22;;;;;3491:1;3472;:15;;3471:21;;3718:17;;;3714:21;;3707:28;3776:17;;;3772:21;;3765:28;3835:17;;;3831:21;;3824:28;3894:17;;;3890:21;;3883:28;3953:17;;;3949:21;;3942:28;4013:17;;;4009:21;;;4002:28;3060:12;;;;3056:23;;;3081:1;3052:31;2330:20;;;2319:32;;;3111:12;;;;2373:21;;;;2816:16;;;;3102:21;;;;4477:11;;;;;-1:-1:-1;;742:3776:18;;;;;:::o;507:110:20:-;608:1;-1:-1:-1;;;;;588:21:20;;;;580:30;;;;;4241:498;4391:15;4438:13;-1:-1:-1;;;;;4422:29:20;:13;-1:-1:-1;;;;;4422:29:20;;4418:98;;;4487:13;;4502;4418:98;4719:13;-1:-1:-1;;;;;4546:186:20;:170;309:2:17;4579:45:20;;4587:9;-1:-1:-1;;;;;4579:18:20;:45;;4658:13;4642;:29;-1:-1:-1;;;;;4546:170:20;4689:13;-1:-1:-1;;;;;4546:170:20;:15;:170::i;:::-;:186;;;;;;;4241:498;-1:-1:-1;;;;4241:498:20:o;5097:375::-;5247:15;5294:13;-1:-1:-1;;;;;5278:29:20;:13;-1:-1:-1;;;;;5278:29:20;;5274:98;;;5343:13;;5358;5274:98;5390:75;5406:9;-1:-1:-1;;;;;5390:75:20;5433:13;5417;:29;-1:-1:-1;;;;;5390:75:20;-1:-1:-1;;;5390:15:20;:75::i;726:413:5:-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:5;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7765:20;;-1:-1:-1;;;7765:20:5;;;;;;;;;;;;;;;;;7772:12;;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "acceptGovernance()": {
        "notice": "`setGovernance()` should be called by the existing governance address prior to calling this function."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "collectProtocol(uint256,uint256,address)": {
        "notice": "Used to collect accumulated protocol fees."
      },
      "constructor": {
        "details": "After deploying, strategy needs to be set via `setStrategy()`",
        "params": {
          "_maxTotalSupply": "Pause deposits if total supply exceeds this",
          "_pool": "Underlying Uniswap V3 pool",
          "_protocolFee": "Protocol fee expressed as multiple of 1e-6"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(uint256,uint256,uint256,uint256,address)": {
        "details": "These tokens sit in the vault and are not used for liquidity on Uniswap until the next rebalance. Also note it's not necessary to check if user manipulated price to deposit cheaper, as the value of range orders can only by manipulated higher.",
        "notice": "Deposits tokens in proportion to the vault's current holdings.",
        "params": {
          "amount0Desired": "Max amount of token0 to deposit",
          "amount0Min": "Revert if resulting `amount0` is less than this",
          "amount1Desired": "Max amount of token1 to deposit",
          "amount1Min": "Revert if resulting `amount1` is less than this",
          "to": "Recipient of shares"
        },
        "returns": {
          "amount0": "Amount of token0 deposited",
          "amount1": "Amount of token1 deposited",
          "shares": "Number of shares minted"
        }
      },
      "emergencyBurn(int24,int24,uint128)": {
        "notice": "Removes liquidity and transfer tokens to governance in case of emergency. Cannot be called if already finalized."
      },
      "emergencyWithdraw(address,uint256)": {
        "notice": "Transfers tokens to governance in case of emergency. Cannot be called if already finalized."
      },
      "finalize()": {
        "notice": "Used to renounce emergency powers. Cannot be undone."
      },
      "getTotalAmounts()": {
        "notice": "Calculates the vault's total holdings of token0 and token1 - in other words, how much of each token the vault would hold if it withdrew all its liquidity from Uniswap."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "rebalance(int24,int24,int24,int24,int24,int24)": {
        "details": "Two orders are placed - a base order and a limit order. The base order is placed first with as much liquidity as possible. This order should use up all of one token, leaving only the other one. This excess amount is then placed as a single-sided bid or ask order.",
        "notice": "Updates vault's positions. Can only be called by the strategy."
      },
      "setGovernance(address)": {
        "notice": "Governance address is not updated until the new governance address has called `acceptGovernance()` to accept this responsibility."
      },
      "setMaxTotalSupply(uint256)": {
        "notice": "Used to change deposit cap for a guarded launch or to ensure vault doesn't grow too large relative to the pool. Cap is on total supply rather than amounts of token0 and token1 as those amounts fluctuate naturally over time."
      },
      "setProtocolFee(uint256)": {
        "notice": "Used to change the protocol fee charged on pool fees earned from Uniswap, expressed as multiple of 1e-6."
      },
      "setStrategy(address)": {
        "notice": "Used to set the strategy contract that determines the position ranges and calls rebalance(). Must be called after this vault is deployed."
      },
      "sweep(address,uint256,address)": {
        "notice": "Removes tokens accidentally sent to this vault."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "uniswapV3MintCallback(uint256,uint256,bytes)": {
        "details": "Callback for Uniswap V3 pool."
      },
      "withdraw(uint256,uint256,uint256,address)": {
        "details": "Removes proportional amount of liquidity from Uniswap. Note it doesn't collect share of fees since last rebalance to save gas.",
        "notice": "Withdraws tokens in proportion to the vault's holdings.",
        "params": {
          "amount0Min": "Revert if resulting `amount0` is smaller than this",
          "amount1Min": "Revert if resulting `amount1` is smaller than this",
          "shares": "Shares burned by sender",
          "to": "Recipient of tokens"
        },
        "returns": {
          "amount0": "Amount of token0 sent to recipient",
          "amount1": "Amount of token1 sent to recipient"
        }
      }
    },
    "notice": "A vault that provides liquidity on Uniswap V3.",
    "title": "Alpha Vault",
    "version": 1
  },
  "offset": [
    876,
    21331
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89A28EB2 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xB3F05B97 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD3487997 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD3487997 EQ PUSH2 0x70A JUMPI DUP1 PUSH4 0xDC2C256F EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7BC JUMPI DUP1 PUSH4 0xEAE989A2 EQ PUSH2 0x7EA JUMPI DUP1 PUSH4 0xF39C38A0 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xFA082743 EQ PUSH2 0x7FA JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0xB3F05B97 EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xC4A7761E EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x6CA JUMPI DUP1 PUSH4 0xD331BEF7 EQ PUSH2 0x6D2 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0xA8C62E76 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xA8C62E76 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xABBFFCB9 EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0xB0E21E8A EQ PUSH2 0x691 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x89A28EB2 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xA00FA77F EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5D1 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1DF JUMPI DUP1 PUSH4 0x4BB278F3 GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x51E87AF7 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x787DCE3D EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x888A9134 EQ PUSH2 0x543 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x33A100CA EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x365D0ED7 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x3F3E4C11 EQ PUSH2 0x4CB JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x16F0115B GT PUSH2 0x226 JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x238EFCBC EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x2AB4D052 EQ PUSH2 0x3F7 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH4 0x430C130 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xF35BCAC EQ PUSH2 0x378 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29F PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x306 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH2 0x99B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0xACC JUMP JUMPDEST PUSH2 0x407 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xADB JUMP JUMPDEST PUSH2 0x481 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x295 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x380 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x35C PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x380 PUSH2 0x11D8 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 SIGNEXTEND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 SIGNEXTEND SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 SIGNEXTEND SWAP2 PUSH1 0x80 DUP3 ADD CALLDATALOAD DUP2 SIGNEXTEND SWAP2 PUSH1 0xA0 ADD CALLDATALOAD SWAP1 SIGNEXTEND PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0x29F PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x35C PUSH2 0x172F JUMP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x173E JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 SIGNEXTEND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0x340 PUSH2 0x198F JUMP JUMPDEST PUSH2 0x6A9 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0x35C PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x6A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1D84 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x79C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x1E15 JUMP JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x1F4D JUMP JUMPDEST PUSH2 0x35C PUSH2 0x1F53 JUMP JUMPDEST PUSH2 0x380 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH2 0x85B SWAP1 DUP5 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0xF SLOAD PUSH2 0x86B SWAP1 DUP4 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0xF SSTORE DUP3 ISZERO PUSH2 0x8A8 JUMPI PUSH2 0x8A8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP6 PUSH2 0x1FCF JUMP JUMPDEST DUP2 ISZERO PUSH2 0x8E2 JUMPI PUSH2 0x8E2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP5 PUSH2 0x1FCF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x973 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x948 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x973 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x956 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x991 PUSH2 0x98A PUSH2 0x2021 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x2025 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA30 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x70656E64696E67476F7665726E616E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA51 DUP5 DUP5 DUP5 PUSH2 0x2111 JUMP JUMPDEST PUSH2 0xAC1 DUP5 PUSH2 0xA5D PUSH2 0x2021 JUMP JUMPDEST PUSH2 0xABC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C9E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xA9B PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2025 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE DUP8 ISZERO ISZERO DUP1 PUSH2 0xBB9 JUMPI POP PUSH1 0x0 DUP8 GT JUMPDEST PUSH2 0xC0A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E743044657369726564206F7220616D6F756E743144657369726564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC2B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST PUSH2 0xC61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x746F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0xC86 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0xD36 JUMPI PUSH1 0x7 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA34123A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP4 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP4 DIV DUP4 SIGNEXTEND SWAP1 SWAP3 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 PUSH4 0xA34123A7 SWAP4 PUSH1 0x64 DUP1 DUP3 ADD SWAP5 SWAP4 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0x0 SWAP2 PUSH2 0xD58 SWAP2 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 SWAP1 SIGNEXTEND PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0xE05 JUMPI PUSH1 0x7 SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA34123A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP4 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x4 DUP6 ADD MSTORE SWAP2 DUP3 SIGNEXTEND SWAP1 SWAP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 PUSH4 0xA34123A7 SWAP4 PUSH1 0x64 DUP1 DUP3 ADD SWAP5 SWAP4 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0xE0F DUP9 DUP9 PUSH2 0x2394 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 PUSH2 0xE51 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x736861726573 PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 DUP3 LT ISZERO PUSH2 0xE93 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A1826B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xED5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A18A6B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xF10 JUMPI PUSH2 0xF10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x24C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF4B JUMPI PUSH2 0xF4B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0xF55 DUP5 DUP5 PUSH2 0x251A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 PUSH1 0x9 SLOAD PUSH2 0xFAD PUSH2 0x9D7 JUMP JUMPDEST GT ISZERO PUSH2 0xFF1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6D6178546F74616C537570706C79 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x991 PUSH2 0x1011 PUSH2 0x2021 JUMP JUMPDEST DUP5 PUSH2 0xABC DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x1022 PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x118E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xF4240 DUP2 LT PUSH2 0x11D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x70726F746F636F6C466565 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1240 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x128F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x7374726174656779 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1299 DUP7 DUP7 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x12A3 DUP5 DUP5 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x12AD DUP3 DUP3 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3850C7BD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3850C7BD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xE0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1306 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x131C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP6 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x136A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x3134B22AB83832B9 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x13AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x30B9B5A637BBB2B9 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH2 0x13D1 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x2844 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH2 0x13EF SWAP2 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 SWAP1 SIGNEXTEND PUSH2 0x2844 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F9 PUSH2 0x2A7F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1405 PUSH2 0x2B2B JUMP JUMPDEST SWAP1 POP PUSH32 0x210F60ADF1DB7A02E9DB9A49EC7C2EB2060C516CBCFD01A0C05288144738EE5D DUP4 DUP4 DUP4 PUSH2 0x1433 PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP6 SWAP1 SWAP6 SIGNEXTEND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x0 PUSH2 0x146B DUP11 DUP11 DUP6 DUP6 PUSH2 0x2BA0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1478 DUP11 DUP11 DUP4 PUSH2 0x2C46 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x2 DUP13 DUP2 SIGNEXTEND PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH3 0xFFFFFF PUSH1 0xA8 SHL NOT SWAP3 DUP15 SWAP1 SIGNEXTEND SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xC0 SHL MUL PUSH3 0xFFFFFF PUSH1 0xC0 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE PUSH2 0x14BE PUSH2 0x2A7F JUMP JUMPDEST SWAP3 POP PUSH2 0x14C8 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x14D8 DUP10 DUP10 DUP7 DUP7 PUSH2 0x2BA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14E8 DUP9 DUP9 DUP8 DUP8 PUSH2 0x2BA0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x1553 JUMPI PUSH2 0x150F DUP11 DUP11 DUP5 PUSH2 0x2C46 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH3 0xFFFFFF NOT AND PUSH3 0xFFFFFF PUSH1 0x2 DUP13 DUP2 SIGNEXTEND DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0xC DUP1 SLOAD PUSH3 0xFFFFFF PUSH1 0xD8 SHL NOT AND PUSH1 0x1 PUSH1 0xD8 SHL SWAP3 DUP15 SWAP1 SIGNEXTEND SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x159E JUMP JUMPDEST PUSH2 0x155E DUP9 DUP9 DUP4 PUSH2 0x2C46 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH3 0xFFFFFF NOT AND PUSH3 0xFFFFFF PUSH1 0x2 DUP11 DUP2 SIGNEXTEND DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0xC DUP1 SLOAD PUSH3 0xFFFFFF PUSH1 0xD8 SHL NOT AND PUSH1 0x1 PUSH1 0xD8 SHL SWAP3 DUP13 SWAP1 SIGNEXTEND SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1648 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x199A5B985B1A5E9959 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x165C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x1FCF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x973 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x948 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x973 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x991 PUSH2 0x16D4 PUSH2 0x2021 JUMP JUMPDEST DUP5 PUSH2 0xABC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D5A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x16FE PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x991 PUSH2 0x174B PUSH2 0x2021 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x179E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x180C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1857 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x199A5B985B1A5E9959 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA34123A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 DUP7 DUP2 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE DUP6 SWAP1 SIGNEXTEND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xA34123A7 SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x9E3D67B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 DUP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE DUP6 SWAP1 SIGNEXTEND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x64 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x4F1EB3D8 SWAP3 PUSH1 0xA4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x19CA SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x2CD0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x19F4 SWAP2 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 SWAP1 SIGNEXTEND PUSH2 0x2CD0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1A0E DUP3 PUSH2 0x1A08 DUP7 PUSH2 0x1A08 PUSH2 0x2A7F JUMP JUMPDEST SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP6 POP PUSH2 0x1A20 DUP2 PUSH2 0x1A08 DUP6 PUSH2 0x1A08 PUSH2 0x2B2B JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1ACD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE DUP6 PUSH2 0x1B0D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x736861726573 PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B2E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST PUSH2 0x1B64 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x746F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1B8D SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP11 DUP9 PUSH2 0x2DC5 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xD SLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x1BB9 SWAP2 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 SWAP1 SIGNEXTEND DUP13 DUP11 PUSH2 0x2DC5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1BC7 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BE7 DUP3 PUSH2 0x1BE1 DUP15 PUSH2 0x1BDB PUSH2 0x2A7F JUMP JUMPDEST SWAP1 PUSH2 0x2F9E JUMP JUMPDEST SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BFB DUP4 PUSH2 0x1BE1 DUP16 PUSH2 0x1BDB PUSH2 0x2B2B JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1C37 JUMPI PUSH2 0x1C37 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP12 DUP5 PUSH2 0x1FCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C71 JUMPI PUSH2 0x1C71 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP12 DUP4 PUSH2 0x1FCF JUMP JUMPDEST PUSH2 0x1C7F DUP3 PUSH2 0x1A08 DUP10 DUP9 PUSH2 0x260A JUMP JUMPDEST SWAP9 POP PUSH2 0x1C8F DUP2 PUSH2 0x1A08 DUP9 DUP8 PUSH2 0x260A JUMP JUMPDEST SWAP8 POP DUP12 DUP10 LT ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A1826B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP11 DUP9 LT ISZERO PUSH2 0x1D15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A18A6B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1D1F CALLER DUP15 PUSH2 0x305E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP15 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP12 SWAP1 MSTORE DUP1 DUP3 ADD DUP11 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP2 CALLER SWAP2 PUSH32 0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ISZERO PUSH2 0x1DD5 JUMPI PUSH2 0x1DD5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP7 PUSH2 0x1FCF JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1E0F JUMPI PUSH2 0x1E0F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP6 PUSH2 0x1FCF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1ED5 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x1F0E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8E2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1FC9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x8E2 SWAP1 DUP5 SWAP1 PUSH2 0x315A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x206A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3D0C PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x20AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C0F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2156 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3CE7 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x219B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3BCA PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21A6 DUP4 DUP4 DUP4 PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x21E3 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C31 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2212 SWAP1 DUP3 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x22FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22C0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22A8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x22ED JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2311 ADDRESS DUP6 DUP6 PUSH2 0x320B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x514EA4BF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x514EA4BF SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2374 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x238A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x23A2 PUSH2 0x9D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x23AF PUSH2 0x199F JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 PUSH1 0x0 EQ DUP1 PUSH2 0x23C2 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 PUSH2 0x23CD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x23D3 JUMPI INVALID JUMPDEST DUP3 PUSH2 0x23EF JUMPI DUP8 SWAP5 POP DUP7 SWAP4 POP PUSH2 0x23E8 DUP6 DUP6 PUSH2 0x3261 JUMP JUMPDEST SWAP6 POP PUSH2 0x24B6 JUMP JUMPDEST DUP2 PUSH2 0x2405 JUMPI DUP7 SWAP4 POP PUSH2 0x23E8 DUP2 PUSH2 0x1BE1 DUP7 DUP7 PUSH2 0x2F9E JUMP JUMPDEST DUP1 PUSH2 0x241B JUMPI DUP8 SWAP5 POP PUSH2 0x23E8 DUP3 PUSH2 0x1BE1 DUP8 DUP7 PUSH2 0x2F9E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2439 PUSH2 0x242A DUP11 DUP5 PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x2434 DUP11 DUP7 PUSH2 0x2F9E JUMP JUMPDEST PUSH2 0x3278 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2478 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x63726F7373 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x248B PUSH1 0x1 PUSH2 0x1A08 DUP5 PUSH2 0x1BE1 DUP6 DUP5 PUSH2 0x1F72 JUMP JUMPDEST SWAP6 POP PUSH2 0x24A0 PUSH1 0x1 PUSH2 0x1A08 DUP6 PUSH2 0x1BE1 DUP6 DUP5 PUSH2 0x1F72 JUMP JUMPDEST SWAP5 POP PUSH2 0x24B2 DUP3 PUSH2 0x1BE1 DUP6 DUP2 DUP6 DUP10 PUSH2 0x2F9E JUMP JUMPDEST SWAP7 POP POP JUMPDEST POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1E0F SWAP1 DUP6 SWAP1 PUSH2 0x315A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2575 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2581 PUSH1 0x0 DUP4 DUP4 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x258E SWAP1 DUP3 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x25B4 SWAP1 DUP3 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x2 DUP3 DUP2 SIGNEXTEND SWAP1 DUP5 SWAP1 SIGNEXTEND SLT PUSH2 0x26D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x3A34B1B5A637BBB2B9101E103A34B1B5AAB83832B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E7 NOT PUSH1 0x2 DUP5 SWAP1 SIGNEXTEND SLT ISZERO PUSH2 0x2729 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x7469636B4C6F77657220746F6F206C6F77 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E8 PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x277A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0xE8D2C6D6AAE0E0CAE440E8DEDE40D0D2CED PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2789 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x27DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7469636B4C6F7765722025207469636B53706163696E67000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x27EE JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7469636B55707065722025207469636B53706163696E67000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2853 DUP6 DUP6 PUSH2 0x2303 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x2902 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA34123A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 DUP9 DUP2 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE DUP8 SWAP1 SIGNEXTEND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xA34123A7 SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x28F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP4 POP SWAP2 POP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x9E3D67B PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 DUP9 DUP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE DUP8 SWAP1 SIGNEXTEND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x64 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x4F1EB3D8 SWAP3 PUSH1 0xA4 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2988 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x299E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND SWAP1 POP PUSH1 0x0 PUSH2 0x29C3 DUP4 DUP8 PUSH2 0x1F72 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x29D1 DUP4 DUP8 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x2A2A JUMPI PUSH2 0x29F3 PUSH3 0xF4240 PUSH2 0x1BE1 DUP8 DUP5 PUSH2 0x2F9E JUMP JUMPDEST SWAP3 POP PUSH2 0x2A06 PUSH3 0xF4240 PUSH2 0x1BE1 DUP7 DUP5 PUSH2 0x2F9E JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 SWAP3 POP PUSH2 0x2A16 SWAP1 DUP5 PUSH2 0x260A JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0xF SLOAD PUSH2 0x2A26 SWAP1 DUP4 PUSH2 0x260A JUMP JUMPDEST PUSH1 0xF SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x1AC56D7E866E3F5EA9AA92AA11758EAD39A0A5F013F3FEFB0F47CB9D008EDD27 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B26 PUSH1 0xE SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x1F72 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B26 PUSH1 0xF SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x2C3C DUP2 PUSH2 0x2C2C DUP9 PUSH2 0x3287 JUMP JUMPDEST PUSH2 0x2C35 DUP9 PUSH2 0x3287 JUMP JUMPDEST DUP8 DUP8 PUSH2 0x35B9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3C8A7D8D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 DUP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE DUP6 SWAP1 SIGNEXTEND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 PUSH4 0x3C8A7D8D SWAP4 PUSH1 0xC4 DUP1 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2CE0 ADDRESS DUP7 DUP7 PUSH2 0x320B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x514EA4BF DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2D6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2D8B DUP9 DUP9 DUP6 PUSH2 0x367D JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x2DA3 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0x260A JUMP JUMPDEST SWAP6 POP PUSH2 0x2DB8 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH2 0x260A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2DD4 DUP8 DUP8 PUSH2 0x2303 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2DF6 PUSH2 0x2DE3 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x1BE1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND DUP10 PUSH2 0x2F9E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2F93 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA34123A7 DUP10 DUP10 PUSH2 0x2E1A DUP6 PUSH2 0x3727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP5 POP SWAP3 POP DUP4 ISZERO ISZERO DUP1 PUSH2 0x2EB2 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST ISZERO PUSH2 0x2F93 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4F1EB3D8 DUP7 DUP11 DUP11 PUSH2 0x2ED4 DUP10 PUSH2 0x3727 JUMP JUMPDEST PUSH2 0x2EDD DUP10 PUSH2 0x3727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP6 POP AND SWAP3 POP JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2FAD JUMPI POP PUSH1 0x0 PUSH2 0x995 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2FBA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C7D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x304D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3056 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x30A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3CC6 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30AF DUP3 PUSH1 0x0 DUP4 PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x30EC DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3BED PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x3112 SWAP1 DUP3 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31AF DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x373E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x8E2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3D30 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 SIGNEXTEND PUSH1 0xE8 SWAP1 DUP2 SHL PUSH1 0x34 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 SIGNEXTEND SWAP1 SWAP2 SHL PUSH1 0x37 DUP5 ADD MSTORE DUP1 MLOAD DUP1 DUP5 SUB PUSH1 0x1A ADD DUP2 MSTORE PUSH1 0x3A SWAP1 SWAP4 ADD SWAP1 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x3271 JUMPI DUP2 PUSH2 0xAC5 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x3271 JUMPI DUP2 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x329E JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x32A6 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x32E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x32F8 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x330A JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x333E JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x335D JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x337C JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x339B JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x33BA JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x33D9 JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x33F8 JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x3418 JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x3438 JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x3458 JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x3478 JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x3498 JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x34B8 JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x34D8 JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x34F8 JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x3519 JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x3539 JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x3558 JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x3575 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x3590 JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x358C JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x35A4 JUMPI PUSH1 0x1 PUSH2 0x35A7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x35D9 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x3604 JUMPI PUSH2 0x35FD DUP6 DUP6 DUP6 PUSH2 0x3755 JUMP JUMPDEST SWAP1 POP PUSH2 0x3674 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x3666 JUMPI PUSH1 0x0 PUSH2 0x362B DUP8 DUP7 DUP7 PUSH2 0x3755 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x363A DUP8 DUP10 DUP7 PUSH2 0x37B8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x365B JUMPI DUP1 PUSH2 0x365D JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0x3674 JUMP JUMPDEST PUSH2 0x3671 DUP6 DUP6 DUP5 PUSH2 0x37B8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x36FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x371A DUP2 PUSH2 0x370B DUP9 PUSH2 0x3287 JUMP JUMPDEST PUSH2 0x3714 DUP9 PUSH2 0x3287 JUMP JUMPDEST DUP8 PUSH2 0x37F5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 GT ISZERO PUSH2 0x373A JUMPI INVALID JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x374D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3891 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3775 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH1 0x0 PUSH2 0x3798 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x39EC JUMP JUMPDEST SWAP1 POP PUSH2 0x3674 PUSH2 0x37B3 DUP5 DUP4 DUP9 DUP9 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39EC JUMP JUMPDEST PUSH2 0x3A9B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x37D8 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x374D PUSH2 0x37B3 DUP4 PUSH1 0x1 PUSH1 0x60 SHL DUP8 DUP8 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3816 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x3841 JUMPI PUSH2 0x383A DUP6 DUP6 DUP6 PUSH2 0x3AB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3888 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x387A JUMPI PUSH2 0x3866 DUP7 DUP6 DUP6 PUSH2 0x3AB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3873 DUP6 DUP8 DUP6 PUSH2 0x3B1A JUMP JUMPDEST SWAP1 POP PUSH2 0x3888 JUMP JUMPDEST PUSH2 0x3885 DUP6 DUP6 DUP6 PUSH2 0x3B1A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x38D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C57 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38DB DUP6 PUSH2 0x3B5D JUMP JUMPDEST PUSH2 0x392C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x396A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x394B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x39CC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x39D1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x39E1 DUP3 DUP3 DUP7 PUSH2 0x3B63 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x3A22 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x3A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0xAC5 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x3A2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x113D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3AD1 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B0A PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SHL DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39EC JUMP JUMPDEST DUP2 PUSH2 0x3B11 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3B3A JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x374D DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x39EC JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3B72 JUMPI POP DUP2 PUSH2 0xAC5 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3B82 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x22C0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22A8 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636541646472 PUSH6 0x73733A20696E PUSH20 0x756666696369656E742062616C616E636520666F PUSH19 0x2063616C6C536166654D6174683A206D756C74 PUSH10 0x706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 0xDC 0xE8 0xD7 0xA7 0xED CREATE SWAP14 GASPRICE SHL SWAP2 ISZERO DUP10 0x25 PUSH11 0xB98D16EC5637988DA43CD8 0x22 0x5D 0xC5 0xD2 0xE8 0xE5 LOG3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        876,
        21331
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "6": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "REVERT",
      "path": "23"
    },
    "16": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "17": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "POP",
      "path": "23"
    },
    "18": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "21": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "LT",
      "path": "23"
    },
    "22": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E"
    },
    "25": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "26": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "29": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "SHR",
      "path": "23"
    },
    "32": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "33": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x89A28EB2"
    },
    "38": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "GT",
      "path": "23"
    },
    "39": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x146"
    },
    "42": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "43": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "44": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB3F05B97"
    },
    "49": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "GT",
      "path": "23"
    },
    "50": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC3"
    },
    "53": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "54": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "55": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD3487997"
    },
    "60": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "GT",
      "path": "23"
    },
    "61": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "65": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "66": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD3487997"
    },
    "71": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "72": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x70A"
    },
    "75": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "76": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "77": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDC2C256F"
    },
    "82": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "83": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x786"
    },
    "86": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "87": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "88": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "94": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7BC"
    },
    "97": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "98": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "99": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xEAE989A2"
    },
    "104": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "105": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7EA"
    },
    "108": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "109": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "110": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF39C38A0"
    },
    "115": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "116": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7F2"
    },
    "119": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "120": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "121": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFA082743"
    },
    "126": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "127": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7FA"
    },
    "130": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "131": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E"
    },
    "134": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMP",
      "path": "23"
    },
    "135": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "136": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "137": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB3F05B97"
    },
    "142": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "143": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x699"
    },
    "146": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "147": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "148": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC4A7761E"
    },
    "153": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "154": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6A1"
    },
    "157": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "158": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "159": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD0C93A7C"
    },
    "164": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "165": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6C2"
    },
    "168": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "169": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "170": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD21220A7"
    },
    "175": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "176": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6CA"
    },
    "179": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "180": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "181": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD331BEF7"
    },
    "186": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "187": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6D2"
    },
    "190": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "191": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E"
    },
    "194": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMP",
      "path": "23"
    },
    "195": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "196": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "197": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA8C62E76"
    },
    "202": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "GT",
      "path": "23"
    },
    "203": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10A"
    },
    "206": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "207": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "208": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA8C62E76"
    },
    "213": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "214": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5FD"
    },
    "217": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "218": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "219": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA9059CBB"
    },
    "224": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "225": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x605"
    },
    "228": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "229": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "230": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xAB033EA9"
    },
    "235": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "236": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x631"
    },
    "239": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "240": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "241": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xABBFFCB9"
    },
    "246": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "247": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x657"
    },
    "250": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "251": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "252": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB0E21E8A"
    },
    "257": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "258": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x691"
    },
    "261": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "262": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E"
    },
    "265": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMP",
      "path": "23"
    },
    "266": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "267": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "268": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x89A28EB2"
    },
    "273": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "274": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x54B"
    },
    "277": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "278": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "279": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95CCEA67"
    },
    "284": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "285": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x595"
    },
    "288": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "289": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "290": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95D89B41"
    },
    "295": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "296": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5C1"
    },
    "299": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "300": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "301": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA00FA77F"
    },
    "306": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "307": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5C9"
    },
    "310": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "311": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "312": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA457C2D7"
    },
    "317": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "318": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5D1"
    },
    "321": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "322": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E"
    },
    "325": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMP",
      "path": "23"
    },
    "326": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "327": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "328": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "333": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "GT",
      "path": "23"
    },
    "334": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1DF"
    },
    "337": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "338": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "339": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x4BB278F3"
    },
    "344": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "GT",
      "path": "23"
    },
    "345": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A3"
    },
    "348": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "349": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "350": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x4BB278F3"
    },
    "355": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "356": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4E8"
    },
    "359": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "360": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "361": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x51E87AF7"
    },
    "366": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "367": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4F0"
    },
    "370": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "371": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "372": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x5AA6E675"
    },
    "377": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "378": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4F8"
    },
    "381": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "382": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "383": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "388": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "389": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x500"
    },
    "392": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "393": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "394": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x787DCE3D"
    },
    "399": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "400": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x526"
    },
    "403": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "404": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "405": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x888A9134"
    },
    "410": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "411": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x543"
    },
    "414": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "415": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E"
    },
    "418": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMP",
      "path": "23"
    },
    "419": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "420": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "421": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "426": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "427": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3FF"
    },
    "430": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "431": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "432": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x33A100CA"
    },
    "437": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "438": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x41D"
    },
    "441": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "442": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "443": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x365D0ED7"
    },
    "448": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "449": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x443"
    },
    "452": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "453": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "454": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x39509351"
    },
    "459": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "460": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x49F"
    },
    "463": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "464": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "465": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3F3E4C11"
    },
    "470": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "471": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4CB"
    },
    "474": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "475": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E"
    },
    "478": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMP",
      "path": "23"
    },
    "479": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "480": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "481": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x16F0115B"
    },
    "486": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "GT",
      "path": "23"
    },
    "487": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x226"
    },
    "490": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "491": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "492": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x16F0115B"
    },
    "497": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "498": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x397"
    },
    "501": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "502": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "503": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x18160DDD"
    },
    "508": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "509": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x39F"
    },
    "512": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "513": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "514": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x238EFCBC"
    },
    "519": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "520": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3B9"
    },
    "523": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "524": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "525": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x23B872DD"
    },
    "530": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "531": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3C1"
    },
    "534": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "535": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "536": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x2AB4D052"
    },
    "541": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "542": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3F7"
    },
    "545": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "546": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E"
    },
    "549": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMP",
      "path": "23"
    },
    "550": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "551": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "552": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x430C130"
    },
    "557": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "558": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x263"
    },
    "561": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "562": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "563": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6FDDE03"
    },
    "568": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "569": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x297"
    },
    "572": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "573": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "574": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95EA7B3"
    },
    "579": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "580": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x314"
    },
    "583": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "584": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "585": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDFE1681"
    },
    "590": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "591": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x354"
    },
    "594": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "595": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "596": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF35BCAC"
    },
    "601": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "EQ",
      "path": "23"
    },
    "602": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x378"
    },
    "605": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "606": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "607": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "609": {
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "DUP1",
      "path": "23"
    },
    "610": {
      "first_revert": true,
      "fn": null,
      "offset": [
        876,
        21331
      ],
      "op": "REVERT",
      "path": "23"
    },
    "611": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "612": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "615": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "617": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "DUP1",
      "path": "23"
    },
    "618": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "619": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "SUB",
      "path": "23"
    },
    "620": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "622": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "DUP2",
      "path": "23"
    },
    "623": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "LT",
      "path": "23"
    },
    "624": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "625": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x279"
    },
    "628": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "629": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "631": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "DUP1",
      "path": "23"
    },
    "632": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "REVERT",
      "path": "23"
    },
    "633": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "DUP1",
      "path": "23"
    },
    "636": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "637": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "638": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "640": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "DUP2",
      "path": "23"
    },
    "641": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "ADD",
      "path": "23"
    },
    "642": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "643": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "644": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "646": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "ADD",
      "path": "23"
    },
    "647": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "op": "SUB"
    },
    "656": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "AND",
      "path": "23"
    },
    "657": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x802"
    },
    "660": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        17979,
        18361
      ],
      "op": "JUMP",
      "path": "23"
    },
    "661": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "662": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "STOP",
      "path": "23"
    },
    "663": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "664": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "667": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E7"
    },
    "670": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMP",
      "path": "2"
    },
    "671": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "672": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "674": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "675": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "676": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "678": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "679": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP3",
      "path": "2"
    },
    "680": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "681": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "682": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "683": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "684": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "685": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "686": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "687": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "688": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "689": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "690": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "691": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "692": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "693": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "694": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "695": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "696": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "697": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP6",
      "path": "2"
    },
    "698": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "699": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "700": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "701": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "702": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "703": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "705": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "706": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "707": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "708": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "LT",
      "path": "2"
    },
    "709": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "710": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D9"
    },
    "713": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "714": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "715": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "716": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "717": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "718": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "719": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP3",
      "path": "2"
    },
    "720": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "721": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "722": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "724": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "725": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C1"
    },
    "728": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMP",
      "path": "2"
    },
    "729": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "730": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "731": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "732": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "733": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "734": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "735": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "736": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "737": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "738": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "739": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "740": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "742": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "AND",
      "path": "2"
    },
    "743": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "744": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "745": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "748": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "749": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "750": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP3",
      "path": "2"
    },
    "751": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SUB",
      "path": "2"
    },
    "752": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "753": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "754": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "756": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "757": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "759": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SUB",
      "path": "2"
    },
    "760": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "763": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "EXP",
      "path": "2"
    },
    "764": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SUB",
      "path": "2"
    },
    "765": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "NOT",
      "path": "2"
    },
    "766": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "AND",
      "path": "2"
    },
    "767": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "768": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "769": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "771": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "772": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "773": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "774": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "775": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "776": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "777": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "778": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "779": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "780": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "782": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "783": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "784": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "785": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SUB",
      "path": "2"
    },
    "786": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "787": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "RETURN",
      "path": "2"
    },
    "788": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "789": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340"
    },
    "792": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "794": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP1",
      "path": "2"
    },
    "795": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "796": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SUB",
      "path": "2"
    },
    "797": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "799": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP2",
      "path": "2"
    },
    "800": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "LT",
      "path": "2"
    },
    "801": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "802": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32A"
    },
    "805": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "806": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "808": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP1",
      "path": "2"
    },
    "809": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "REVERT",
      "path": "2"
    },
    "810": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "811": {
      "op": "POP"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "op": "SUB"
    },
    "820": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP2",
      "path": "2"
    },
    "821": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "822": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "AND",
      "path": "2"
    },
    "823": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "824": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "826": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ADD",
      "path": "2"
    },
    "827": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "828": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97D"
    },
    "831": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMP",
      "path": "2"
    },
    "832": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "833": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "835": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP1",
      "path": "2"
    },
    "836": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "837": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "838": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "839": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "840": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP3",
      "path": "2"
    },
    "841": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "842": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "843": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "844": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP2",
      "path": "2"
    },
    "845": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "846": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SUB",
      "path": "2"
    },
    "847": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "849": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ADD",
      "path": "2"
    },
    "850": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "851": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "RETURN",
      "path": "2"
    },
    "852": {
      "offset": [
        1634,
        1664
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "853": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35C"
    },
    "856": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x99B"
    },
    "859": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        1634,
        1664
      ],
      "op": "JUMP",
      "path": "23"
    },
    "860": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "861": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "863": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "DUP1",
      "path": "23"
    },
    "864": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "871": {
      "op": "SHL"
    },
    "872": {
      "op": "SUB"
    },
    "873": {
      "offset": [
        1634,
        1664
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "874": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "875": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "AND",
      "path": "23"
    },
    "876": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "DUP3",
      "path": "23"
    },
    "877": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "878": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "879": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "880": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "DUP2",
      "path": "23"
    },
    "881": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "882": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "SUB",
      "path": "23"
    },
    "883": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "885": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "ADD",
      "path": "23"
    },
    "886": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "887": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "RETURN",
      "path": "23"
    },
    "888": {
      "offset": [
        2025,
        2048
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "889": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x380"
    },
    "892": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9BF"
    },
    "895": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2025,
        2048
      ],
      "op": "JUMP",
      "path": "23"
    },
    "896": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "897": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "899": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "DUP1",
      "path": "23"
    },
    "900": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "901": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "903": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "904": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "905": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "906": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "907": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "DUP3",
      "path": "23"
    },
    "908": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "909": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "910": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "911": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "DUP2",
      "path": "23"
    },
    "912": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "913": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SUB",
      "path": "23"
    },
    "914": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "916": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "ADD",
      "path": "23"
    },
    "917": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "918": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "RETURN",
      "path": "23"
    },
    "919": {
      "offset": [
        1602,
        1628
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "920": {
      "fn": "ERC20.approve",
      "offset": [
        1602,
        1628
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35C"
    },
    "923": {
      "fn": "ERC20.approve",
      "offset": [
        1602,
        1628
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9C8"
    },
    "926": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        1602,
        1628
      ],
      "op": "JUMP",
      "path": "23"
    },
    "927": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "928": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "931": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D7"
    },
    "934": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "935": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "936": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "938": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "939": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "940": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "941": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "942": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "943": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "944": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "945": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "946": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "947": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SUB",
      "path": "2"
    },
    "948": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "950": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "ADD",
      "path": "2"
    },
    "951": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "952": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "RETURN",
      "path": "2"
    },
    "953": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21076,
        21224
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "954": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21076,
        21224
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "957": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21076,
        21224
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9DD"
    },
    "960": {
      "fn": "AlphaVault.acceptGovernance",
      "jump": "i",
      "offset": [
        21076,
        21224
      ],
      "op": "JUMP",
      "path": "23"
    },
    "961": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "962": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340"
    },
    "965": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "967": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP1",
      "path": "2"
    },
    "968": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "969": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SUB",
      "path": "2"
    },
    "970": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "972": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "973": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "LT",
      "path": "2"
    },
    "974": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "975": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D7"
    },
    "978": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "979": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "981": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP1",
      "path": "2"
    },
    "982": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "REVERT",
      "path": "2"
    },
    "983": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "984": {
      "op": "POP"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "994": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "995": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "996": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "AND",
      "path": "2"
    },
    "997": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "998": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1000": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1001": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "ADD",
      "path": "2"
    },
    "1002": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1003": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1004": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1005": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "AND",
      "path": "2"
    },
    "1006": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1007": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1009": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "ADD",
      "path": "2"
    },
    "1010": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1011": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA44"
    },
    "1014": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1015": {
      "offset": [
        1779,
        1808
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1016": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1779,
        1808
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A7"
    },
    "1019": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1779,
        1808
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xACC"
    },
    "1022": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        1779,
        1808
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1023": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1024": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x407"
    },
    "1027": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAD2"
    },
    "1030": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1031": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1032": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1034": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1035": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1036": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1038": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1039": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1040": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "AND",
      "path": "2"
    },
    "1041": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1042": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1043": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1044": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1045": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1046": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1047": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SUB",
      "path": "2"
    },
    "1048": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1050": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "ADD",
      "path": "2"
    },
    "1051": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1052": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "RETURN",
      "path": "2"
    },
    "1053": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1054": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1057": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1059": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1060": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1061": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "SUB",
      "path": "23"
    },
    "1062": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1064": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1065": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "LT",
      "path": "23"
    },
    "1066": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1067": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x433"
    },
    "1070": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1071": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1073": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1074": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1075": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1076": {
      "op": "POP"
    },
    "1077": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "op": "SUB"
    },
    "1086": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "AND",
      "path": "23"
    },
    "1087": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xADB"
    },
    "1090": {
      "fn": "AlphaVault.setStrategy",
      "jump": "i",
      "offset": [
        18855,
        18956
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1091": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1092": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x481"
    },
    "1095": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1097": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1098": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1099": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SUB",
      "path": "23"
    },
    "1100": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "1102": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1103": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "LT",
      "path": "23"
    },
    "1104": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1105": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x459"
    },
    "1108": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1109": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1111": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1112": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1113": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1114": {
      "op": "POP"
    },
    "1115": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1116": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1117": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1118": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1120": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1121": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "ADD",
      "path": "23"
    },
    "1122": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1123": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1124": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1126": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1127": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "ADD",
      "path": "23"
    },
    "1128": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1129": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1130": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1132": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1133": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "ADD",
      "path": "23"
    },
    "1134": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1135": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1136": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "1138": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "ADD",
      "path": "23"
    },
    "1139": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1146": {
      "op": "SHL"
    },
    "1147": {
      "op": "SUB"
    },
    "1148": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "AND",
      "path": "23"
    },
    "1149": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB49"
    },
    "1152": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        3708,
        5175
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1153": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1154": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1156": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1157": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1158": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1159": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1160": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1161": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1163": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1164": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "ADD",
      "path": "23"
    },
    "1165": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1166": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1167": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1168": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1169": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1170": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1171": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "ADD",
      "path": "23"
    },
    "1172": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1173": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1174": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1175": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1176": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1177": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SUB",
      "path": "23"
    },
    "1178": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1180": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "ADD",
      "path": "23"
    },
    "1181": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1182": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "RETURN",
      "path": "23"
    },
    "1183": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1184": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340"
    },
    "1187": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1189": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1190": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1191": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "SUB",
      "path": "2"
    },
    "1192": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1194": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1195": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "LT",
      "path": "2"
    },
    "1196": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1197": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B5"
    },
    "1200": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1201": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1203": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1204": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1205": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1206": {
      "op": "POP"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "op": "SUB"
    },
    "1215": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1216": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1217": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "AND",
      "path": "2"
    },
    "1218": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1219": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1221": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "ADD",
      "path": "2"
    },
    "1222": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1223": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1004"
    },
    "1226": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1227": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1228": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1231": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1233": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1234": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1235": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "SUB",
      "path": "23"
    },
    "1236": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1238": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1239": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "LT",
      "path": "23"
    },
    "1240": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1241": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4E1"
    },
    "1244": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1245": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1247": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1248": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1249": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1252": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1052"
    },
    "1255": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "jump": "i",
      "offset": [
        19552,
        19677
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1256": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19767,
        19844
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1257": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19767,
        19844
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1260": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19767,
        19844
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10A3"
    },
    "1263": {
      "fn": "AlphaVault.finalize",
      "jump": "i",
      "offset": [
        19767,
        19844
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1264": {
      "offset": [
        1996,
        2019
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1265": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1996,
        2019
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x380"
    },
    "1268": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1996,
        2019
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1104"
    },
    "1271": {
      "fn": "AlphaVault.finalize",
      "jump": "i",
      "offset": [
        1996,
        2019
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1272": {
      "offset": [
        1843,
        1868
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1273": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1843,
        1868
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35C"
    },
    "1276": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1843,
        1868
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1114"
    },
    "1279": {
      "fn": "AlphaVault.finalize",
      "jump": "i",
      "offset": [
        1843,
        1868
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1280": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1281": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "1284": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1286": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1287": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1288": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "SUB",
      "path": "2"
    },
    "1289": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1291": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1292": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "LT",
      "path": "2"
    },
    "1293": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1294": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x516"
    },
    "1297": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1298": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1300": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1301": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1302": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1303": {
      "op": "POP"
    },
    "1304": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "op": "SUB"
    },
    "1313": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "AND",
      "path": "2"
    },
    "1314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1123"
    },
    "1317": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1318": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1319": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1322": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1324": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1325": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1326": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "SUB",
      "path": "23"
    },
    "1327": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1329": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1330": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "LT",
      "path": "23"
    },
    "1331": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1332": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x53C"
    },
    "1335": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1336": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1338": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1339": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1340": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1343": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1142"
    },
    "1346": {
      "fn": "AlphaVault.setProtocolFee",
      "jump": "i",
      "offset": [
        19105,
        19270
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1347": {
      "offset": [
        1968,
        1990
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1348": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        1968,
        1990
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x380"
    },
    "1351": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        1968,
        1990
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11D8"
    },
    "1354": {
      "fn": "AlphaVault.setProtocolFee",
      "jump": "i",
      "offset": [
        1968,
        1990
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1355": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1356": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1359": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1361": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1362": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1363": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SUB",
      "path": "23"
    },
    "1364": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "1366": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1367": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "LT",
      "path": "23"
    },
    "1368": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1369": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x561"
    },
    "1372": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1373": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1375": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1376": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1377": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1378": {
      "op": "POP"
    },
    "1379": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1380": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1381": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "1383": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1384": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1385": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1386": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1387": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1389": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1390": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "ADD",
      "path": "23"
    },
    "1391": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1392": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1393": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1394": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1395": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1397": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1398": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "ADD",
      "path": "23"
    },
    "1399": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1400": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1401": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1402": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1403": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1405": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1406": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "ADD",
      "path": "23"
    },
    "1407": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1408": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1409": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1410": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1411": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "1413": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1414": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "ADD",
      "path": "23"
    },
    "1415": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1416": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1417": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1418": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1419": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "1421": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "ADD",
      "path": "23"
    },
    "1422": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1423": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1424": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1425": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11E8"
    },
    "1428": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10085,
        11939
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1429": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1430": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1433": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1435": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1436": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1437": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "SUB",
      "path": "23"
    },
    "1438": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1440": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1441": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "LT",
      "path": "23"
    },
    "1442": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1443": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5AB"
    },
    "1446": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1447": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1449": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1450": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1451": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1459": {
      "op": "SHL"
    },
    "1460": {
      "op": "SUB"
    },
    "1461": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1462": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1463": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "AND",
      "path": "23"
    },
    "1464": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1465": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1467": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "ADD",
      "path": "23"
    },
    "1468": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1469": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15B1"
    },
    "1472": {
      "fn": "AlphaVault.emergencyWithdraw",
      "jump": "i",
      "offset": [
        19980,
        20158
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1473": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1474": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "1477": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1660"
    },
    "1480": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2370,
        2463
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1481": {
      "offset": [
        2095,
        2130
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1482": {
      "fn": "ERC20.symbol",
      "offset": [
        2095,
        2130
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A7"
    },
    "1485": {
      "fn": "ERC20.symbol",
      "offset": [
        2095,
        2130
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16C1"
    },
    "1488": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2095,
        2130
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1489": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1490": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340"
    },
    "1493": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1495": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1496": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1497": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "SUB",
      "path": "2"
    },
    "1498": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1500": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1501": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "LT",
      "path": "2"
    },
    "1502": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1503": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E7"
    },
    "1506": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1507": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1509": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1510": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1511": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1519": {
      "op": "SHL"
    },
    "1520": {
      "op": "SUB"
    },
    "1521": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1522": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1523": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "AND",
      "path": "2"
    },
    "1524": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1525": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1527": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "ADD",
      "path": "2"
    },
    "1528": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1529": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16C7"
    },
    "1532": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1533": {
      "offset": [
        1814,
        1837
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1534": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1814,
        1837
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35C"
    },
    "1537": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1814,
        1837
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x172F"
    },
    "1540": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        1814,
        1837
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1541": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1542": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340"
    },
    "1545": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1547": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1548": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1549": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "SUB",
      "path": "2"
    },
    "1550": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1552": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1553": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "LT",
      "path": "2"
    },
    "1554": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1555": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61B"
    },
    "1558": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1559": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1561": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1562": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1563": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1571": {
      "op": "SHL"
    },
    "1572": {
      "op": "SUB"
    },
    "1573": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1574": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1575": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "AND",
      "path": "2"
    },
    "1576": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1577": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1579": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "ADD",
      "path": "2"
    },
    "1580": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1581": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x173E"
    },
    "1584": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1585": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1586": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1589": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1591": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1592": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1593": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "SUB",
      "path": "23"
    },
    "1594": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1596": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1597": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "LT",
      "path": "23"
    },
    "1598": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1599": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x647"
    },
    "1602": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1603": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1605": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1606": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1607": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1608": {
      "op": "POP"
    },
    "1609": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "op": "SUB"
    },
    "1618": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "AND",
      "path": "23"
    },
    "1619": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1752"
    },
    "1622": {
      "fn": "AlphaVault.setGovernance",
      "jump": "i",
      "offset": [
        20814,
        20930
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1623": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1624": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1627": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1629": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1630": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1631": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "SUB",
      "path": "23"
    },
    "1632": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1634": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1635": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "LT",
      "path": "23"
    },
    "1636": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1637": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x66D"
    },
    "1640": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1641": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1643": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1644": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1645": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1646": {
      "op": "POP"
    },
    "1647": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1648": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1649": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "1651": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1652": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1653": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1654": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1655": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1657": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1658": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "ADD",
      "path": "23"
    },
    "1659": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1660": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1661": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1662": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1663": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1664": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1666": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "ADD",
      "path": "23"
    },
    "1667": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1674": {
      "op": "SHL"
    },
    "1675": {
      "op": "SUB"
    },
    "1676": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "AND",
      "path": "23"
    },
    "1677": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17C0"
    },
    "1680": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "i",
      "offset": [
        20315,
        20640
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1681": {
      "offset": [
        1747,
        1773
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1682": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1747,
        1773
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A7"
    },
    "1685": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1747,
        1773
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1989"
    },
    "1688": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "i",
      "offset": [
        1747,
        1773
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1689": {
      "offset": [
        1912,
        1933
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1690": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1912,
        1933
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x340"
    },
    "1693": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1912,
        1933
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x198F"
    },
    "1696": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "i",
      "offset": [
        1912,
        1933
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1697": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1698": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6A9"
    },
    "1701": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x199F"
    },
    "1704": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        14418,
        14834
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1705": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1706": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1708": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1709": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1710": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1711": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1712": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1713": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1715": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1716": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "ADD",
      "path": "23"
    },
    "1717": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1718": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1719": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1720": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1721": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1722": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1723": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1724": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1725": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1726": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SUB",
      "path": "23"
    },
    "1727": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "ADD",
      "path": "23"
    },
    "1728": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1729": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "RETURN",
      "path": "23"
    },
    "1730": {
      "offset": [
        1706,
        1740
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1731": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1706,
        1740
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x380"
    },
    "1734": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1706,
        1740
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A2A"
    },
    "1737": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        1706,
        1740
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1738": {
      "offset": [
        1670,
        1700
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1739": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1670,
        1700
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35C"
    },
    "1742": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1670,
        1700
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A4E"
    },
    "1745": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        1670,
        1700
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1746": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1747": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6A9"
    },
    "1750": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1752": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1753": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1754": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "SUB",
      "path": "23"
    },
    "1755": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "1757": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1758": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "LT",
      "path": "23"
    },
    "1759": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1760": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6E8"
    },
    "1763": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1764": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1766": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1767": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1768": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1771": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1772": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1773": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1775": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1776": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "ADD",
      "path": "23"
    },
    "1777": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1778": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1779": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1781": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1782": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "ADD",
      "path": "23"
    },
    "1783": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1784": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1785": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1787": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "ADD",
      "path": "23"
    },
    "1788": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "op": "SUB"
    },
    "1797": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "AND",
      "path": "23"
    },
    "1798": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A72"
    },
    "1801": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        7297,
        8781
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1802": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1803": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1806": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1808": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1809": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1810": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "SUB",
      "path": "23"
    },
    "1811": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1813": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1814": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "LT",
      "path": "23"
    },
    "1815": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1816": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x720"
    },
    "1819": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1820": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1822": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1823": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1824": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1825": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1826": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1827": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1828": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1830": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1831": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ADD",
      "path": "23"
    },
    "1832": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1833": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1834": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1835": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ADD",
      "path": "23"
    },
    "1836": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1837": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1839": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1840": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ADD",
      "path": "23"
    },
    "1841": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1843": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1844": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ADD",
      "path": "23"
    },
    "1845": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1846": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH5",
      "path": "23",
      "value": "0x100000000"
    },
    "1852": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1853": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "GT",
      "path": "23"
    },
    "1854": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1855": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x747"
    },
    "1858": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1859": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1861": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1862": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1863": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1864": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1865": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ADD",
      "path": "23"
    },
    "1866": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1867": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1869": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1870": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ADD",
      "path": "23"
    },
    "1871": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "GT",
      "path": "23"
    },
    "1872": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1873": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x759"
    },
    "1876": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1877": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1879": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1880": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1881": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1882": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1883": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1884": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1885": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1887": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ADD",
      "path": "23"
    },
    "1888": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1889": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1890": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1892": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1893": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "MUL",
      "path": "23"
    },
    "1894": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1895": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ADD",
      "path": "23"
    },
    "1896": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "GT",
      "path": "23"
    },
    "1897": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH5",
      "path": "23",
      "value": "0x100000000"
    },
    "1903": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1904": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "GT",
      "path": "23"
    },
    "1905": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "OR",
      "path": "23"
    },
    "1906": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1907": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x77B"
    },
    "1910": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1911": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1913": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1914": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1915": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1918": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D84"
    },
    "1925": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "jump": "i",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1926": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1927": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295"
    },
    "1930": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1932": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1933": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1934": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "SUB",
      "path": "23"
    },
    "1935": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1937": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1938": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "LT",
      "path": "23"
    },
    "1939": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1940": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x79C"
    },
    "1943": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1944": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1946": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1947": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1948": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1949": {
      "op": "POP"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1959": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1960": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1961": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "AND",
      "path": "23"
    },
    "1962": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1963": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1965": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1966": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "ADD",
      "path": "23"
    },
    "1967": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1968": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1969": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1971": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1972": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1973": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "ADD",
      "path": "23"
    },
    "1974": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1975": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "AND",
      "path": "23"
    },
    "1976": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E15"
    },
    "1979": {
      "fn": "AlphaVault.sweep",
      "jump": "i",
      "offset": [
        18446,
        18666
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1980": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1981": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "1984": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1986": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1987": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1988": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "SUB",
      "path": "2"
    },
    "1989": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1991": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1992": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "LT",
      "path": "2"
    },
    "1993": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1994": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D2"
    },
    "1997": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1998": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2000": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2001": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2002": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "op": "SUB"
    },
    "2012": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2013": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "2014": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2015": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "AND",
      "path": "2"
    },
    "2016": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2017": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2019": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "ADD",
      "path": "2"
    },
    "2020": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "2021": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "AND",
      "path": "2"
    },
    "2022": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F22"
    },
    "2025": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2026": {
      "offset": [
        2054,
        2089
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2027": {
      "fn": "ERC20.allowance",
      "offset": [
        2054,
        2089
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A7"
    },
    "2030": {
      "fn": "ERC20.allowance",
      "offset": [
        2054,
        2089
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F4D"
    },
    "2033": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2054,
        2089
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2034": {
      "offset": [
        1874,
        1906
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2035": {
      "fn": "ERC20.allowance",
      "offset": [
        1874,
        1906
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35C"
    },
    "2038": {
      "fn": "ERC20.allowance",
      "offset": [
        1874,
        1906
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F53"
    },
    "2041": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1874,
        1906
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2042": {
      "offset": [
        1940,
        1962
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2043": {
      "fn": "ERC20.allowance",
      "offset": [
        1940,
        1962
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x380"
    },
    "2046": {
      "fn": "ERC20.allowance",
      "offset": [
        1940,
        1962
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F62"
    },
    "2049": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1940,
        1962
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2050": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2051": {
      "offset": [
        21286,
        21296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "2053": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21286,
        21296
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "offset": [
        21286,
        21296
      ],
      "op": "AND",
      "path": "23"
    },
    "2063": {
      "offset": [
        21272,
        21282
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2064": {
      "offset": [
        21272,
        21296
      ],
      "op": "EQ",
      "path": "23"
    },
    "2065": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x84E"
    },
    "2068": {
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2069": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2071": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2072": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2079": {
      "op": "SHL"
    },
    "2080": {
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2081": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2082": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2084": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2086": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2087": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "2088": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2089": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "2091": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2093": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2094": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "2095": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2096": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "2112": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2113": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "2114": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2115": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2116": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2117": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2118": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2119": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2120": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "SUB",
      "path": "23"
    },
    "2121": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2123": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "2124": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2125": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2126": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2127": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18137,
        18157
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 0,
      "value": "0xE"
    },
    "2129": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18137,
        18157
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2130": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18137,
        18170
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x85B"
    },
    "2133": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18137,
        18170
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2134": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18162,
        18169
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2135": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18137,
        18161
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F72"
    },
    "2138": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        18137,
        18170
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2139": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18137,
        18170
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2140": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18114,
        18134
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE"
    },
    "2142": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18114,
        18170
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2143": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18203,
        18223
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 1,
      "value": "0xF"
    },
    "2145": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18203,
        18223
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2146": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18203,
        18236
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x86B"
    },
    "2149": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18203,
        18236
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2150": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18228,
        18235
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2151": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18203,
        18227
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F72"
    },
    "2154": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        18203,
        18236
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2155": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18203,
        18236
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2156": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18180,
        18200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xF"
    },
    "2158": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18180,
        18236
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2159": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18250,
        18261
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2160": {
      "branch": 208,
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18250,
        18261
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2161": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18246,
        18295
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8A8"
    },
    "2164": {
      "branch": 208,
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18246,
        18295
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2165": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18263,
        18295
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 2,
      "value": "0x8A8"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "op": "SUB"
    },
    "2176": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18263,
        18269
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "2209": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18263,
        18282
      ],
      "op": "AND",
      "path": "23"
    },
    "2210": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18283,
        18285
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2211": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18287,
        18294
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2212": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18263,
        18282
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FCF"
    },
    "2215": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        18263,
        18295
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2216": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18263,
        18295
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2217": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18309,
        18320
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2218": {
      "branch": 209,
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18309,
        18320
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2219": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18305,
        18354
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8E2"
    },
    "2222": {
      "branch": 209,
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18305,
        18354
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2223": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18322,
        18354
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 3,
      "value": "0x8E2"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "op": "SUB"
    },
    "2234": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18322,
        18328
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "2267": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18322,
        18341
      ],
      "op": "AND",
      "path": "23"
    },
    "2268": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18342,
        18344
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2269": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18346,
        18353
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2270": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18322,
        18341
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FCF"
    },
    "2273": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        18322,
        18354
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2274": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        18322,
        18354
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2275": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "POP",
      "path": "23"
    },
    "2276": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "POP",
      "path": "23"
    },
    "2277": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        17979,
        18361
      ],
      "op": "POP",
      "path": "23"
    },
    "2278": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "o",
      "offset": [
        17979,
        18361
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2279": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2280": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x3"
    },
    "2282": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2283": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2284": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2286": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2287": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2288": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2290": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2292": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2296": {
      "op": "NOT"
    },
    "2297": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2300": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2302": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2303": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "AND",
      "path": "2"
    },
    "2304": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2305": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MUL",
      "path": "2"
    },
    "2306": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2307": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2308": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2309": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "AND",
      "path": "2"
    },
    "2310": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2311": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2312": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2313": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DIV",
      "path": "2"
    },
    "2314": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2315": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2316": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2317": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2318": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2319": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DIV",
      "path": "2"
    },
    "2320": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2321": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MUL",
      "path": "2"
    },
    "2322": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2323": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2324": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2325": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2326": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2327": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2328": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2329": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2330": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2331": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2332": {
      "fn": "ERC20.name",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2334": {
      "fn": "ERC20.name",
      "offset": [
        2213,
        2226
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2335": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2336": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2337": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2338": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2339": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2340": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2341": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2342": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2343": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2344": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2345": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x973"
    },
    "2348": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2349": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2350": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2352": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "LT",
      "path": "2"
    },
    "2353": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x948"
    },
    "2356": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2357": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2360": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2361": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2362": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2363": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DIV",
      "path": "2"
    },
    "2364": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MUL",
      "path": "2"
    },
    "2365": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2366": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2367": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2368": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2370": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2371": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2372": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x973"
    },
    "2375": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2376": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2377": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2378": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2379": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2380": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2381": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2383": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2384": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2386": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2388": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2389": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2390": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2391": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2392": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2393": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2394": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2395": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2396": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2398": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2399": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2400": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2402": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2403": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2404": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2405": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "GT",
      "path": "2"
    },
    "2406": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x956"
    },
    "2409": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2410": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2411": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2412": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SUB",
      "path": "2"
    },
    "2413": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2415": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "AND",
      "path": "2"
    },
    "2416": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2417": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2418": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2419": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2420": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2421": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2422": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2423": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2424": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2425": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2426": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2427": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2428": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2429": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2430": {
      "fn": "ERC20.approve",
      "offset": [
        4327,
        4331
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2432": {
      "fn": "ERC20.approve",
      "offset": [
        4343,
        4382
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x991"
    },
    "2435": {
      "fn": "ERC20.approve",
      "offset": [
        4352,
        4364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x98A"
    },
    "2438": {
      "fn": "ERC20.approve",
      "offset": [
        4352,
        4362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2021"
    },
    "2441": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4352,
        4364
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2442": {
      "fn": "ERC20.approve",
      "offset": [
        4352,
        4364
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2443": {
      "fn": "ERC20.approve",
      "offset": [
        4366,
        4373
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2444": {
      "fn": "ERC20.approve",
      "offset": [
        4375,
        4381
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2445": {
      "fn": "ERC20.approve",
      "offset": [
        4343,
        4351
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2025"
    },
    "2448": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4343,
        4382
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2449": {
      "fn": "ERC20.approve",
      "offset": [
        4343,
        4382
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2450": {
      "op": "POP"
    },
    "2451": {
      "fn": "ERC20.approve",
      "offset": [
        4399,
        4403
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "2453": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2454": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2455": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2456": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "POP",
      "path": "2"
    },
    "2457": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "POP",
      "path": "2"
    },
    "2458": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2459": {
      "offset": [
        1634,
        1664
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2460": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "2493": {
      "fn": "ERC20.approve",
      "offset": [
        1634,
        1664
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2494": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        1634,
        1664
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2495": {
      "offset": [
        2025,
        2048
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2496": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "2498": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2499": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2501": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "2502": {
      "fn": "ERC20.approve",
      "offset": [
        2025,
        2048
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2503": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2025,
        2048
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2504": {
      "offset": [
        1602,
        1628
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2505": {
      "fn": "ERC20.approve",
      "offset": [
        1602,
        1628
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "2507": {
      "fn": "ERC20.approve",
      "offset": [
        1602,
        1628
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2514": {
      "op": "SHL"
    },
    "2515": {
      "op": "SUB"
    },
    "2516": {
      "offset": [
        1602,
        1628
      ],
      "op": "AND",
      "path": "23"
    },
    "2517": {
      "fn": "ERC20.approve",
      "offset": [
        1602,
        1628
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2518": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        1602,
        1628
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2519": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2520": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3322,
        3334
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x2"
    },
    "2522": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3322,
        3334
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2523": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2524": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2525": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21076,
        21224
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2526": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21145,
        21162
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 8,
      "value": "0xC"
    },
    "2528": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21145,
        21162
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2535": {
      "op": "SHL"
    },
    "2536": {
      "op": "SUB"
    },
    "2537": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21145,
        21162
      ],
      "op": "AND",
      "path": "23"
    },
    "2538": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21131,
        21141
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2539": {
      "branch": 210,
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21131,
        21162
      ],
      "op": "EQ",
      "path": "23"
    },
    "2540": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA30"
    },
    "2543": {
      "branch": 210,
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2544": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2546": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2547": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2556": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2557": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2559": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2561": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2562": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "ADD",
      "path": "23"
    },
    "2563": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2564": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x11"
    },
    "2566": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2568": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2569": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "ADD",
      "path": "23"
    },
    "2570": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2571": {
      "op": "PUSH17",
      "value": "0x70656E64696E67476F7665726E616E6365"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2591": {
      "op": "SHL"
    },
    "2592": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "2594": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2595": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "ADD",
      "path": "23"
    },
    "2596": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2597": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2598": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2599": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2600": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2601": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2602": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "SUB",
      "path": "23"
    },
    "2603": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2605": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "ADD",
      "path": "23"
    },
    "2606": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2607": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2608": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21123,
        21184
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2609": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21194,
        21204
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 9,
      "value": "0xB"
    },
    "2611": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21194,
        21217
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2612": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21194,
        21217
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "op": "NOT"
    },
    "2622": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21194,
        21217
      ],
      "op": "AND",
      "path": "23"
    },
    "2623": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21207,
        21217
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2624": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21194,
        21217
      ],
      "op": "OR",
      "path": "23"
    },
    "2625": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21194,
        21217
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2626": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        21194,
        21217
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2627": {
      "fn": "AlphaVault.acceptGovernance",
      "jump": "o",
      "offset": [
        21076,
        21224
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4983,
        4987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5035
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0xA51"
    },
    "2634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5009,
        5015
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5017,
        5026
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5028,
        5034
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2637": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2111"
    },
    "2640": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4999,
        5035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5045,
        5166
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0xAC1"
    },
    "2645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5060
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5074
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5D"
    },
    "2649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5072
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2021"
    },
    "2652": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5062,
        5074
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5074
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "2657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5114,
        5120
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "ADD",
      "path": "2"
    },
    "2665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x28"
    },
    "2671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "ADD",
      "path": "2"
    },
    "2676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C9E"
    },
    "2679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x28"
    },
    "2681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "op": "SUB"
    },
    "2691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "DUP11",
      "path": "2"
    },
    "2692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "AND",
      "path": "2"
    },
    "2693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2700": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2703": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2706": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2707": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2708": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5096,
        5108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9B"
    },
    "2711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5096,
        5106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2021"
    },
    "2714": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5096,
        5108
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5096,
        5108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2722": {
      "op": "SHL"
    },
    "2723": {
      "op": "SUB"
    },
    "2724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "AND",
      "path": "2"
    },
    "2725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2726": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2727": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2730": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "ADD",
      "path": "2"
    },
    "2731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2733": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2734": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2735": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "ADD",
      "path": "2"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2740": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2741": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x226C"
    },
    "2747": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5076,
        5165
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2748": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5045,
        5053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2025"
    },
    "2752": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5045,
        5166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5045,
        5166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2754": {
      "op": "POP"
    },
    "2755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5183,
        5187
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x1"
    },
    "2757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "POP",
      "path": "2"
    },
    "2761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "POP",
      "path": "2"
    },
    "2762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "POP",
      "path": "2"
    },
    "2763": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2764": {
      "offset": [
        1779,
        1808
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1779,
        1808
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x9"
    },
    "2767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1779,
        1808
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1779,
        1808
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2769": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        1779,
        1808
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2770": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2771": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x5"
    },
    "2773": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2774": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2776": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "AND",
      "path": "2"
    },
    "2777": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2778": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2779": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18855,
        18956
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2780": {
      "offset": [
        21286,
        21296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "2782": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21286,
        21296
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2789": {
      "op": "SHL"
    },
    "2790": {
      "op": "SUB"
    },
    "2791": {
      "offset": [
        21286,
        21296
      ],
      "op": "AND",
      "path": "23"
    },
    "2792": {
      "offset": [
        21272,
        21282
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2793": {
      "offset": [
        21272,
        21296
      ],
      "op": "EQ",
      "path": "23"
    },
    "2794": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB27"
    },
    "2797": {
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2798": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2800": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2801": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2810": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2811": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2813": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2815": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2816": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "2817": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2818": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "2820": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2822": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2823": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "2824": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2825": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2838": {
      "op": "SHL"
    },
    "2839": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "2841": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2842": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "2843": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2844": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2845": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2846": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2847": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2848": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2849": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "SUB",
      "path": "23"
    },
    "2850": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2852": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "2853": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2854": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2855": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2856": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18937
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 14,
      "value": "0xA"
    },
    "2858": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2859": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2866": {
      "op": "SHL"
    },
    "2867": {
      "op": "SUB"
    },
    "2868": {
      "op": "NOT"
    },
    "2869": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "AND",
      "path": "23"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2876": {
      "op": "SHL"
    },
    "2877": {
      "op": "SUB"
    },
    "2878": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2879": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2880": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2881": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "AND",
      "path": "23"
    },
    "2882": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2883": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2884": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2885": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "OR",
      "path": "23"
    },
    "2886": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2887": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        18929,
        18949
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2888": {
      "fn": "AlphaVault.setStrategy",
      "jump": "o",
      "offset": [
        18855,
        18956
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2889": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2890": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3956,
        3970
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2892": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3984,
        3999
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2893": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4013,
        4028
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2895": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2897": {
      "offset": [
        2277,
        2284
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2899": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2277,
        2284
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2900": {
      "offset": [
        2277,
        2296
      ],
      "op": "EQ",
      "path": "7"
    },
    "2901": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2277,
        2296
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2902": {
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBA6"
    },
    "2905": {
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2906": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2908": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2909": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2910": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2918": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2919": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2921": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2923": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2924": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "2925": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2926": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2928": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "2930": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2931": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "2932": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2933": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "2966": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "2968": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2969": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "2970": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2971": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2972": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2973": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2974": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2975": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2976": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SUB",
      "path": "7"
    },
    "2977": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "2979": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "2980": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2981": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2982": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2983": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2985": {
      "offset": [
        2407,
        2414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2987": {
      "offset": [
        2407,
        2425
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2988": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4061,
        4079
      ],
      "op": "DUP8",
      "path": "23",
      "statement": 15
    },
    "2989": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4061,
        4079
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2990": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4061,
        4079
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2991": {
      "branch": 211,
      "fn": "AlphaVault.deposit",
      "offset": [
        4061,
        4079
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2992": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4061,
        4101
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBB9"
    },
    "2995": {
      "branch": 211,
      "fn": "AlphaVault.deposit",
      "offset": [
        4061,
        4101
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2996": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4061,
        4101
      ],
      "op": "POP",
      "path": "23"
    },
    "2997": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4100,
        4101
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2999": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4083,
        4097
      ],
      "op": "DUP8",
      "path": "23"
    },
    "3000": {
      "branch": 212,
      "fn": "AlphaVault.deposit",
      "offset": [
        4083,
        4101
      ],
      "op": "GT",
      "path": "23"
    },
    "3001": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4061,
        4101
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3002": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC0A"
    },
    "3005": {
      "branch": 212,
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3006": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3008": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3009": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3016": {
      "op": "SHL"
    },
    "3017": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3018": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3019": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3021": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3023": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3024": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "ADD",
      "path": "23"
    },
    "3025": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3026": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3027": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3028": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3030": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3031": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "ADD",
      "path": "23"
    },
    "3032": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3033": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x616D6F756E743044657369726564206F7220616D6F756E743144657369726564"
    },
    "3066": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3068": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3069": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "ADD",
      "path": "23"
    },
    "3070": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3071": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3072": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3073": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3074": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3075": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3076": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "SUB",
      "path": "23"
    },
    "3077": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3079": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "ADD",
      "path": "23"
    },
    "3080": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3081": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3082": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4053,
        4138
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "op": "SUB"
    },
    "3091": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4156,
        4172
      ],
      "op": "DUP5",
      "path": "23",
      "statement": 16
    },
    "3092": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4156,
        4172
      ],
      "op": "AND",
      "path": "23"
    },
    "3093": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4156,
        4172
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3094": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4156,
        4172
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3095": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4156,
        4172
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3096": {
      "branch": 213,
      "fn": "AlphaVault.deposit",
      "offset": [
        4156,
        4172
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3097": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4156,
        4195
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC2B"
    },
    "3100": {
      "branch": 213,
      "fn": "AlphaVault.deposit",
      "offset": [
        4156,
        4195
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3101": {
      "op": "POP"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3108": {
      "op": "SHL"
    },
    "3109": {
      "op": "SUB"
    },
    "3110": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4176,
        4195
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3111": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4176,
        4195
      ],
      "op": "AND",
      "path": "23"
    },
    "3112": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4190,
        4194
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3113": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4176,
        4195
      ],
      "op": "EQ",
      "path": "23"
    },
    "3114": {
      "branch": 214,
      "fn": "AlphaVault.deposit",
      "offset": [
        4176,
        4195
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3115": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4156,
        4195
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3116": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC61"
    },
    "3119": {
      "branch": 214,
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3120": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3122": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3123": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3124": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3130": {
      "op": "SHL"
    },
    "3131": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3132": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3133": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3135": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3137": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3138": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "ADD",
      "path": "23"
    },
    "3139": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3140": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3142": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3144": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3145": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "ADD",
      "path": "23"
    },
    "3146": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3147": {
      "op": "PUSH2",
      "value": "0x746F"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3155": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3156": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "ADD",
      "path": "23"
    },
    "3157": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3158": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3159": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3160": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3161": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3162": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3163": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "SUB",
      "path": "23"
    },
    "3164": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3166": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "ADD",
      "path": "23"
    },
    "3167": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3168": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3169": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4148,
        4202
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3170": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4314,
        4323
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "3172": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4314,
        4323
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3173": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4338,
        4339
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3175": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4338,
        4339
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3176": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4295,
        4335
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC86"
    },
    "3179": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4295,
        4335
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4314,
        4323
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3186": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4314,
        4323
      ],
      "op": "DIV",
      "path": "23"
    },
    "3187": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4314,
        4323
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3189": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4314,
        4323
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3190": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4314,
        4323
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3191": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4314,
        4323
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3192": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4314,
        4323
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3197": {
      "op": "SHL"
    },
    "3198": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4325,
        4334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3199": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4325,
        4334
      ],
      "op": "DIV",
      "path": "23"
    },
    "3200": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4325,
        4334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3201": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4325,
        4334
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3202": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4295,
        4313
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2303"
    },
    "3205": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4295,
        4335
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3206": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4295,
        4335
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3213": {
      "op": "SHL"
    },
    "3214": {
      "op": "SUB"
    },
    "3215": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4295,
        4339
      ],
      "op": "AND",
      "path": "23"
    },
    "3216": {
      "branch": 215,
      "fn": "AlphaVault.deposit",
      "offset": [
        4295,
        4339
      ],
      "op": "GT",
      "path": "23"
    },
    "3217": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4291,
        4400
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3218": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4291,
        4400
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD36"
    },
    "3221": {
      "branch": 215,
      "fn": "AlphaVault.deposit",
      "offset": [
        4291,
        4400
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3222": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4359
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 17,
      "value": "0x7"
    },
    "3224": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4359
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3225": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4365,
        4374
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "3227": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4365,
        4374
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3228": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3230": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3231": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3232": {
      "op": "PUSH4",
      "value": "0xA34123A7"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3239": {
      "op": "SHL"
    },
    "3240": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3241": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4365,
        4374
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3248": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4365,
        4374
      ],
      "op": "DIV",
      "path": "23"
    },
    "3249": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4365,
        4374
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3251": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4365,
        4374
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3252": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4365,
        4374
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3253": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4365,
        4374
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3254": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3255": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3256": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3258": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3259": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ADD",
      "path": "23"
    },
    "3260": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3265": {
      "op": "SHL"
    },
    "3266": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4376,
        4385
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3267": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4376,
        4385
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3268": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4376,
        4385
      ],
      "op": "DIV",
      "path": "23"
    },
    "3269": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4376,
        4385
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3270": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4376,
        4385
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3271": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3272": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3273": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3274": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3276": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3277": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ADD",
      "path": "23"
    },
    "3278": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3279": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4359
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3281": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3283": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3284": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ADD",
      "path": "23"
    },
    "3285": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3286": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3287": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3288": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3289": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3296": {
      "op": "SHL"
    },
    "3297": {
      "op": "SUB"
    },
    "3298": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4359
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3299": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4359
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "3300": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4359
      ],
      "op": "AND",
      "path": "23"
    },
    "3301": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4359
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3302": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4364
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA34123A7"
    },
    "3307": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4364
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3308": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3310": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3311": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3312": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ADD",
      "path": "23"
    },
    "3313": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "3314": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3315": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3316": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3317": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3318": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SUB",
      "path": "23"
    },
    "3319": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ADD",
      "path": "23"
    },
    "3320": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3321": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3322": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3323": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4359
      ],
      "op": "DUP8",
      "path": "23"
    },
    "3324": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3325": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "3326": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3327": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3328": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3329": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD09"
    },
    "3332": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3333": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3335": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3336": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3337": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3338": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "POP",
      "path": "23"
    },
    "3339": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "GAS",
      "path": "23"
    },
    "3340": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "CALL",
      "path": "23"
    },
    "3341": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3342": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3343": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3344": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD1D"
    },
    "3347": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3348": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3349": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3351": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3352": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "3353": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3354": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3356": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3357": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3358": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "POP",
      "path": "23"
    },
    "3359": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "POP",
      "path": "23"
    },
    "3360": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "POP",
      "path": "23"
    },
    "3361": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "POP",
      "path": "23"
    },
    "3362": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3364": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3365": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3366": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3368": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3369": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "LT",
      "path": "23"
    },
    "3370": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3371": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD33"
    },
    "3374": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3375": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3377": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3378": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3379": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4355,
        4389
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "op": "POP"
    },
    "3382": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4291,
        4400
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3383": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "3385": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3386": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4444,
        4454
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "3388": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4444,
        4454
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3389": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4458,
        4459
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3391": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4458,
        4459
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3392": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4413,
        4455
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD58"
    },
    "3395": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4413,
        4455
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3400": {
      "op": "SHL"
    },
    "3401": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3402": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3403": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "DIV",
      "path": "23"
    },
    "3404": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3406": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3407": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3408": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3409": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4432,
        4442
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3410": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4444,
        4454
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3411": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4444,
        4454
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3412": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4413,
        4431
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2303"
    },
    "3415": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4413,
        4455
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3416": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4413,
        4455
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3423": {
      "op": "SHL"
    },
    "3424": {
      "op": "SUB"
    },
    "3425": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4413,
        4459
      ],
      "op": "AND",
      "path": "23"
    },
    "3426": {
      "branch": 216,
      "fn": "AlphaVault.deposit",
      "offset": [
        4413,
        4459
      ],
      "op": "GT",
      "path": "23"
    },
    "3427": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4409,
        4522
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3428": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4409,
        4522
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE05"
    },
    "3431": {
      "branch": 216,
      "fn": "AlphaVault.deposit",
      "offset": [
        4409,
        4522
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3432": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4479
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 18,
      "value": "0x7"
    },
    "3434": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4479
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3435": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4485,
        4495
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "3437": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4485,
        4495
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3438": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4497,
        4507
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "3440": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4497,
        4507
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3441": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3443": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3444": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3445": {
      "op": "PUSH4",
      "value": "0xA34123A7"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3454": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3459": {
      "op": "SHL"
    },
    "3460": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4485,
        4495
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3461": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4485,
        4495
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3462": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4485,
        4495
      ],
      "op": "DIV",
      "path": "23"
    },
    "3463": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4485,
        4495
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3465": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4485,
        4495
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3466": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4485,
        4495
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3467": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4485,
        4495
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3468": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3469": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3470": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3472": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP6",
      "path": "23"
    },
    "3473": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ADD",
      "path": "23"
    },
    "3474": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3475": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4497,
        4507
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3476": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4497,
        4507
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3477": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4497,
        4507
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3478": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3479": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3480": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3481": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3483": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3484": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ADD",
      "path": "23"
    },
    "3485": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3486": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3488": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3490": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3491": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ADD",
      "path": "23"
    },
    "3492": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3493": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3494": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3495": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3496": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3503": {
      "op": "SHL"
    },
    "3504": {
      "op": "SUB"
    },
    "3505": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3506": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4479
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "3507": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4479
      ],
      "op": "AND",
      "path": "23"
    },
    "3508": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4479
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3509": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4484
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA34123A7"
    },
    "3514": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4484
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3515": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3517": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3518": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3519": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ADD",
      "path": "23"
    },
    "3520": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "3521": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3522": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3523": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3524": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3525": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SUB",
      "path": "23"
    },
    "3526": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ADD",
      "path": "23"
    },
    "3527": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3528": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3529": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3530": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4479
      ],
      "op": "DUP8",
      "path": "23"
    },
    "3531": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3532": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "3533": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3534": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3535": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3536": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDD8"
    },
    "3539": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3540": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3542": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3543": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3544": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3545": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "POP",
      "path": "23"
    },
    "3546": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "GAS",
      "path": "23"
    },
    "3547": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "CALL",
      "path": "23"
    },
    "3548": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3549": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3550": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3551": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDEC"
    },
    "3554": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3555": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3556": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3558": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3559": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "3560": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3561": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3563": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3564": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3565": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "POP",
      "path": "23"
    },
    "3566": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "POP",
      "path": "23"
    },
    "3567": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "POP",
      "path": "23"
    },
    "3568": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "POP",
      "path": "23"
    },
    "3569": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3571": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3572": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "3573": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3575": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3576": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "LT",
      "path": "23"
    },
    "3577": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3578": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE02"
    },
    "3581": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3582": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3584": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3585": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3586": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4475,
        4511
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3587": {
      "op": "POP"
    },
    "3588": {
      "op": "POP"
    },
    "3589": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4409,
        4522
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3590": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4561,
        4614
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 19,
      "value": "0xE0F"
    },
    "3593": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4583,
        4597
      ],
      "op": "DUP9",
      "path": "23"
    },
    "3594": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4599,
        4613
      ],
      "op": "DUP9",
      "path": "23"
    },
    "3595": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4561,
        4582
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2394"
    },
    "3598": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4561,
        4614
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3599": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4561,
        4614
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3600": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4532,
        4614
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3601": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4532,
        4614
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "3602": {
      "op": "POP"
    },
    "3603": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4532,
        4614
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3604": {
      "op": "POP"
    },
    "3605": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4532,
        4614
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3606": {
      "op": "POP"
    },
    "3607": {
      "branch": 217,
      "fn": "AlphaVault.deposit",
      "offset": [
        4632,
        4642
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 20
    },
    "3608": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE51"
    },
    "3611": {
      "branch": 217,
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3612": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3614": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3615": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3616": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3622": {
      "op": "SHL"
    },
    "3623": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3624": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3625": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3627": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3629": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3630": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "ADD",
      "path": "23"
    },
    "3631": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3632": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "3634": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3636": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3637": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "ADD",
      "path": "23"
    },
    "3638": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3639": {
      "op": "PUSH6",
      "value": "0x736861726573"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3648": {
      "op": "SHL"
    },
    "3649": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3651": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3652": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "ADD",
      "path": "23"
    },
    "3653": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3654": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3655": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3656": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3657": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3658": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3659": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "SUB",
      "path": "23"
    },
    "3660": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3662": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "ADD",
      "path": "23"
    },
    "3663": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3664": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3665": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4653
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3666": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4682,
        4692
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 21
    },
    "3667": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4671,
        4678
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3668": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4671,
        4692
      ],
      "op": "LT",
      "path": "23"
    },
    "3669": {
      "branch": 218,
      "fn": "AlphaVault.deposit",
      "offset": [
        4671,
        4692
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3670": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE93"
    },
    "3673": {
      "branch": 218,
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3674": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3676": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3677": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3686": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3687": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3689": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3691": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3692": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "ADD",
      "path": "23"
    },
    "3693": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3694": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "3696": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3698": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3699": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "ADD",
      "path": "23"
    },
    "3700": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3701": {
      "op": "PUSH10",
      "value": "0x30B6B7BAB73A1826B4B7"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3714": {
      "op": "SHL"
    },
    "3715": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3717": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3718": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "ADD",
      "path": "23"
    },
    "3719": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3720": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3721": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3722": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3723": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3724": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3725": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "SUB",
      "path": "23"
    },
    "3726": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3728": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "ADD",
      "path": "23"
    },
    "3729": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3730": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3731": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4663,
        4707
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3732": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4736,
        4746
      ],
      "op": "DUP5",
      "path": "23",
      "statement": 22
    },
    "3733": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4725,
        4732
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3734": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4725,
        4746
      ],
      "op": "LT",
      "path": "23"
    },
    "3735": {
      "branch": 219,
      "fn": "AlphaVault.deposit",
      "offset": [
        4725,
        4746
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3736": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xED5"
    },
    "3739": {
      "branch": 219,
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3740": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3742": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3743": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3750": {
      "op": "SHL"
    },
    "3751": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3752": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3753": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3755": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3757": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3758": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "ADD",
      "path": "23"
    },
    "3759": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3760": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "3762": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3764": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3765": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "ADD",
      "path": "23"
    },
    "3766": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3767": {
      "op": "PUSH10",
      "value": "0x30B6B7BAB73A18A6B4B7"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3780": {
      "op": "SHL"
    },
    "3781": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3783": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3784": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "ADD",
      "path": "23"
    },
    "3785": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3786": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3787": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3788": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3789": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3790": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3791": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "SUB",
      "path": "23"
    },
    "3792": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3794": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "ADD",
      "path": "23"
    },
    "3795": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3796": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3797": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4717,
        4761
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3798": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4814,
        4825
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3799": {
      "branch": 220,
      "fn": "AlphaVault.deposit",
      "offset": [
        4814,
        4825
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3800": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4810,
        4886
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF10"
    },
    "3803": {
      "branch": 220,
      "fn": "AlphaVault.deposit",
      "offset": [
        4810,
        4886
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3804": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4827,
        4886
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 23,
      "value": "0xF10"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3813": {
      "op": "SHL"
    },
    "3814": {
      "op": "SUB"
    },
    "3815": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4827,
        4833
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "3848": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4827,
        4850
      ],
      "op": "AND",
      "path": "23"
    },
    "3849": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4851,
        4861
      ],
      "op": "CALLER",
      "path": "23"
    },
    "3850": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4871,
        4875
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3851": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4878,
        4885
      ],
      "op": "DUP6",
      "path": "23"
    },
    "3852": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4827,
        4850
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24C0"
    },
    "3855": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4827,
        4886
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3856": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4827,
        4886
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3857": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4900,
        4911
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3858": {
      "branch": 221,
      "fn": "AlphaVault.deposit",
      "offset": [
        4900,
        4911
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3859": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4896,
        4972
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF4B"
    },
    "3862": {
      "branch": 221,
      "fn": "AlphaVault.deposit",
      "offset": [
        4896,
        4972
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3863": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4913,
        4972
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 24,
      "value": "0xF4B"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3872": {
      "op": "SHL"
    },
    "3873": {
      "op": "SUB"
    },
    "3874": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4913,
        4919
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "3907": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4913,
        4936
      ],
      "op": "AND",
      "path": "23"
    },
    "3908": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4937,
        4947
      ],
      "op": "CALLER",
      "path": "23"
    },
    "3909": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4957,
        4961
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3910": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4964,
        4971
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3911": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4913,
        4936
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24C0"
    },
    "3914": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4913,
        4972
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3915": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4913,
        4972
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3916": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5019,
        5036
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 25,
      "value": "0xF55"
    },
    "3919": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5025,
        5027
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3920": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5029,
        5035
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3921": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5019,
        5024
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x251A"
    },
    "3924": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        5019,
        5036
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3925": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5019,
        5036
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3926": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 26,
      "value": "0x40"
    },
    "3928": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3929": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3930": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3931": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3932": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3933": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3935": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3936": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "ADD",
      "path": "23"
    },
    "3937": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3938": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3939": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3940": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3941": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3942": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "ADD",
      "path": "23"
    },
    "3943": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3944": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3945": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3946": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3947": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3954": {
      "op": "SHL"
    },
    "3955": {
      "op": "SUB"
    },
    "3956": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3957": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "AND",
      "path": "23"
    },
    "3958": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3959": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5059,
        5069
      ],
      "op": "CALLER",
      "path": "23"
    },
    "3960": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5059,
        5069
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3961": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6"
    },
    "3994": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3995": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3996": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3997": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "SUB",
      "path": "23"
    },
    "3998": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "4000": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "ADD",
      "path": "23"
    },
    "4001": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4002": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5051,
        5100
      ],
      "op": "LOG3",
      "path": "23"
    },
    "4003": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5149
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 27,
      "value": "0x9"
    },
    "4005": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5149
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4006": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5118,
        5131
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFAD"
    },
    "4009": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5118,
        5129
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9D7"
    },
    "4012": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        5118,
        5131
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4013": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5118,
        5131
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4014": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5118,
        5149
      ],
      "op": "GT",
      "path": "23"
    },
    "4015": {
      "branch": 222,
      "fn": "AlphaVault.deposit",
      "offset": [
        5118,
        5149
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4016": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFF1"
    },
    "4019": {
      "branch": 222,
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4020": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4022": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4023": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4024": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4030": {
      "op": "SHL"
    },
    "4031": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4032": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4033": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4035": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4037": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4038": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "ADD",
      "path": "23"
    },
    "4039": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4040": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE"
    },
    "4042": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4044": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4045": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "ADD",
      "path": "23"
    },
    "4046": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4047": {
      "op": "PUSH14",
      "value": "0x6D6178546F74616C537570706C79"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4064": {
      "op": "SHL"
    },
    "4065": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4067": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4068": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "ADD",
      "path": "23"
    },
    "4069": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4070": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4071": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4072": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4073": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4074": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4075": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "SUB",
      "path": "23"
    },
    "4076": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4078": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "ADD",
      "path": "23"
    },
    "4079": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4080": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4081": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5110,
        5168
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4082": {
      "offset": [
        1645,
        1646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "4084": {
      "offset": [
        2580,
        2587
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4086": {
      "offset": [
        2580,
        2602
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4087": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2580,
        2602
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4088": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2580,
        2602
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4089": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2580,
        2602
      ],
      "op": "POP",
      "path": "7"
    },
    "4090": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "4091": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "POP",
      "path": "23"
    },
    "4092": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "4093": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "POP",
      "path": "23"
    },
    "4094": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "4095": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4096": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "POP",
      "path": "23"
    },
    "4097": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "POP",
      "path": "23"
    },
    "4098": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3708,
        5175
      ],
      "op": "POP",
      "path": "23"
    },
    "4099": {
      "fn": "AlphaVault.deposit",
      "jump": "o",
      "offset": [
        3708,
        5175
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4100": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4101": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4103": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5693,
        5776
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0x991"
    },
    "4106": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5702,
        5714
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1011"
    },
    "4109": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5702,
        5712
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2021"
    },
    "4112": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5702,
        5714
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4113": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5702,
        5714
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4114": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5716,
        5723
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4115": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "4118": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5764,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4119": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4121": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4123": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5737,
        5749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1022"
    },
    "4126": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5737,
        5747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2021"
    },
    "4129": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5737,
        5749
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4130": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5737,
        5749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "op": "SUB"
    },
    "4139": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4140": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4141": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "AND",
      "path": "2"
    },
    "4142": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4143": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4144": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4146": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4147": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4148": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "ADD",
      "path": "2"
    },
    "4149": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4150": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4151": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4152": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4153": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4155": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4156": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4157": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "ADD",
      "path": "2"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4160": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4161": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4162": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4163": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4164": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "DUP13",
      "path": "2"
    },
    "4165": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "AND",
      "path": "2"
    },
    "4166": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4167": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4168": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4169": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4170": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4171": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4172": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4173": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4174": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260A"
    },
    "4177": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5725,
        5775
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4178": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19552,
        19677
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4179": {
      "offset": [
        21286,
        21296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "4181": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21286,
        21296
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4188": {
      "op": "SHL"
    },
    "4189": {
      "op": "SUB"
    },
    "4190": {
      "offset": [
        21286,
        21296
      ],
      "op": "AND",
      "path": "23"
    },
    "4191": {
      "offset": [
        21272,
        21282
      ],
      "op": "CALLER",
      "path": "23"
    },
    "4192": {
      "offset": [
        21272,
        21296
      ],
      "op": "EQ",
      "path": "23"
    },
    "4193": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x109E"
    },
    "4196": {
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4197": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4199": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4200": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4201": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4207": {
      "op": "SHL"
    },
    "4208": {
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4209": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4210": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4212": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4214": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4215": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4216": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4217": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "4219": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4221": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4222": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4223": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4224": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4237": {
      "op": "SHL"
    },
    "4238": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4240": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4241": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4242": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4243": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4244": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4245": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4246": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4247": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4248": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "SUB",
      "path": "23"
    },
    "4249": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4251": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4252": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4253": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4254": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4255": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19638,
        19652
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 29,
      "value": "0x9"
    },
    "4257": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        19638,
        19670
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "4258": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "jump": "o",
      "offset": [
        19552,
        19677
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4259": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19767,
        19844
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4260": {
      "offset": [
        21286,
        21296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "4262": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21286,
        21296
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4269": {
      "op": "SHL"
    },
    "4270": {
      "op": "SUB"
    },
    "4271": {
      "offset": [
        21286,
        21296
      ],
      "op": "AND",
      "path": "23"
    },
    "4272": {
      "offset": [
        21272,
        21282
      ],
      "op": "CALLER",
      "path": "23"
    },
    "4273": {
      "offset": [
        21272,
        21296
      ],
      "op": "EQ",
      "path": "23"
    },
    "4274": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10EF"
    },
    "4277": {
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4278": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4280": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4281": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4288": {
      "op": "SHL"
    },
    "4289": {
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4290": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4291": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4293": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4295": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4296": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4297": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4298": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "4300": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4302": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4303": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4304": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4305": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4318": {
      "op": "SHL"
    },
    "4319": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4321": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4322": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4323": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4324": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4325": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4326": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4327": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4328": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4329": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "SUB",
      "path": "23"
    },
    "4330": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4332": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4333": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4334": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4335": {
      "fn": "AlphaVault.finalize",
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4336": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19821,
        19830
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 30,
      "value": "0xC"
    },
    "4338": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19821,
        19837
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4339": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19821,
        19837
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4344": {
      "op": "SHL"
    },
    "4345": {
      "op": "NOT"
    },
    "4346": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19821,
        19837
      ],
      "op": "AND",
      "path": "23"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4351": {
      "op": "SHL"
    },
    "4352": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19821,
        19837
      ],
      "op": "OR",
      "path": "23"
    },
    "4353": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19821,
        19837
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4354": {
      "fn": "AlphaVault.finalize",
      "offset": [
        19821,
        19837
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "4355": {
      "fn": "AlphaVault.finalize",
      "jump": "o",
      "offset": [
        19767,
        19844
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4356": {
      "offset": [
        1996,
        2019
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4357": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1996,
        2019
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "4359": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1996,
        2019
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4364": {
      "op": "SHL"
    },
    "4365": {
      "offset": [
        1996,
        2019
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4366": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1996,
        2019
      ],
      "op": "DIV",
      "path": "23"
    },
    "4367": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1996,
        2019
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "4369": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1996,
        2019
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "4370": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1996,
        2019
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4371": {
      "fn": "AlphaVault.finalize",
      "jump": "o",
      "offset": [
        1996,
        2019
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4372": {
      "offset": [
        1843,
        1868
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4373": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1843,
        1868
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "4375": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1843,
        1868
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4382": {
      "op": "SHL"
    },
    "4383": {
      "op": "SUB"
    },
    "4384": {
      "offset": [
        1843,
        1868
      ],
      "op": "AND",
      "path": "23"
    },
    "4385": {
      "fn": "AlphaVault.finalize",
      "offset": [
        1843,
        1868
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4386": {
      "fn": "AlphaVault.finalize",
      "jump": "o",
      "offset": [
        1843,
        1868
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4387": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4394": {
      "op": "SHL"
    },
    "4395": {
      "op": "SUB"
    },
    "4396": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 31
    },
    "4397": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "AND",
      "path": "2"
    },
    "4398": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3473,
        3480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4400": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4401": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4402": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4403": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4405": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4406": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4407": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4408": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4410": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4411": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4412": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4413": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4414": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4415": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4416": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "POP",
      "path": "2"
    },
    "4417": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4418": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19105,
        19270
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4419": {
      "offset": [
        21286,
        21296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "4421": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21286,
        21296
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4428": {
      "op": "SHL"
    },
    "4429": {
      "op": "SUB"
    },
    "4430": {
      "offset": [
        21286,
        21296
      ],
      "op": "AND",
      "path": "23"
    },
    "4431": {
      "offset": [
        21272,
        21282
      ],
      "op": "CALLER",
      "path": "23"
    },
    "4432": {
      "offset": [
        21272,
        21296
      ],
      "op": "EQ",
      "path": "23"
    },
    "4433": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118E"
    },
    "4436": {
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4437": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4439": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4440": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4447": {
      "op": "SHL"
    },
    "4448": {
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4449": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4450": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4452": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4454": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4455": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4456": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4457": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "4459": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4461": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4462": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4463": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4464": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4477": {
      "op": "SHL"
    },
    "4478": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4480": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4481": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4482": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4483": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4484": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4485": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4486": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4487": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4488": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "SUB",
      "path": "23"
    },
    "4489": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4491": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "4492": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4493": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4494": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4495": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19208,
        19211
      ],
      "op": "PUSH3",
      "path": "23",
      "statement": 32,
      "value": "0xF4240"
    },
    "4499": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19193,
        19205
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4500": {
      "branch": 223,
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19193,
        19211
      ],
      "op": "LT",
      "path": "23"
    },
    "4501": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11D3"
    },
    "4504": {
      "branch": 223,
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4505": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4507": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4508": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4515": {
      "op": "SHL"
    },
    "4516": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4517": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4518": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4520": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4522": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4523": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "ADD",
      "path": "23"
    },
    "4524": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4525": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "4527": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4529": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4530": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "ADD",
      "path": "23"
    },
    "4531": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4532": {
      "op": "PUSH11",
      "value": "0x70726F746F636F6C466565"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4546": {
      "op": "SHL"
    },
    "4547": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4549": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4550": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "ADD",
      "path": "23"
    },
    "4551": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4552": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4553": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4554": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4555": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4556": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4557": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "SUB",
      "path": "23"
    },
    "4558": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4560": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "ADD",
      "path": "23"
    },
    "4561": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4562": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4563": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19185,
        19227
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4564": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19237,
        19248
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 33,
      "value": "0x8"
    },
    "4566": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        19237,
        19263
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "4567": {
      "fn": "AlphaVault.setProtocolFee",
      "jump": "o",
      "offset": [
        19105,
        19270
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4568": {
      "offset": [
        1968,
        1990
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4569": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        1968,
        1990
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "4571": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        1968,
        1990
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4576": {
      "op": "SHL"
    },
    "4577": {
      "offset": [
        1968,
        1990
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4578": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        1968,
        1990
      ],
      "op": "DIV",
      "path": "23"
    },
    "4579": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        1968,
        1990
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "4581": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        1968,
        1990
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "4582": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        1968,
        1990
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4583": {
      "fn": "AlphaVault.setProtocolFee",
      "jump": "o",
      "offset": [
        1968,
        1990
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4584": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10085,
        11939
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4585": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4587": {
      "offset": [
        2277,
        2284
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4589": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2277,
        2284
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4590": {
      "offset": [
        2277,
        2296
      ],
      "op": "EQ",
      "path": "7"
    },
    "4591": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2277,
        2296
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4592": {
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1240"
    },
    "4595": {
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4596": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4598": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4599": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4600": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4606": {
      "op": "SHL"
    },
    "4607": {
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4608": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4609": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4611": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4613": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4614": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "4615": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4616": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4618": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "4620": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4621": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "4622": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4623": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4656": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "4658": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4659": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "4660": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4661": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4662": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4663": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4664": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4665": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4666": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SUB",
      "path": "7"
    },
    "4667": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "4669": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "4670": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4671": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "REVERT",
      "path": "7"
    },
    "4672": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4673": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4675": {
      "offset": [
        2407,
        2414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4677": {
      "offset": [
        2407,
        2425
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4678": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10316,
        10324
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 34,
      "value": "0xA"
    },
    "4680": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10316,
        10324
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4687": {
      "op": "SHL"
    },
    "4688": {
      "op": "SUB"
    },
    "4689": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10316,
        10324
      ],
      "op": "AND",
      "path": "23"
    },
    "4690": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10302,
        10312
      ],
      "op": "CALLER",
      "path": "23"
    },
    "4691": {
      "branch": 224,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10302,
        10324
      ],
      "op": "EQ",
      "path": "23"
    },
    "4692": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x128F"
    },
    "4695": {
      "branch": 224,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4696": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4698": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4699": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4700": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4706": {
      "op": "SHL"
    },
    "4707": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4708": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4709": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4711": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4713": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4714": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "ADD",
      "path": "23"
    },
    "4715": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4716": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "4718": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4720": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4721": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "ADD",
      "path": "23"
    },
    "4722": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4723": {
      "op": "PUSH8",
      "value": "0x7374726174656779"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4734": {
      "op": "SHL"
    },
    "4735": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4737": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4738": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "ADD",
      "path": "23"
    },
    "4739": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4740": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4741": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4742": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4743": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4744": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4745": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "SUB",
      "path": "23"
    },
    "4746": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4748": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "ADD",
      "path": "23"
    },
    "4749": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4750": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4751": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10294,
        10337
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4752": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10347,
        10382
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 35,
      "value": "0x1299"
    },
    "4755": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10359,
        10369
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4756": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10371,
        10381
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4757": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10347,
        10358
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2664"
    },
    "4760": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10347,
        10382
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4761": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10347,
        10382
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4762": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10392,
        10425
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 36,
      "value": "0x12A3"
    },
    "4765": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10404,
        10413
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4766": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10415,
        10424
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4767": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10392,
        10403
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2664"
    },
    "4770": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10392,
        10425
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4771": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10392,
        10425
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4772": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10435,
        10468
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 37,
      "value": "0x12AD"
    },
    "4775": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10447,
        10456
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4776": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10458,
        10467
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4777": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10435,
        10446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2664"
    },
    "4780": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10435,
        10468
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4781": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10435,
        10468
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4782": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10510
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "4784": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10510
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4785": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4787": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4788": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4789": {
      "op": "PUSH4",
      "value": "0x3850C7BD"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4796": {
      "op": "SHL"
    },
    "4797": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4798": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4799": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4800": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4801": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10482,
        10492
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4803": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10482,
        10492
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4810": {
      "op": "SHL"
    },
    "4811": {
      "op": "SUB"
    },
    "4812": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10510
      ],
      "op": "AND",
      "path": "23"
    },
    "4813": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10510
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4814": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10516
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3850C7BD"
    },
    "4819": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10516
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4820": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4822": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4823": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4824": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "ADD",
      "path": "23"
    },
    "4825": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4826": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4828": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4829": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4830": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4831": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4832": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4833": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "SUB",
      "path": "23"
    },
    "4834": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "ADD",
      "path": "23"
    },
    "4835": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4836": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10510
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4837": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4838": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "4839": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4840": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4841": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4842": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12F2"
    },
    "4845": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4846": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4848": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4849": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4850": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4851": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "POP",
      "path": "23"
    },
    "4852": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "GAS",
      "path": "23"
    },
    "4853": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "4854": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4855": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4856": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4857": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1306"
    },
    "4860": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4861": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4862": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4864": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4865": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "4866": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4867": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4869": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4870": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4871": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "POP",
      "path": "23"
    },
    "4872": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "POP",
      "path": "23"
    },
    "4873": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "POP",
      "path": "23"
    },
    "4874": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "POP",
      "path": "23"
    },
    "4875": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4877": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4878": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4879": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4881": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4882": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "LT",
      "path": "23"
    },
    "4883": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4884": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x131C"
    },
    "4887": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4888": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4890": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4891": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4892": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4893": {
      "op": "POP"
    },
    "4894": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4896": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "ADD",
      "path": "23"
    },
    "4897": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4898": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10506,
        10518
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4899": {
      "op": "POP"
    },
    "4900": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 38,
      "value": "0x2"
    },
    "4902": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4903": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4904": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "4905": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4906": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4907": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4908": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "4909": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "SGT",
      "path": "23"
    },
    "4910": {
      "branch": 225,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10536,
        10553
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4911": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x136A"
    },
    "4914": {
      "branch": 225,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4915": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4917": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4918": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4925": {
      "op": "SHL"
    },
    "4926": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4927": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4928": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4930": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4932": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4933": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "ADD",
      "path": "23"
    },
    "4934": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4935": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "4937": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4939": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4940": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "ADD",
      "path": "23"
    },
    "4941": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4942": {
      "op": "PUSH8",
      "value": "0x3134B22AB83832B9"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "4953": {
      "op": "SHL"
    },
    "4954": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4956": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4957": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "ADD",
      "path": "23"
    },
    "4958": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4959": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4960": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4961": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4962": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4963": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4964": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "SUB",
      "path": "23"
    },
    "4965": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4967": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "ADD",
      "path": "23"
    },
    "4968": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4969": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4970": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10528,
        10566
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4971": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10596,
        10600
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 39
    },
    "4972": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10584,
        10600
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "4974": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10584,
        10600
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "4975": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10584,
        10593
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4976": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10584,
        10600
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "4978": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10584,
        10600
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "4979": {
      "branch": 226,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10584,
        10600
      ],
      "op": "SGT",
      "path": "23"
    },
    "4980": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13AF"
    },
    "4983": {
      "branch": 226,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4984": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4986": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4987": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4994": {
      "op": "SHL"
    },
    "4995": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4996": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4997": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4999": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5001": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5002": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "ADD",
      "path": "23"
    },
    "5003": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5004": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "5006": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "5008": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5009": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "ADD",
      "path": "23"
    },
    "5010": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5011": {
      "op": "PUSH8",
      "value": "0x30B9B5A637BBB2B9"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "5022": {
      "op": "SHL"
    },
    "5023": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "5025": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5026": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "ADD",
      "path": "23"
    },
    "5027": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5028": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5029": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5030": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5031": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5032": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5033": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "SUB",
      "path": "23"
    },
    "5034": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "5036": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "ADD",
      "path": "23"
    },
    "5037": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5038": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "REVERT",
      "path": "23"
    },
    "5039": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10576,
        10613
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5040": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10750,
        10759
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 40,
      "value": "0xC"
    },
    "5042": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10750,
        10759
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5043": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10732,
        10771
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13D1"
    },
    "5046": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10732,
        10771
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5051": {
      "op": "SHL"
    },
    "5052": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10750,
        10759
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5053": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10750,
        10759
      ],
      "op": "DIV",
      "path": "23"
    },
    "5054": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10750,
        10759
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5056": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10750,
        10759
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5057": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10750,
        10759
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5058": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10750,
        10759
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5059": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10750,
        10759
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5064": {
      "op": "SHL"
    },
    "5065": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10761,
        10770
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5066": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10761,
        10770
      ],
      "op": "DIV",
      "path": "23"
    },
    "5067": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10761,
        10770
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5068": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10761,
        10770
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5069": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10732,
        10749
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2844"
    },
    "5072": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5073": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10732,
        10771
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5074": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10799,
        10809
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 41,
      "value": "0xC"
    },
    "5076": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10799,
        10809
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5077": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10811,
        10821
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "5079": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10811,
        10821
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5080": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10781,
        10822
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13EF"
    },
    "5083": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10781,
        10822
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5088": {
      "op": "SHL"
    },
    "5089": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10799,
        10809
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5090": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10799,
        10809
      ],
      "op": "DIV",
      "path": "23"
    },
    "5091": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10799,
        10809
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5093": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10799,
        10809
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5094": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10799,
        10809
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5095": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10799,
        10809
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5096": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10799,
        10809
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5097": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10811,
        10821
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5098": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10811,
        10821
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5099": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10781,
        10798
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2844"
    },
    "5102": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10781,
        10822
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5103": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10781,
        10822
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5104": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10888,
        10904
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5106": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10907,
        10918
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13F9"
    },
    "5109": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10907,
        10916
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A7F"
    },
    "5112": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10907,
        10918
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5113": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10907,
        10918
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5114": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10888,
        10918
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5115": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10888,
        10918
      ],
      "op": "POP",
      "path": "23"
    },
    "5116": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10928,
        10944
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5118": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10947,
        10958
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1405"
    },
    "5121": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10947,
        10956
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B2B"
    },
    "5124": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10947,
        10958
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5125": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10947,
        10958
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5126": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10928,
        10958
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5127": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10928,
        10958
      ],
      "op": "POP",
      "path": "23"
    },
    "5128": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "PUSH32",
      "path": "23",
      "statement": 42,
      "value": "0x210F60ADF1DB7A02E9DB9A49EC7C2EB2060C516CBCFD01A0C05288144738EE5D"
    },
    "5161": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10982,
        10986
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5162": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10988,
        10996
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5163": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10998,
        11006
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5164": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11008,
        11021
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1433"
    },
    "5167": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11008,
        11019
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9D7"
    },
    "5170": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11008,
        11021
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5171": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11008,
        11021
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5172": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5174": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5175": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5176": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5178": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "5179": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5180": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "5181": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5182": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5183": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5184": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5186": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5187": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "ADD",
      "path": "23"
    },
    "5188": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5189": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5190": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5191": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5192": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5193": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5194": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "ADD",
      "path": "23"
    },
    "5195": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5196": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5197": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5198": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5199": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "5201": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5202": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "ADD",
      "path": "23"
    },
    "5203": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5204": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5205": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5206": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5207": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5208": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SUB",
      "path": "23"
    },
    "5209": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "5211": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "ADD",
      "path": "23"
    },
    "5212": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5213": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10973,
        11022
      ],
      "op": "LOG1",
      "path": "23"
    },
    "5214": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11072,
        11089
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5216": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11092,
        11156
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x146B"
    },
    "5219": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11113,
        11123
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5220": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11125,
        11135
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5221": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11137,
        11145
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5222": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11147,
        11155
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5223": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11092,
        11112
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BA0"
    },
    "5226": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11092,
        11156
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5227": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11092,
        11156
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5228": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11072,
        11156
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5229": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11072,
        11156
      ],
      "op": "POP",
      "path": "23"
    },
    "5230": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11166,
        11215
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 43,
      "value": "0x1478"
    },
    "5233": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11181,
        11191
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5234": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11193,
        11203
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5235": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11205,
        11214
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5236": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11166,
        11180
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C46"
    },
    "5239": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11166,
        11215
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5240": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11166,
        11215
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5241": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11226,
        11235
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 44,
      "value": "0xC"
    },
    "5243": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5244": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5245": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5247": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "DUP13",
      "path": "23"
    },
    "5248": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5249": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5250": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xFFFFFF"
    },
    "5254": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5255": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5256": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "AND",
      "path": "23"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5261": {
      "op": "SHL"
    },
    "5262": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "MUL",
      "path": "23"
    },
    "5263": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5269": {
      "op": "SHL"
    },
    "5270": {
      "op": "NOT"
    },
    "5271": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5272": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "DUP15",
      "path": "23"
    },
    "5273": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5274": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5275": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5276": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5277": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "AND",
      "path": "23"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5282": {
      "op": "SHL"
    },
    "5283": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "MUL",
      "path": "23"
    },
    "5284": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5290": {
      "op": "SHL"
    },
    "5291": {
      "op": "NOT"
    },
    "5292": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5293": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5294": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "AND",
      "path": "23"
    },
    "5295": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5296": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5297": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5298": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "OR",
      "path": "23"
    },
    "5299": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "AND",
      "path": "23"
    },
    "5300": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "OR",
      "path": "23"
    },
    "5301": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5302": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11225,
        11274
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5303": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11296,
        11307
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 45,
      "value": "0x14BE"
    },
    "5306": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11296,
        11305
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A7F"
    },
    "5309": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11296,
        11307
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5310": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11296,
        11307
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5311": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11285,
        11307
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5312": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11285,
        11307
      ],
      "op": "POP",
      "path": "23"
    },
    "5313": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11328,
        11339
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 46,
      "value": "0x14C8"
    },
    "5316": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11328,
        11337
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B2B"
    },
    "5319": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11328,
        11339
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5320": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11328,
        11339
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5321": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11317,
        11339
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5322": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11317,
        11339
      ],
      "op": "POP",
      "path": "23"
    },
    "5323": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11428,
        11448
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5325": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11451,
        11513
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D8"
    },
    "5328": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11472,
        11481
      ],
      "op": "DUP10",
      "path": "23"
    },
    "5329": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11483,
        11492
      ],
      "op": "DUP10",
      "path": "23"
    },
    "5330": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11494,
        11502
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5331": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11504,
        11512
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5332": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11451,
        11471
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BA0"
    },
    "5335": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11451,
        11513
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5336": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11451,
        11513
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5337": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11428,
        11513
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5338": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11428,
        11513
      ],
      "op": "POP",
      "path": "23"
    },
    "5339": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11523,
        11543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5341": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11546,
        11608
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14E8"
    },
    "5344": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11567,
        11576
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5345": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11578,
        11587
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5346": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11589,
        11597
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5347": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11599,
        11607
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5348": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11546,
        11566
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BA0"
    },
    "5351": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11546,
        11608
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5352": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11546,
        11608
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5353": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11523,
        11608
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5354": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11523,
        11608
      ],
      "op": "POP",
      "path": "23"
    },
    "5355": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11637,
        11649
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5362": {
      "op": "SHL"
    },
    "5363": {
      "op": "SUB"
    },
    "5364": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11622,
        11649
      ],
      "op": "AND",
      "path": "23"
    },
    "5365": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11622,
        11634
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5372": {
      "op": "SHL"
    },
    "5373": {
      "op": "SUB"
    },
    "5374": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11622,
        11649
      ],
      "op": "AND",
      "path": "23"
    },
    "5375": {
      "branch": 227,
      "fn": "AlphaVault.rebalance",
      "offset": [
        11622,
        11649
      ],
      "op": "GT",
      "path": "23"
    },
    "5376": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11618,
        11933
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5377": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11618,
        11933
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1553"
    },
    "5380": {
      "branch": 227,
      "fn": "AlphaVault.rebalance",
      "offset": [
        11618,
        11933
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5381": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11665,
        11715
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 47,
      "value": "0x150F"
    },
    "5384": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11680,
        11689
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5385": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11691,
        11700
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5386": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11702,
        11714
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5387": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11665,
        11679
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C46"
    },
    "5390": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11665,
        11715
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5391": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11665,
        11715
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5392": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11742,
        11752
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 48,
      "value": "0xD"
    },
    "5394": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5395": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5396": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5400": {
      "op": "NOT"
    },
    "5401": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "AND",
      "path": "23"
    },
    "5402": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xFFFFFF"
    },
    "5406": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5408": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "DUP13",
      "path": "23"
    },
    "5409": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5410": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5411": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5412": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "AND",
      "path": "23"
    },
    "5413": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5414": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5415": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5416": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "OR",
      "path": "23"
    },
    "5417": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5418": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5419": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5420": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11730,
        11740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "5422": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5423": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5424": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5430": {
      "op": "SHL"
    },
    "5431": {
      "op": "NOT"
    },
    "5432": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "AND",
      "path": "23"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5437": {
      "op": "SHL"
    },
    "5438": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5439": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "DUP15",
      "path": "23"
    },
    "5440": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5441": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5442": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5443": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5444": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "AND",
      "path": "23"
    },
    "5445": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5446": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5447": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5448": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "MUL",
      "path": "23"
    },
    "5449": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5450": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5451": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5452": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "OR",
      "path": "23"
    },
    "5453": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5454": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11729,
        11778
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5455": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11618,
        11933
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x159E"
    },
    "5458": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11618,
        11933
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5459": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11618,
        11933
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5460": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11809,
        11859
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 49,
      "value": "0x155E"
    },
    "5463": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11824,
        11833
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5464": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11835,
        11844
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5465": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11846,
        11858
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5466": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11809,
        11823
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C46"
    },
    "5469": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11809,
        11859
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5470": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11809,
        11859
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5471": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11886,
        11896
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 50,
      "value": "0xD"
    },
    "5473": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5474": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5475": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5479": {
      "op": "NOT"
    },
    "5480": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "AND",
      "path": "23"
    },
    "5481": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xFFFFFF"
    },
    "5485": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5487": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5488": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5489": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5490": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5491": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "AND",
      "path": "23"
    },
    "5492": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5493": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5494": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5495": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "OR",
      "path": "23"
    },
    "5496": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5497": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5498": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5499": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11874,
        11884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "5501": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5502": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5503": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5509": {
      "op": "SHL"
    },
    "5510": {
      "op": "NOT"
    },
    "5511": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "AND",
      "path": "23"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5516": {
      "op": "SHL"
    },
    "5517": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5518": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "DUP13",
      "path": "23"
    },
    "5519": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5520": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5521": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5522": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5523": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "AND",
      "path": "23"
    },
    "5524": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5525": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5526": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5527": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "MUL",
      "path": "23"
    },
    "5528": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5529": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5530": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5531": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "OR",
      "path": "23"
    },
    "5532": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5533": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11873,
        11922
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5534": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11618,
        11933
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5535": {
      "op": "POP"
    },
    "5536": {
      "op": "POP"
    },
    "5537": {
      "offset": [
        1645,
        1646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "5539": {
      "offset": [
        2580,
        2587
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "5541": {
      "offset": [
        2580,
        2602
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5542": {
      "op": "POP"
    },
    "5543": {
      "op": "POP"
    },
    "5544": {
      "op": "POP"
    },
    "5545": {
      "op": "POP"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "op": "POP"
    },
    "5549": {
      "op": "POP"
    },
    "5550": {
      "op": "POP"
    },
    "5551": {
      "op": "POP"
    },
    "5552": {
      "fn": "AlphaVault.rebalance",
      "jump": "o",
      "offset": [
        10085,
        11939
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5553": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5554": {
      "offset": [
        21286,
        21296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "5556": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21286,
        21296
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5563": {
      "op": "SHL"
    },
    "5564": {
      "op": "SUB"
    },
    "5565": {
      "offset": [
        21286,
        21296
      ],
      "op": "AND",
      "path": "23"
    },
    "5566": {
      "offset": [
        21272,
        21282
      ],
      "op": "CALLER",
      "path": "23"
    },
    "5567": {
      "offset": [
        21272,
        21296
      ],
      "op": "EQ",
      "path": "23"
    },
    "5568": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15FD"
    },
    "5571": {
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5572": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5574": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5575": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5582": {
      "op": "SHL"
    },
    "5583": {
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5584": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5585": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5587": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5589": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5590": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "5591": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5592": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "5594": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "5596": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5597": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "5598": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5599": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5612": {
      "op": "SHL"
    },
    "5613": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "5615": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5616": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "5617": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5618": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5619": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5620": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5621": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5622": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5623": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "SUB",
      "path": "23"
    },
    "5624": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "5626": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "5627": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5628": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "REVERT",
      "path": "23"
    },
    "5629": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5630": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20080,
        20089
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 51,
      "value": "0xC"
    },
    "5632": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20080,
        20089
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5637": {
      "op": "SHL"
    },
    "5638": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20080,
        20089
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5639": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20080,
        20089
      ],
      "op": "DIV",
      "path": "23"
    },
    "5640": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20080,
        20089
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "5642": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20080,
        20089
      ],
      "op": "AND",
      "path": "23"
    },
    "5643": {
      "branch": 228,
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20079,
        20089
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5644": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1648"
    },
    "5647": {
      "branch": 228,
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5648": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5650": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5651": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5658": {
      "op": "SHL"
    },
    "5659": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5660": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5661": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5663": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5665": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5666": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "ADD",
      "path": "23"
    },
    "5667": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5668": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x9"
    },
    "5670": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "5672": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5673": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "ADD",
      "path": "23"
    },
    "5674": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5675": {
      "op": "PUSH9",
      "value": "0x199A5B985B1A5E9959"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "5687": {
      "op": "SHL"
    },
    "5688": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "5690": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5691": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "ADD",
      "path": "23"
    },
    "5692": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5693": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5694": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5695": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5696": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5697": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5698": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "SUB",
      "path": "23"
    },
    "5699": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "5701": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "ADD",
      "path": "23"
    },
    "5702": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5703": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "REVERT",
      "path": "23"
    },
    "5704": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20071,
        20103
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5705": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20113,
        20151
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 52,
      "value": "0x165C"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5714": {
      "op": "SHL"
    },
    "5715": {
      "op": "SUB"
    },
    "5716": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20113,
        20131
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5717": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20113,
        20131
      ],
      "op": "AND",
      "path": "23"
    },
    "5718": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20132,
        20142
      ],
      "op": "CALLER",
      "path": "23"
    },
    "5719": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20144,
        20150
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5720": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20113,
        20131
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FCF"
    },
    "5723": {
      "fn": "AlphaVault.emergencyWithdraw",
      "jump": "i",
      "offset": [
        20113,
        20151
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5724": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        20113,
        20151
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5725": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "POP",
      "path": "23"
    },
    "5726": {
      "fn": "AlphaVault.emergencyWithdraw",
      "offset": [
        19980,
        20158
      ],
      "op": "POP",
      "path": "23"
    },
    "5727": {
      "fn": "AlphaVault.emergencyWithdraw",
      "jump": "o",
      "offset": [
        19980,
        20158
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5728": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5729": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x4"
    },
    "5731": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5732": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5733": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5735": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5736": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5737": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5739": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5741": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5745": {
      "op": "NOT"
    },
    "5746": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5749": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5751": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5752": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "AND",
      "path": "2"
    },
    "5753": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5754": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MUL",
      "path": "2"
    },
    "5755": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5756": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5757": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5758": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "AND",
      "path": "2"
    },
    "5759": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5760": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5761": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5762": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DIV",
      "path": "2"
    },
    "5763": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5764": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5765": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5766": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5767": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5768": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DIV",
      "path": "2"
    },
    "5769": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5770": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MUL",
      "path": "2"
    },
    "5771": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5772": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5773": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5774": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5775": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5776": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5777": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5778": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5779": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5780": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5781": {
      "fn": "ERC20.symbol",
      "offset": [
        2417,
        2430
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5783": {
      "fn": "ERC20.symbol",
      "offset": [
        2417,
        2430
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5784": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5785": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5786": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5787": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5788": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5789": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5790": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5791": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5792": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5793": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5794": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x973"
    },
    "5797": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5798": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5799": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5801": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "LT",
      "path": "2"
    },
    "5802": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x948"
    },
    "5805": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5806": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5809": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5810": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5811": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5812": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DIV",
      "path": "2"
    },
    "5813": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MUL",
      "path": "2"
    },
    "5814": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5815": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5816": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5817": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5819": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5820": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5821": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x973"
    },
    "5824": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5825": {
      "offset": [
        2095,
        2130
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5826": {
      "fn": "ERC20.symbol",
      "offset": [
        2095,
        2130
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xF"
    },
    "5828": {
      "fn": "ERC20.symbol",
      "offset": [
        2095,
        2130
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5829": {
      "fn": "ERC20.symbol",
      "offset": [
        2095,
        2130
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5830": {
      "fn": "ERC20.symbol",
      "jump": "o",
      "offset": [
        2095,
        2130
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5831": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5832": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6384,
        6388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5834": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6400,
        6529
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 54,
      "value": "0x991"
    },
    "5837": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6409,
        6421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D4"
    },
    "5840": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6409,
        6419
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2021"
    },
    "5843": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6409,
        6421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5844": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6409,
        6421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5845": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6423,
        6430
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5846": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABC"
    },
    "5849": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6471,
        6486
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5850": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5852": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5853": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5854": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5856": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "ADD",
      "path": "2"
    },
    "5857": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5859": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5860": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5861": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "5863": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5864": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5865": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5867": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "ADD",
      "path": "2"
    },
    "5868": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D5A"
    },
    "5871": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "5873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "5875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6444,
        6456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16FE"
    },
    "5882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6444,
        6454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2021"
    },
    "5885": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6444,
        6456
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6444,
        6456
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5893": {
      "op": "SHL"
    },
    "5894": {
      "op": "SUB"
    },
    "5895": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5896": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5897": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "AND",
      "path": "2"
    },
    "5898": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5899": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5900": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "ADD",
      "path": "2"
    },
    "5905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5912": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5913": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "ADD",
      "path": "2"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5916": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5917": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5918": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5919": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5920": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "DUP14",
      "path": "2"
    },
    "5921": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "AND",
      "path": "2"
    },
    "5922": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5923": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5924": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5925": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5926": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5927": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5928": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5929": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5931": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x226C"
    },
    "5934": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6432,
        6528
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5935": {
      "offset": [
        1814,
        1837
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5936": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1814,
        1837
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "5938": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1814,
        1837
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5945": {
      "op": "SHL"
    },
    "5946": {
      "op": "SUB"
    },
    "5947": {
      "offset": [
        1814,
        1837
      ],
      "op": "AND",
      "path": "23"
    },
    "5948": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1814,
        1837
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5949": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        1814,
        1837
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5950": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5951": {
      "fn": "ERC20.transfer",
      "offset": [
        3813,
        3817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5953": {
      "fn": "ERC20.transfer",
      "offset": [
        3829,
        3871
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 55,
      "value": "0x991"
    },
    "5956": {
      "fn": "ERC20.transfer",
      "offset": [
        3839,
        3851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x174B"
    },
    "5959": {
      "fn": "ERC20.transfer",
      "offset": [
        3839,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2021"
    },
    "5962": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3839,
        3851
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5963": {
      "fn": "ERC20.transfer",
      "offset": [
        3839,
        3851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5964": {
      "fn": "ERC20.transfer",
      "offset": [
        3853,
        3862
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5965": {
      "fn": "ERC20.transfer",
      "offset": [
        3864,
        3870
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5966": {
      "fn": "ERC20.transfer",
      "offset": [
        3829,
        3838
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2111"
    },
    "5969": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3829,
        3871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5970": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20814,
        20930
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5971": {
      "offset": [
        21286,
        21296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "5973": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21286,
        21296
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5980": {
      "op": "SHL"
    },
    "5981": {
      "op": "SUB"
    },
    "5982": {
      "offset": [
        21286,
        21296
      ],
      "op": "AND",
      "path": "23"
    },
    "5983": {
      "offset": [
        21272,
        21282
      ],
      "op": "CALLER",
      "path": "23"
    },
    "5984": {
      "offset": [
        21272,
        21296
      ],
      "op": "EQ",
      "path": "23"
    },
    "5985": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x179E"
    },
    "5988": {
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5989": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5991": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5992": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5999": {
      "op": "SHL"
    },
    "6000": {
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6001": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6002": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6004": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6006": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6007": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "6008": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6009": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "6011": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6013": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6014": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "6015": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6016": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6029": {
      "op": "SHL"
    },
    "6030": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6032": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6033": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "6034": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6035": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6036": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6037": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6038": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6039": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6040": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "SUB",
      "path": "23"
    },
    "6041": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6043": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "6044": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6045": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6046": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6047": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20909
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 56,
      "value": "0xC"
    },
    "6049": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6050": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6057": {
      "op": "SHL"
    },
    "6058": {
      "op": "SUB"
    },
    "6059": {
      "op": "NOT"
    },
    "6060": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "AND",
      "path": "23"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6067": {
      "op": "SHL"
    },
    "6068": {
      "op": "SUB"
    },
    "6069": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6070": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6071": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6072": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "AND",
      "path": "23"
    },
    "6073": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6074": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6075": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6076": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "OR",
      "path": "23"
    },
    "6077": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6078": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        20892,
        20923
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "6079": {
      "fn": "AlphaVault.setGovernance",
      "jump": "o",
      "offset": [
        20814,
        20930
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6080": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20315,
        20640
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6081": {
      "offset": [
        21286,
        21296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "6083": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21286,
        21296
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6090": {
      "op": "SHL"
    },
    "6091": {
      "op": "SUB"
    },
    "6092": {
      "offset": [
        21286,
        21296
      ],
      "op": "AND",
      "path": "23"
    },
    "6093": {
      "offset": [
        21272,
        21282
      ],
      "op": "CALLER",
      "path": "23"
    },
    "6094": {
      "offset": [
        21272,
        21296
      ],
      "op": "EQ",
      "path": "23"
    },
    "6095": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x180C"
    },
    "6098": {
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6099": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6101": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6102": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6109": {
      "op": "SHL"
    },
    "6110": {
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6111": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6112": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6114": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6116": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6117": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "6118": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6119": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "6121": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6123": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6124": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "6125": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6126": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6139": {
      "op": "SHL"
    },
    "6140": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6142": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6143": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "6144": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6145": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6146": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6147": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6148": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6149": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6150": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "SUB",
      "path": "23"
    },
    "6151": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6153": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "6154": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6155": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6156": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6157": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20464,
        20473
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 57,
      "value": "0xC"
    },
    "6159": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20464,
        20473
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6164": {
      "op": "SHL"
    },
    "6165": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20464,
        20473
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6166": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20464,
        20473
      ],
      "op": "DIV",
      "path": "23"
    },
    "6167": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20464,
        20473
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "6169": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20464,
        20473
      ],
      "op": "AND",
      "path": "23"
    },
    "6170": {
      "branch": 229,
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20463,
        20473
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6171": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1857"
    },
    "6174": {
      "branch": 229,
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6175": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6177": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6178": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6185": {
      "op": "SHL"
    },
    "6186": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6187": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6188": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6190": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6192": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6193": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "ADD",
      "path": "23"
    },
    "6194": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6195": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x9"
    },
    "6197": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6199": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6200": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "ADD",
      "path": "23"
    },
    "6201": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6202": {
      "op": "PUSH9",
      "value": "0x199A5B985B1A5E9959"
    },
    "6212": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "6214": {
      "op": "SHL"
    },
    "6215": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6217": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6218": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "ADD",
      "path": "23"
    },
    "6219": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6220": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6221": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6222": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6223": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6224": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6225": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "SUB",
      "path": "23"
    },
    "6226": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6228": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "ADD",
      "path": "23"
    },
    "6229": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6230": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6231": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20455,
        20487
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6232": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20501
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 58,
      "value": "0x7"
    },
    "6234": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20501
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6235": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6237": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6238": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6239": {
      "op": "PUSH4",
      "value": "0xA34123A7"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6246": {
      "op": "SHL"
    },
    "6247": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6248": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6249": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6251": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6252": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6253": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6254": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6256": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6257": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ADD",
      "path": "23"
    },
    "6258": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6259": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6260": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6261": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6262": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6264": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6265": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ADD",
      "path": "23"
    },
    "6266": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "op": "SUB"
    },
    "6275": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6276": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "AND",
      "path": "23"
    },
    "6277": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6279": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6280": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ADD",
      "path": "23"
    },
    "6281": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6282": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6283": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6290": {
      "op": "SHL"
    },
    "6291": {
      "op": "SUB"
    },
    "6292": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20501
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6293": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20501
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6294": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20501
      ],
      "op": "AND",
      "path": "23"
    },
    "6295": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20501
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6296": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20506
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA34123A7"
    },
    "6301": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20506
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6302": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6304": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6305": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6306": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ADD",
      "path": "23"
    },
    "6307": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6308": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6309": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6310": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6311": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6312": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6313": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SUB",
      "path": "23"
    },
    "6314": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ADD",
      "path": "23"
    },
    "6315": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6316": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20501
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6318": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20501
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6319": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6320": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "6321": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6322": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6323": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6324": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18BC"
    },
    "6327": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6328": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6330": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6331": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6332": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6333": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "POP",
      "path": "23"
    },
    "6334": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "GAS",
      "path": "23"
    },
    "6335": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "CALL",
      "path": "23"
    },
    "6336": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6337": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6338": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6339": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18D0"
    },
    "6342": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6343": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6344": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6346": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6347": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "6348": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6349": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6351": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6352": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6353": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "POP",
      "path": "23"
    },
    "6354": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "POP",
      "path": "23"
    },
    "6355": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "POP",
      "path": "23"
    },
    "6356": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "POP",
      "path": "23"
    },
    "6357": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6359": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6360": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6361": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6363": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6364": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "LT",
      "path": "23"
    },
    "6365": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6366": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18E6"
    },
    "6369": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6370": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6372": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6373": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6374": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6375": {
      "op": "POP"
    },
    "6376": {
      "op": "POP"
    },
    "6377": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20553
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 59,
      "value": "0x7"
    },
    "6379": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20553
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6380": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6382": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6383": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6384": {
      "op": "PUSH4",
      "value": "0x9E3D67B"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6391": {
      "op": "SHL"
    },
    "6392": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6393": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6394": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20562,
        20572
      ],
      "op": "CALLER",
      "path": "23"
    },
    "6395": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6397": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6398": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ADD",
      "path": "23"
    },
    "6399": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6400": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6402": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6403": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6404": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6405": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6407": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6408": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ADD",
      "path": "23"
    },
    "6409": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6410": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6411": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6412": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6413": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6415": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6416": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ADD",
      "path": "23"
    },
    "6417": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6424": {
      "op": "SHL"
    },
    "6425": {
      "op": "SUB"
    },
    "6426": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6428": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6429": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ADD",
      "path": "23"
    },
    "6430": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6431": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6432": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6433": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x84"
    },
    "6435": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6436": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ADD",
      "path": "23"
    },
    "6437": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6438": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6439": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6446": {
      "op": "SHL"
    },
    "6447": {
      "op": "SUB"
    },
    "6448": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20553
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6449": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20553
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6450": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20553
      ],
      "op": "AND",
      "path": "23"
    },
    "6451": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20553
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6452": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20561
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x4F1EB3D8"
    },
    "6457": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20561
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6458": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA4"
    },
    "6460": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6461": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6462": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ADD",
      "path": "23"
    },
    "6463": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6464": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6465": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20497,
        20539
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6466": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6467": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6468": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6469": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "SUB",
      "path": "23"
    },
    "6470": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ADD",
      "path": "23"
    },
    "6471": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6472": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20553
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6474": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20553
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6475": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6476": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "6477": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6478": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6479": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6480": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1958"
    },
    "6483": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6484": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6486": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6487": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6488": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6489": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "POP",
      "path": "23"
    },
    "6490": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "GAS",
      "path": "23"
    },
    "6491": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "CALL",
      "path": "23"
    },
    "6492": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6493": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6494": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6495": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x196C"
    },
    "6498": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6499": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6500": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6502": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6503": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "6504": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6505": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6507": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6508": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6509": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "POP",
      "path": "23"
    },
    "6510": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "POP",
      "path": "23"
    },
    "6511": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "POP",
      "path": "23"
    },
    "6512": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "POP",
      "path": "23"
    },
    "6513": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6515": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6516": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6517": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6519": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6520": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "LT",
      "path": "23"
    },
    "6521": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6522": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1982"
    },
    "6525": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6526": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6528": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6529": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6530": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        20549,
        20633
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6531": {
      "op": "POP"
    },
    "6532": {
      "op": "POP"
    },
    "6533": {
      "op": "POP"
    },
    "6534": {
      "op": "POP"
    },
    "6535": {
      "op": "POP"
    },
    "6536": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "o",
      "offset": [
        20315,
        20640
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6537": {
      "offset": [
        1747,
        1773
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6538": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1747,
        1773
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "6540": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1747,
        1773
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6541": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1747,
        1773
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6542": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "o",
      "offset": [
        1747,
        1773
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6543": {
      "offset": [
        1912,
        1933
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6544": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1912,
        1933
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "6546": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1912,
        1933
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6551": {
      "op": "SHL"
    },
    "6552": {
      "offset": [
        1912,
        1933
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6553": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1912,
        1933
      ],
      "op": "DIV",
      "path": "23"
    },
    "6554": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1912,
        1933
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "6556": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1912,
        1933
      ],
      "op": "AND",
      "path": "23"
    },
    "6557": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1912,
        1933
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6558": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "o",
      "offset": [
        1912,
        1933
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6559": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6560": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14579,
        14588
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "6562": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14579,
        14588
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6563": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14475,
        14489
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6565": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14475,
        14489
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6566": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14475,
        14489
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6567": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14475,
        14489
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6568": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14475,
        14489
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6569": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14475,
        14489
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6570": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14475,
        14489
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6571": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14475,
        14489
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6572": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14562,
        14600
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x19CA"
    },
    "6575": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14562,
        14600
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6580": {
      "op": "SHL"
    },
    "6581": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14579,
        14588
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6582": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14579,
        14588
      ],
      "op": "DIV",
      "path": "23"
    },
    "6583": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14579,
        14588
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6585": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14579,
        14588
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6586": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14579,
        14588
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6587": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14579,
        14588
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6588": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14579,
        14588
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6593": {
      "op": "SHL"
    },
    "6594": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14590,
        14599
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6595": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14590,
        14599
      ],
      "op": "DIV",
      "path": "23"
    },
    "6596": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14590,
        14599
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6597": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14590,
        14599
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6598": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14562,
        14578
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CD0"
    },
    "6601": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        14562,
        14600
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6602": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14562,
        14600
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6603": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "6605": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6606": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14686,
        14696
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "6608": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14686,
        14696
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6609": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14517,
        14600
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6610": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14517,
        14600
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "6611": {
      "op": "POP"
    },
    "6612": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14517,
        14600
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6613": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14517,
        14600
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6614": {
      "op": "POP"
    },
    "6615": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14611,
        14631
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6617": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14611,
        14631
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6618": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14611,
        14631
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6619": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14611,
        14631
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6620": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14657,
        14697
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x19F4"
    },
    "6623": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14657,
        14697
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6628": {
      "op": "SHL"
    },
    "6629": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6630": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6631": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "DIV",
      "path": "23"
    },
    "6632": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6634": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6635": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6636": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6637": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14674,
        14684
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6638": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14686,
        14696
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6639": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14686,
        14696
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6640": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14657,
        14673
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CD0"
    },
    "6643": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        14657,
        14697
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6644": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14657,
        14697
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6645": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14610,
        14697
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6646": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14610,
        14697
      ],
      "op": "POP",
      "path": "23"
    },
    "6647": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14610,
        14697
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6648": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14610,
        14697
      ],
      "op": "POP",
      "path": "23"
    },
    "6649": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14716,
        14762
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 60,
      "value": "0x1A0E"
    },
    "6652": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14749,
        14761
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6653": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14716,
        14744
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A08"
    },
    "6656": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14732,
        14743
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6657": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14716,
        14727
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A08"
    },
    "6660": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14716,
        14725
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A7F"
    },
    "6663": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        14716,
        14727
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6664": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14716,
        14727
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6665": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14716,
        14731
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6666": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14716,
        14731
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x260A"
    },
    "6669": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        14716,
        14744
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6670": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14716,
        14762
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6671": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14707,
        14762
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "6672": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14707,
        14762
      ],
      "op": "POP",
      "path": "23"
    },
    "6673": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14781,
        14827
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 61,
      "value": "0x1A20"
    },
    "6676": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14814,
        14826
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6677": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14781,
        14809
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A08"
    },
    "6680": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14797,
        14808
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6681": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14781,
        14792
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A08"
    },
    "6684": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14781,
        14790
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B2B"
    },
    "6687": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        14781,
        14792
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6688": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14781,
        14827
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6689": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14772,
        14827
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "6690": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14772,
        14827
      ],
      "op": "POP",
      "path": "23"
    },
    "6691": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "POP",
      "path": "23"
    },
    "6692": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "POP",
      "path": "23"
    },
    "6693": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "POP",
      "path": "23"
    },
    "6694": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "POP",
      "path": "23"
    },
    "6695": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6696": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        14418,
        14834
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6697": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "o",
      "offset": [
        14418,
        14834
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6698": {
      "offset": [
        1706,
        1740
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6699": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1706,
        1740
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "6732": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1706,
        1740
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6733": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "o",
      "offset": [
        1706,
        1740
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6734": {
      "offset": [
        1670,
        1700
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6735": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1670,
        1700
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "6768": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1670,
        1700
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6769": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "o",
      "offset": [
        1670,
        1700
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6770": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6771": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7461,
        7476
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6773": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7478,
        7493
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6774": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "6776": {
      "offset": [
        2277,
        2284
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "6778": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2277,
        2284
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6779": {
      "offset": [
        2277,
        2296
      ],
      "op": "EQ",
      "path": "7"
    },
    "6780": {
      "branch": 284,
      "fn": "AlphaVault.withdraw",
      "offset": [
        2277,
        2296
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6781": {
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1ACD"
    },
    "6784": {
      "branch": 284,
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6785": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6787": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6788": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6795": {
      "op": "SHL"
    },
    "6796": {
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6797": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6798": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6800": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6802": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6803": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "6804": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6805": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "6807": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "6809": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6810": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "6811": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6812": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "6845": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "6847": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6848": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "6849": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6850": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6851": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6852": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6853": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6854": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6855": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SUB",
      "path": "7"
    },
    "6856": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "6858": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "6859": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6860": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "REVERT",
      "path": "7"
    },
    "6861": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6862": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "6864": {
      "offset": [
        2407,
        2414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "6866": {
      "offset": [
        2407,
        2425
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6867": {
      "branch": 230,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7513,
        7523
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 62
    },
    "6868": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B0D"
    },
    "6871": {
      "branch": 230,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6872": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6874": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6875": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6876": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6882": {
      "op": "SHL"
    },
    "6883": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6884": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6885": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6887": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6889": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6890": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "ADD",
      "path": "23"
    },
    "6891": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6892": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "6894": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6896": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6897": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "ADD",
      "path": "23"
    },
    "6898": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6899": {
      "op": "PUSH6",
      "value": "0x736861726573"
    },
    "6906": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6908": {
      "op": "SHL"
    },
    "6909": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6911": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6912": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "ADD",
      "path": "23"
    },
    "6913": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6914": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6915": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6916": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6917": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6918": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6919": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "SUB",
      "path": "23"
    },
    "6920": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6922": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "ADD",
      "path": "23"
    },
    "6923": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6924": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6925": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7505,
        7534
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6932": {
      "op": "SHL"
    },
    "6933": {
      "op": "SUB"
    },
    "6934": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7552,
        7568
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 63
    },
    "6935": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7552,
        7568
      ],
      "op": "AND",
      "path": "23"
    },
    "6936": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7552,
        7568
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6937": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7552,
        7568
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6938": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7552,
        7568
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6939": {
      "branch": 231,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7552,
        7568
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6940": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7552,
        7591
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B2E"
    },
    "6943": {
      "branch": 231,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7552,
        7591
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6944": {
      "op": "POP"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6951": {
      "op": "SHL"
    },
    "6952": {
      "op": "SUB"
    },
    "6953": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7572,
        7591
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6954": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7572,
        7591
      ],
      "op": "AND",
      "path": "23"
    },
    "6955": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7586,
        7590
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "6956": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7572,
        7591
      ],
      "op": "EQ",
      "path": "23"
    },
    "6957": {
      "branch": 232,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7572,
        7591
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6958": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7552,
        7591
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6959": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B64"
    },
    "6962": {
      "branch": 232,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6963": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6965": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6966": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6973": {
      "op": "SHL"
    },
    "6974": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6975": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6976": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6978": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6980": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6981": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "ADD",
      "path": "23"
    },
    "6982": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6983": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6985": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6987": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6988": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "ADD",
      "path": "23"
    },
    "6989": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6990": {
      "op": "PUSH2",
      "value": "0x746F"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6995": {
      "op": "SHL"
    },
    "6996": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6998": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6999": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "ADD",
      "path": "23"
    },
    "7000": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7001": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7002": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7003": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7004": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7005": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7006": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "SUB",
      "path": "23"
    },
    "7007": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "7009": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "ADD",
      "path": "23"
    },
    "7010": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7011": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7012": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7544,
        7598
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7013": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7807,
        7816
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "7015": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7807,
        7816
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7016": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7731,
        7750
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7018": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7731,
        7750
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7019": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7731,
        7750
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7020": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7731,
        7750
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7021": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7787,
        7840
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B8D"
    },
    "7024": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7787,
        7840
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7029": {
      "op": "SHL"
    },
    "7030": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7807,
        7816
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7031": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7807,
        7816
      ],
      "op": "DIV",
      "path": "23"
    },
    "7032": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7807,
        7816
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "7034": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7807,
        7816
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7035": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7807,
        7816
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7036": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7807,
        7816
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "7037": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7807,
        7816
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7040": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7042": {
      "op": "SHL"
    },
    "7043": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7818,
        7827
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7044": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7818,
        7827
      ],
      "op": "DIV",
      "path": "23"
    },
    "7045": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7818,
        7827
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7046": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7818,
        7827
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "7047": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7829,
        7835
      ],
      "op": "DUP11",
      "path": "23"
    },
    "7048": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7837,
        7839
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7049": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7787,
        7806
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DC5"
    },
    "7052": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        7787,
        7840
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7053": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7787,
        7840
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7054": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "7056": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7057": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7941,
        7951
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "7059": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7941,
        7951
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7060": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7730,
        7840
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7061": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7730,
        7840
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "7062": {
      "op": "POP"
    },
    "7063": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7730,
        7840
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7064": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7730,
        7840
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7065": {
      "op": "POP"
    },
    "7066": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7851,
        7871
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7068": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7851,
        7871
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7069": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7851,
        7871
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7070": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7851,
        7871
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7071": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7909,
        7964
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BB9"
    },
    "7074": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7909,
        7964
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7079": {
      "op": "SHL"
    },
    "7080": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7081": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7082": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "DIV",
      "path": "23"
    },
    "7083": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "7085": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7086": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7087": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "7088": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7929,
        7939
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7089": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7941,
        7951
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7090": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7941,
        7951
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "7091": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7953,
        7959
      ],
      "op": "DUP13",
      "path": "23"
    },
    "7092": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7961,
        7963
      ],
      "op": "DUP11",
      "path": "23"
    },
    "7093": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7909,
        7928
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DC5"
    },
    "7096": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        7909,
        7964
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7097": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7909,
        7964
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7098": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7850,
        7964
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7099": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7850,
        7964
      ],
      "op": "POP",
      "path": "23"
    },
    "7100": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7850,
        7964
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7101": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7850,
        7964
      ],
      "op": "POP",
      "path": "23"
    },
    "7102": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8030,
        8049
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7104": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8052,
        8065
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BC7"
    },
    "7107": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8052,
        8063
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9D7"
    },
    "7110": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8052,
        8065
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7111": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8052,
        8065
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7112": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8030,
        8065
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7113": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8030,
        8065
      ],
      "op": "POP",
      "path": "23"
    },
    "7114": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8075,
        8096
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7116": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8139
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE7"
    },
    "7119": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8127,
        8138
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7120": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8122
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "7123": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8115,
        8121
      ],
      "op": "DUP15",
      "path": "23"
    },
    "7124": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8110
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BDB"
    },
    "7127": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8108
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A7F"
    },
    "7130": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8099,
        8110
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7131": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8110
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7132": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8114
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7133": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8114
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F9E"
    },
    "7136": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8099,
        8122
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7137": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8122
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7138": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8126
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7139": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8126
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FF7"
    },
    "7142": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8099,
        8139
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7143": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8099,
        8139
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7144": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8075,
        8139
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7145": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8075,
        8139
      ],
      "op": "POP",
      "path": "23"
    },
    "7146": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8149,
        8170
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7148": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8173,
        8213
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BFB"
    },
    "7151": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8201,
        8212
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7152": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8173,
        8196
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "7155": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8189,
        8195
      ],
      "op": "DUP16",
      "path": "23"
    },
    "7156": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8173,
        8184
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BDB"
    },
    "7159": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8173,
        8182
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B2B"
    },
    "7162": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8173,
        8184
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7163": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8173,
        8213
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7164": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8149,
        8213
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7165": {
      "op": "POP"
    },
    "7166": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8227,
        8244
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7167": {
      "branch": 233,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8227,
        8244
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7168": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8223,
        8284
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C37"
    },
    "7171": {
      "branch": 233,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8223,
        8284
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7172": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8246,
        8284
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 64,
      "value": "0x1C37"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7181": {
      "op": "SHL"
    },
    "7182": {
      "op": "SUB"
    },
    "7183": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8246,
        8252
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7216": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8246,
        8265
      ],
      "op": "AND",
      "path": "23"
    },
    "7217": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8266,
        8268
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7218": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8270,
        8283
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7219": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8246,
        8265
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FCF"
    },
    "7222": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8246,
        8284
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7223": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8246,
        8284
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7224": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8298,
        8315
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7225": {
      "branch": 234,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8298,
        8315
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7226": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8294,
        8355
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C71"
    },
    "7229": {
      "branch": 234,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8294,
        8355
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7230": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8317,
        8355
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 65,
      "value": "0x1C71"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7239": {
      "op": "SHL"
    },
    "7240": {
      "op": "SUB"
    },
    "7241": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8317,
        8323
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7274": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8317,
        8336
      ],
      "op": "AND",
      "path": "23"
    },
    "7275": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8337,
        8339
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7276": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8341,
        8354
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7277": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8317,
        8336
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FCF"
    },
    "7280": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8317,
        8355
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7281": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8317,
        8355
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7282": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8426,
        8474
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 66,
      "value": "0x1C7F"
    },
    "7285": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8460,
        8473
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7286": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8426,
        8455
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A08"
    },
    "7289": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8426,
        8437
      ],
      "op": "DUP10",
      "path": "23"
    },
    "7290": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8442,
        8454
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7291": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8426,
        8441
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x260A"
    },
    "7294": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8426,
        8455
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7295": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8426,
        8474
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7296": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8416,
        8474
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "7297": {
      "op": "POP"
    },
    "7298": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8494,
        8542
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 67,
      "value": "0x1C8F"
    },
    "7301": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8528,
        8541
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7302": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8494,
        8523
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A08"
    },
    "7305": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8494,
        8505
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7306": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8510,
        8522
      ],
      "op": "DUP8",
      "path": "23"
    },
    "7307": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8494,
        8509
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x260A"
    },
    "7310": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8494,
        8523
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7311": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8494,
        8542
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7312": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8484,
        8542
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "7313": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8484,
        8542
      ],
      "op": "POP",
      "path": "23"
    },
    "7314": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8571,
        8581
      ],
      "op": "DUP12",
      "path": "23",
      "statement": 68
    },
    "7315": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8560,
        8567
      ],
      "op": "DUP10",
      "path": "23"
    },
    "7316": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8560,
        8581
      ],
      "op": "LT",
      "path": "23"
    },
    "7317": {
      "branch": 235,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8560,
        8581
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7318": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CD3"
    },
    "7321": {
      "branch": 235,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7322": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7324": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7325": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7332": {
      "op": "SHL"
    },
    "7333": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7334": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7335": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7337": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7339": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7340": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "ADD",
      "path": "23"
    },
    "7341": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7342": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "7344": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "7346": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7347": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "ADD",
      "path": "23"
    },
    "7348": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7349": {
      "op": "PUSH10",
      "value": "0x30B6B7BAB73A1826B4B7"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7362": {
      "op": "SHL"
    },
    "7363": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "7365": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7366": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "ADD",
      "path": "23"
    },
    "7367": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7368": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7369": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7370": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7371": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7372": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7373": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "SUB",
      "path": "23"
    },
    "7374": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "7376": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "ADD",
      "path": "23"
    },
    "7377": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7378": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7379": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8552,
        8596
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7380": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8625,
        8635
      ],
      "op": "DUP11",
      "path": "23",
      "statement": 69
    },
    "7381": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8614,
        8621
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7382": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8614,
        8635
      ],
      "op": "LT",
      "path": "23"
    },
    "7383": {
      "branch": 236,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8614,
        8635
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7384": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D15"
    },
    "7387": {
      "branch": 236,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7388": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7390": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7391": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7392": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7396": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7398": {
      "op": "SHL"
    },
    "7399": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7400": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7401": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7403": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7405": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7406": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "ADD",
      "path": "23"
    },
    "7407": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7408": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "7410": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "7412": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7413": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "ADD",
      "path": "23"
    },
    "7414": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7415": {
      "op": "PUSH10",
      "value": "0x30B6B7BAB73A18A6B4B7"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7428": {
      "op": "SHL"
    },
    "7429": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "7431": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7432": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "ADD",
      "path": "23"
    },
    "7433": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7434": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7435": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7436": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7437": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7438": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7439": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "SUB",
      "path": "23"
    },
    "7440": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "7442": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "ADD",
      "path": "23"
    },
    "7443": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7444": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7445": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8606,
        8650
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7446": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8684,
        8709
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 70,
      "value": "0x1D1F"
    },
    "7449": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8690,
        8700
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7450": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8702,
        8708
      ],
      "op": "DUP15",
      "path": "23"
    },
    "7451": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8684,
        8689
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x305E"
    },
    "7454": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8684,
        8709
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7455": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8684,
        8709
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7456": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 71,
      "value": "0x40"
    },
    "7458": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7459": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7460": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP15",
      "path": "23"
    },
    "7461": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7462": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7463": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7465": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7466": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "ADD",
      "path": "23"
    },
    "7467": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7468": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7469": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7470": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7471": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7472": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "ADD",
      "path": "23"
    },
    "7473": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP11",
      "path": "23"
    },
    "7474": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7475": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7476": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7477": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7484": {
      "op": "SHL"
    },
    "7485": {
      "op": "SUB"
    },
    "7486": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP13",
      "path": "23"
    },
    "7487": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "AND",
      "path": "23"
    },
    "7488": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7489": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8733,
        8743
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7490": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8733,
        8743
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7491": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F"
    },
    "7524": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7525": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7526": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7527": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "SUB",
      "path": "23"
    },
    "7528": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "7530": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "ADD",
      "path": "23"
    },
    "7531": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7532": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8774
      ],
      "op": "LOG3",
      "path": "23"
    },
    "7533": {
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7534": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7535": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7536": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7537": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7538": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7539": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7540": {
      "offset": [
        1645,
        1646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7542": {
      "offset": [
        2580,
        2587
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "7544": {
      "offset": [
        2580,
        2602
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7545": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2580,
        2602
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7546": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2580,
        2602
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7547": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2580,
        2602
      ],
      "op": "POP",
      "path": "7"
    },
    "7548": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "7549": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "POP",
      "path": "23"
    },
    "7550": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "7551": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7552": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "POP",
      "path": "23"
    },
    "7553": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "POP",
      "path": "23"
    },
    "7554": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7297,
        8781
      ],
      "op": "POP",
      "path": "23"
    },
    "7555": {
      "fn": "AlphaVault.withdraw",
      "jump": "o",
      "offset": [
        7297,
        8781
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7556": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7557": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17752,
        17756
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 72,
      "value": "0x7"
    },
    "7559": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17752,
        17756
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7566": {
      "op": "SHL"
    },
    "7567": {
      "op": "SUB"
    },
    "7568": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17752,
        17756
      ],
      "op": "AND",
      "path": "23"
    },
    "7569": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17730,
        17740
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7570": {
      "branch": 237,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17730,
        17757
      ],
      "op": "EQ",
      "path": "23"
    },
    "7571": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17722,
        17758
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D9B"
    },
    "7574": {
      "branch": 237,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17722,
        17758
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7575": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17722,
        17758
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7577": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17722,
        17758
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7578": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17722,
        17758
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7579": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17722,
        17758
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7580": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17772,
        17783
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7581": {
      "branch": 238,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17772,
        17783
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7582": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17768,
        17825
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1DD5"
    },
    "7585": {
      "branch": 238,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17768,
        17825
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7586": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17785,
        17825
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 73,
      "value": "0x1DD5"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7595": {
      "op": "SHL"
    },
    "7596": {
      "op": "SUB"
    },
    "7597": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17785,
        17791
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7630": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17785,
        17804
      ],
      "op": "AND",
      "path": "23"
    },
    "7631": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17805,
        17815
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7632": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17817,
        17824
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7633": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17785,
        17804
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FCF"
    },
    "7636": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "jump": "i",
      "offset": [
        17785,
        17825
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7637": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17785,
        17825
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7638": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17839,
        17850
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7639": {
      "branch": 239,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17839,
        17850
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7640": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17835,
        17892
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E0F"
    },
    "7643": {
      "branch": 239,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17835,
        17892
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7644": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17852,
        17892
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 74,
      "value": "0x1E0F"
    },
    "7647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7653": {
      "op": "SHL"
    },
    "7654": {
      "op": "SUB"
    },
    "7655": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17852,
        17858
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7688": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17852,
        17871
      ],
      "op": "AND",
      "path": "23"
    },
    "7689": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17872,
        17882
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7690": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17884,
        17891
      ],
      "op": "DUP6",
      "path": "23"
    },
    "7691": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17852,
        17871
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FCF"
    },
    "7694": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "jump": "i",
      "offset": [
        17852,
        17892
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7695": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17852,
        17892
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7696": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "POP",
      "path": "23"
    },
    "7697": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "POP",
      "path": "23"
    },
    "7698": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "POP",
      "path": "23"
    },
    "7699": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        17578,
        17899
      ],
      "op": "POP",
      "path": "23"
    },
    "7700": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "jump": "o",
      "offset": [
        17578,
        17899
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7701": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18446,
        18666
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7702": {
      "offset": [
        21286,
        21296
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "7704": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21286,
        21296
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7711": {
      "op": "SHL"
    },
    "7712": {
      "op": "SUB"
    },
    "7713": {
      "offset": [
        21286,
        21296
      ],
      "op": "AND",
      "path": "23"
    },
    "7714": {
      "offset": [
        21272,
        21282
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7715": {
      "offset": [
        21272,
        21296
      ],
      "op": "EQ",
      "path": "23"
    },
    "7716": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E61"
    },
    "7719": {
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7720": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7722": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7723": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7730": {
      "op": "SHL"
    },
    "7731": {
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7732": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7733": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7735": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7737": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7738": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "7739": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7740": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "7742": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "7744": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7745": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "7746": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7747": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7760": {
      "op": "SHL"
    },
    "7761": {
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "7763": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7764": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "7765": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7766": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7767": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7768": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7769": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7770": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7771": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "SUB",
      "path": "23"
    },
    "7772": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "7774": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "ADD",
      "path": "23"
    },
    "7775": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7776": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7777": {
      "fn": "AlphaVault.sweep",
      "offset": [
        21264,
        21311
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7778": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18584,
        18590
      ],
      "op": "PUSH32",
      "path": "23",
      "statement": 75,
      "value": "0x0"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7817": {
      "op": "SHL"
    },
    "7818": {
      "op": "SUB"
    },
    "7819": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18590
      ],
      "op": "AND",
      "path": "23"
    },
    "7820": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18580
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7827": {
      "op": "SHL"
    },
    "7828": {
      "op": "SUB"
    },
    "7829": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18590
      ],
      "op": "AND",
      "path": "23"
    },
    "7830": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18590
      ],
      "op": "EQ",
      "path": "23"
    },
    "7831": {
      "branch": 240,
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18590
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7832": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18609
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7833": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18609
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7834": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18609
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1ED5"
    },
    "7837": {
      "branch": 240,
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18609
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7838": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18609
      ],
      "op": "POP",
      "path": "23"
    },
    "7839": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18603,
        18609
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7878": {
      "op": "SHL"
    },
    "7879": {
      "op": "SUB"
    },
    "7880": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18594,
        18609
      ],
      "op": "AND",
      "path": "23"
    },
    "7881": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18594,
        18599
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7888": {
      "op": "SHL"
    },
    "7889": {
      "op": "SUB"
    },
    "7890": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18594,
        18609
      ],
      "op": "AND",
      "path": "23"
    },
    "7891": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18594,
        18609
      ],
      "op": "EQ",
      "path": "23"
    },
    "7892": {
      "branch": 241,
      "fn": "AlphaVault.sweep",
      "offset": [
        18594,
        18609
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7893": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18575,
        18609
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7894": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F0E"
    },
    "7897": {
      "branch": 241,
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7898": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7900": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7901": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7908": {
      "op": "SHL"
    },
    "7909": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7910": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7911": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7913": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7915": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7916": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "ADD",
      "path": "23"
    },
    "7917": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7918": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "7920": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "7922": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7923": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "ADD",
      "path": "23"
    },
    "7924": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7925": {
      "op": "PUSH5",
      "value": "0x3A37B5B2B7"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "7933": {
      "op": "SHL"
    },
    "7934": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "7936": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7937": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "ADD",
      "path": "23"
    },
    "7938": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7939": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7940": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7941": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7942": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7943": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7944": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "SUB",
      "path": "23"
    },
    "7945": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "7947": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "ADD",
      "path": "23"
    },
    "7948": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7949": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7950": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18567,
        18619
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7951": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18629,
        18659
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 76,
      "value": "0x8E2"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7960": {
      "op": "SHL"
    },
    "7961": {
      "op": "SUB"
    },
    "7962": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18629,
        18647
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7963": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18629,
        18647
      ],
      "op": "AND",
      "path": "23"
    },
    "7964": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18648,
        18650
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7965": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18652,
        18658
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7966": {
      "fn": "AlphaVault.sweep",
      "offset": [
        18629,
        18647
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FCF"
    },
    "7969": {
      "fn": "AlphaVault.sweep",
      "jump": "i",
      "offset": [
        18629,
        18659
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7970": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7977": {
      "op": "SHL"
    },
    "7978": {
      "op": "SUB"
    },
    "7979": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 77
    },
    "7980": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7981": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "AND",
      "path": "2"
    },
    "7982": {
      "fn": "ERC20.allowance",
      "offset": [
        4046,
        4053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7984": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7985": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7986": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7987": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7989": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7991": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7992": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7993": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7994": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7996": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7997": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7998": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7999": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8000": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8001": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8002": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "AND",
      "path": "2"
    },
    "8003": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8004": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8005": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8006": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8007": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8008": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8009": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8010": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8011": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8012": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8013": {
      "offset": [
        2054,
        2089
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8014": {
      "fn": "ERC20.allowance",
      "offset": [
        2054,
        2089
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE"
    },
    "8016": {
      "fn": "ERC20.allowance",
      "offset": [
        2054,
        2089
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8017": {
      "fn": "ERC20.allowance",
      "offset": [
        2054,
        2089
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8018": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2054,
        2089
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8019": {
      "offset": [
        1874,
        1906
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8020": {
      "fn": "ERC20.allowance",
      "offset": [
        1874,
        1906
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "8022": {
      "fn": "ERC20.allowance",
      "offset": [
        1874,
        1906
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8029": {
      "op": "SHL"
    },
    "8030": {
      "op": "SUB"
    },
    "8031": {
      "offset": [
        1874,
        1906
      ],
      "op": "AND",
      "path": "23"
    },
    "8032": {
      "fn": "ERC20.allowance",
      "offset": [
        1874,
        1906
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8033": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1874,
        1906
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8034": {
      "offset": [
        1940,
        1962
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8035": {
      "fn": "ERC20.allowance",
      "offset": [
        1940,
        1962
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "8037": {
      "fn": "ERC20.allowance",
      "offset": [
        1940,
        1962
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8042": {
      "op": "SHL"
    },
    "8043": {
      "offset": [
        1940,
        1962
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8044": {
      "fn": "ERC20.allowance",
      "offset": [
        1940,
        1962
      ],
      "op": "DIV",
      "path": "23"
    },
    "8045": {
      "fn": "ERC20.allowance",
      "offset": [
        1940,
        1962
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "8047": {
      "fn": "ERC20.allowance",
      "offset": [
        1940,
        1962
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "8048": {
      "fn": "ERC20.allowance",
      "offset": [
        1940,
        1962
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8049": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1940,
        1962
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8050": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8051": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8053": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 78
    },
    "8054": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8055": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "1"
    },
    "8056": {
      "branch": 287,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8057": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC9"
    },
    "8060": {
      "branch": 287,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8061": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8063": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8064": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8065": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8071": {
      "op": "SHL"
    },
    "8072": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8073": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8074": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8076": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8078": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8079": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "8080": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8081": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "8083": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "8085": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8086": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "8087": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8088": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "8121": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "8123": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8124": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "8125": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8126": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8127": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8128": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8129": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8130": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8131": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "1"
    },
    "8132": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "8134": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "8135": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8136": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8137": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8138": {
      "op": "POP"
    },
    "8139": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 79
    },
    "8140": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "1"
    },
    "8141": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8142": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8143": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8144": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 80,
      "value": "0x40"
    },
    "8146": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8147": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8154": {
      "op": "SHL"
    },
    "8155": {
      "op": "SUB"
    },
    "8156": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8157": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "4"
    },
    "8158": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "8160": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8161": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8162": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8163": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "8165": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8166": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8167": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8168": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8169": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8170": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8171": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8172": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8173": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8174": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP4",
      "path": "4"
    },
    "8175": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SUB",
      "path": "4"
    },
    "8176": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8177": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8178": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8179": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8180": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8181": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "8183": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8184": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8185": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8186": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8187": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8188": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8189": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8191": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8192": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8193": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8194": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8201": {
      "op": "SHL"
    },
    "8202": {
      "op": "SUB"
    },
    "8203": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "4"
    },
    "8204": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8211": {
      "op": "SHL"
    },
    "8212": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "OR",
      "path": "4"
    },
    "8213": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8214": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8215": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8E2"
    },
    "8218": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8219": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8220": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8221": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x315A"
    },
    "8224": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        786,
        872
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8225": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8226": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 81
    },
    "8227": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8228": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8229": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8236": {
      "op": "SHL"
    },
    "8237": {
      "op": "SUB"
    },
    "8238": {
      "fn": "ERC20._approve",
      "offset": [
        9456,
        9475
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 82
    },
    "8239": {
      "branch": 261,
      "fn": "ERC20._approve",
      "offset": [
        9456,
        9475
      ],
      "op": "AND",
      "path": "2"
    },
    "8240": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206A"
    },
    "8243": {
      "branch": 261,
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8244": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8246": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8253": {
      "op": "SHL"
    },
    "8254": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8255": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8256": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8258": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "ADD",
      "path": "2"
    },
    "8259": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8260": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8261": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8263": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "ADD",
      "path": "2"
    },
    "8264": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8265": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8266": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SUB",
      "path": "2"
    },
    "8267": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8268": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8269": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "8271": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8272": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8273": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8275": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "ADD",
      "path": "2"
    },
    "8276": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8277": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D0C"
    },
    "8280": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "8282": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8283": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "8284": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8286": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "ADD",
      "path": "2"
    },
    "8287": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8288": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "POP",
      "path": "2"
    },
    "8289": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "POP",
      "path": "2"
    },
    "8290": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8292": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8293": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8294": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8295": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SUB",
      "path": "2"
    },
    "8296": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8297": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8298": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8305": {
      "op": "SHL"
    },
    "8306": {
      "op": "SUB"
    },
    "8307": {
      "fn": "ERC20._approve",
      "offset": [
        9534,
        9555
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 83
    },
    "8308": {
      "branch": 262,
      "fn": "ERC20._approve",
      "offset": [
        9534,
        9555
      ],
      "op": "AND",
      "path": "2"
    },
    "8309": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20AF"
    },
    "8312": {
      "branch": 262,
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8313": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8315": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8316": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8322": {
      "op": "SHL"
    },
    "8323": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8324": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8325": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8327": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "ADD",
      "path": "2"
    },
    "8328": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8329": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8330": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8332": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "ADD",
      "path": "2"
    },
    "8333": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8334": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8335": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SUB",
      "path": "2"
    },
    "8336": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8337": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8338": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "8340": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8341": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8342": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8344": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "ADD",
      "path": "2"
    },
    "8345": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8346": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0F"
    },
    "8349": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "8351": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8352": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "8353": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8355": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "ADD",
      "path": "2"
    },
    "8356": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8357": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "POP",
      "path": "2"
    },
    "8358": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "POP",
      "path": "2"
    },
    "8359": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8361": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8362": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8363": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8364": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SUB",
      "path": "2"
    },
    "8365": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8366": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8367": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8374": {
      "op": "SHL"
    },
    "8375": {
      "op": "SUB"
    },
    "8376": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 84
    },
    "8377": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8378": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "AND",
      "path": "2"
    },
    "8379": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8381": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8382": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8383": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8384": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8386": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8388": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8389": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8390": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8391": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8393": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8394": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8395": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8396": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8397": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8398": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "AND",
      "path": "2"
    },
    "8399": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8400": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8401": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8402": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8403": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8404": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8405": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8406": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8407": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8408": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8409": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9641
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8410": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9641
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8411": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9641
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8412": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 85
    },
    "8413": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8414": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8415": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8416": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8417": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8418": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8419": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8452": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8453": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8454": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8455": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SUB",
      "path": "2"
    },
    "8456": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8457": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8458": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "ADD",
      "path": "2"
    },
    "8459": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8460": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8461": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "POP",
      "path": "2"
    },
    "8462": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "POP",
      "path": "2"
    },
    "8463": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "POP",
      "path": "2"
    },
    "8464": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9355,
        9695
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8465": {
      "fn": "ERC20._transfer",
      "offset": [
        7031,
        7561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8472": {
      "op": "SHL"
    },
    "8473": {
      "op": "SUB"
    },
    "8474": {
      "fn": "ERC20._transfer",
      "offset": [
        7136,
        7156
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 86
    },
    "8475": {
      "branch": 263,
      "fn": "ERC20._transfer",
      "offset": [
        7136,
        7156
      ],
      "op": "AND",
      "path": "2"
    },
    "8476": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2156"
    },
    "8479": {
      "branch": 263,
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8480": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8482": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8489": {
      "op": "SHL"
    },
    "8490": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8491": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8492": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8494": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "ADD",
      "path": "2"
    },
    "8495": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8496": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8497": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8499": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "ADD",
      "path": "2"
    },
    "8500": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8501": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8502": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SUB",
      "path": "2"
    },
    "8503": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8504": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8505": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "8507": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8508": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8509": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8511": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "ADD",
      "path": "2"
    },
    "8512": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8513": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CE7"
    },
    "8516": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "8518": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8519": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "8520": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8522": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "ADD",
      "path": "2"
    },
    "8523": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8524": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "POP",
      "path": "2"
    },
    "8525": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "POP",
      "path": "2"
    },
    "8526": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8528": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8529": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8530": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8531": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SUB",
      "path": "2"
    },
    "8532": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8533": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8534": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8541": {
      "op": "SHL"
    },
    "8542": {
      "op": "SUB"
    },
    "8543": {
      "fn": "ERC20._transfer",
      "offset": [
        7216,
        7239
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 87
    },
    "8544": {
      "branch": 264,
      "fn": "ERC20._transfer",
      "offset": [
        7216,
        7239
      ],
      "op": "AND",
      "path": "2"
    },
    "8545": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219B"
    },
    "8548": {
      "branch": 264,
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8549": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8551": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8558": {
      "op": "SHL"
    },
    "8559": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8560": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8561": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8563": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "ADD",
      "path": "2"
    },
    "8564": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8565": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8566": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8568": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "ADD",
      "path": "2"
    },
    "8569": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8570": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8571": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SUB",
      "path": "2"
    },
    "8572": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8573": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8574": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "8576": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8577": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8578": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8580": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "ADD",
      "path": "2"
    },
    "8581": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8582": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BCA"
    },
    "8585": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "8587": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8588": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "8589": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8591": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "ADD",
      "path": "2"
    },
    "8592": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8593": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "POP",
      "path": "2"
    },
    "8594": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "POP",
      "path": "2"
    },
    "8595": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8597": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8598": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8599": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8600": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SUB",
      "path": "2"
    },
    "8601": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8602": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8603": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8604": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7337
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 88,
      "value": "0x21A6"
    },
    "8607": {
      "fn": "ERC20._transfer",
      "offset": [
        7311,
        7317
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8608": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7328
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8609": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7336
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8610": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7310
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E2"
    },
    "8613": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7290,
        7337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8614": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8615": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 89,
      "value": "0x21E3"
    },
    "8618": {
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7396
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8619": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8621": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8622": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8623": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8625": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "ADD",
      "path": "2"
    },
    "8626": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8628": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8629": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8630": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x26"
    },
    "8632": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8633": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8634": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8636": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "ADD",
      "path": "2"
    },
    "8637": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C31"
    },
    "8640": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x26"
    },
    "8642": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8643": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "8644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8650": {
      "op": "SHL"
    },
    "8651": {
      "op": "SUB"
    },
    "8652": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8653": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "AND",
      "path": "2"
    },
    "8654": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8656": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8657": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8658": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8659": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8661": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8662": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8663": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8664": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8666": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8667": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8668": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8669": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8670": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8671": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7389
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x226C"
    },
    "8674": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7368,
        7439
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8675": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8682": {
      "op": "SHL"
    },
    "8683": {
      "op": "SUB"
    },
    "8684": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8685": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8686": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "AND",
      "path": "2"
    },
    "8687": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8689": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8690": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8691": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8692": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8694": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8695": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8696": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8697": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8699": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8700": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8701": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8702": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8703": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8704": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8705": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8706": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 90
    },
    "8707": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8708": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "AND",
      "path": "2"
    },
    "8709": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8710": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8711": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8712": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8713": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7504
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2212"
    },
    "8716": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8717": {
      "fn": "ERC20._transfer",
      "offset": [
        7497,
        7503
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8718": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260A"
    },
    "8721": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7472,
        7504
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8722": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7504
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8729": {
      "op": "SHL"
    },
    "8730": {
      "op": "SUB"
    },
    "8731": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8732": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8733": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "AND",
      "path": "2"
    },
    "8734": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8736": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8737": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8738": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8739": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8741": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8742": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8743": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8744": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8746": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8747": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8748": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8749": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8750": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8751": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8752": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8753": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8754": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 91
    },
    "8755": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8756": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8757": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8758": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8759": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8760": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8761": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8762": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8763": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8764": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8765": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "AND",
      "path": "2"
    },
    "8766": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8767": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8800": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8801": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8802": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8803": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8804": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SUB",
      "path": "2"
    },
    "8805": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "ADD",
      "path": "2"
    },
    "8806": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8807": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8808": {
      "fn": "ERC20._transfer",
      "offset": [
        7031,
        7561
      ],
      "op": "POP",
      "path": "2"
    },
    "8809": {
      "fn": "ERC20._transfer",
      "offset": [
        7031,
        7561
      ],
      "op": "POP",
      "path": "2"
    },
    "8810": {
      "fn": "ERC20._transfer",
      "offset": [
        7031,
        7561
      ],
      "op": "POP",
      "path": "2"
    },
    "8811": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7031,
        7561
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8812": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8813": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8815": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 92
    },
    "8816": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8817": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8818": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "1"
    },
    "8819": {
      "branch": 288,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8820": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22FB"
    },
    "8823": {
      "branch": 288,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8824": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8826": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8833": {
      "op": "SHL"
    },
    "8834": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8835": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8836": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8838": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "8839": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8840": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8841": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8843": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "8844": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8845": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8846": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "8847": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8848": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8849": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8850": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8851": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8852": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8853": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8854": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8855": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8857": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "8858": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8859": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8860": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8861": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8862": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8863": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8865": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "8866": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8867": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8868": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8869": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8870": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8872": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8873": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8874": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8875": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "LT",
      "path": "1"
    },
    "8876": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8877": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22C0"
    },
    "8880": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8881": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8882": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8883": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "8884": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8885": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8886": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8887": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "8888": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8889": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8891": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "8892": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22A8"
    },
    "8895": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8896": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8897": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8898": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8899": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8900": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8901": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8902": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8903": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8904": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8905": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "8906": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8907": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8909": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "1"
    },
    "8910": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8911": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8912": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22ED"
    },
    "8915": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8916": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8917": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8918": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "8919": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8920": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8921": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8923": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8924": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8926": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "8927": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8930": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "EXP",
      "path": "1"
    },
    "8931": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "8932": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "NOT",
      "path": "1"
    },
    "8933": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "1"
    },
    "8934": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8935": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8936": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8938": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "8939": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8940": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8941": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8942": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8943": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8944": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8945": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8946": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "8947": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8949": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8950": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8951": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8952": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "8953": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8954": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8955": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8956": {
      "op": "POP"
    },
    "8957": {
      "op": "POP"
    },
    "8958": {
      "op": "POP"
    },
    "8959": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 93
    },
    "8960": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "1"
    },
    "8961": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8962": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8963": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15282,
        15568
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8964": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15391,
        15408
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8966": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15424,
        15443
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8967": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15446,
        15502
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2311"
    },
    "8970": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15474,
        15478
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "8971": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15481,
        15490
      ],
      "op": "DUP6",
      "path": "23"
    },
    "8972": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15492,
        15501
      ],
      "op": "DUP6",
      "path": "23"
    },
    "8973": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15446,
        15465
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x320B"
    },
    "8976": {
      "fn": "AlphaVault._positionLiquidity",
      "jump": "i",
      "offset": [
        15446,
        15502
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8977": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15446,
        15502
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8978": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15538
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 94,
      "value": "0x7"
    },
    "8980": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15538
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8981": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8983": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8984": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8985": {
      "op": "PUSH4",
      "value": "0x514EA4BF"
    },
    "8990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8992": {
      "op": "SHL"
    },
    "8993": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8994": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8995": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "8997": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8998": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "ADD",
      "path": "23"
    },
    "8999": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9000": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9001": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9002": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9003": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9004": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15424,
        15502
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9005": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15424,
        15502
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9006": {
      "op": "POP"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9013": {
      "op": "SHL"
    },
    "9014": {
      "op": "SUB"
    },
    "9015": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15538
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9016": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15538
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9017": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15538
      ],
      "op": "AND",
      "path": "23"
    },
    "9018": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15538
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9019": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15548
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x514EA4BF"
    },
    "9024": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15548
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9025": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "9027": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9028": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9029": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "ADD",
      "path": "23"
    },
    "9030": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9031": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "9033": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9034": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9035": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9036": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9037": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9038": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9039": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SUB",
      "path": "23"
    },
    "9040": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "ADD",
      "path": "23"
    },
    "9041": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9042": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15538
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9043": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9044": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "9045": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9046": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9047": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9048": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2360"
    },
    "9051": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9052": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9054": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9055": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "REVERT",
      "path": "23"
    },
    "9056": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9057": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "POP",
      "path": "23"
    },
    "9058": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "GAS",
      "path": "23"
    },
    "9059": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "9060": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9061": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9062": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9063": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2374"
    },
    "9066": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9067": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "9068": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9070": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9071": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "9072": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "9073": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9075": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "REVERT",
      "path": "23"
    },
    "9076": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9077": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "POP",
      "path": "23"
    },
    "9078": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "POP",
      "path": "23"
    },
    "9079": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "POP",
      "path": "23"
    },
    "9080": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "POP",
      "path": "23"
    },
    "9081": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9083": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9084": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "9085": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "9087": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9088": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "LT",
      "path": "23"
    },
    "9089": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9090": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x238A"
    },
    "9093": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9094": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9096": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9097": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "REVERT",
      "path": "23"
    },
    "9098": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9099": {
      "op": "POP"
    },
    "9100": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9101": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15534,
        15561
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9102": {
      "fn": "AlphaVault._positionLiquidity",
      "offset": [
        15282,
        15568
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9103": {
      "op": "POP"
    },
    "9104": {
      "op": "POP"
    },
    "9105": {
      "op": "POP"
    },
    "9106": {
      "op": "POP"
    },
    "9107": {
      "fn": "AlphaVault._positionLiquidity",
      "jump": "o",
      "offset": [
        15282,
        15568
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9108": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5395,
        6708
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9109": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5534,
        5548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9111": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5562,
        5577
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9112": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5591,
        5606
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9114": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5631,
        5650
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9115": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5653,
        5666
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23A2"
    },
    "9118": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5653,
        5664
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9D7"
    },
    "9121": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        5653,
        5666
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9122": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5653,
        5666
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9123": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5631,
        5666
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9124": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5631,
        5666
      ],
      "op": "POP",
      "path": "23"
    },
    "9125": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5677,
        5691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9127": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5693,
        5707
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9128": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5711,
        5728
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23AF"
    },
    "9131": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5711,
        5726
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x199F"
    },
    "9134": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        5711,
        5728
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9135": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5711,
        5728
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9136": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5676,
        5728
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9137": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5676,
        5728
      ],
      "op": "POP",
      "path": "23"
    },
    "9138": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5676,
        5728
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9139": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5676,
        5728
      ],
      "op": "POP",
      "path": "23"
    },
    "9140": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5810
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 95
    },
    "9141": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5814,
        5815
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9143": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5815
      ],
      "op": "EQ",
      "path": "23"
    },
    "9144": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5829
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9145": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5829
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23C2"
    },
    "9148": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5829
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9149": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5829
      ],
      "op": "POP",
      "path": "23"
    },
    "9150": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5828,
        5829
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9152": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5819,
        5825
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9153": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5819,
        5829
      ],
      "op": "GT",
      "path": "23"
    },
    "9154": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5829
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9155": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5843
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9156": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5843
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23CD"
    },
    "9159": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5843
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9160": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5843
      ],
      "op": "POP",
      "path": "23"
    },
    "9161": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5842,
        5843
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9163": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5833,
        5839
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9164": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5833,
        5843
      ],
      "op": "GT",
      "path": "23"
    },
    "9165": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5799,
        5843
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9166": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5792,
        5844
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23D3"
    },
    "9169": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5792,
        5844
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9170": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5792,
        5844
      ],
      "op": "INVALID",
      "path": "23"
    },
    "9171": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5792,
        5844
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9172": {
      "branch": 242,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5859,
        5875
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9173": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5855,
        6702
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23EF"
    },
    "9176": {
      "branch": 242,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5855,
        6702
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9177": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5964,
        5978
      ],
      "op": "DUP8",
      "path": "23",
      "statement": 96
    },
    "9178": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5954,
        5978
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9179": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5954,
        5978
      ],
      "op": "POP",
      "path": "23"
    },
    "9180": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6002,
        6016
      ],
      "op": "DUP7",
      "path": "23",
      "statement": 97
    },
    "9181": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5992,
        6016
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9182": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5992,
        6016
      ],
      "op": "POP",
      "path": "23"
    },
    "9183": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6039,
        6065
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 98,
      "value": "0x23E8"
    },
    "9186": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6048,
        6055
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9187": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6057,
        6064
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9188": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6039,
        6047
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3261"
    },
    "9191": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6039,
        6065
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9192": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6039,
        6065
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9193": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6030,
        6065
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "9194": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6030,
        6065
      ],
      "op": "POP",
      "path": "23"
    },
    "9195": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5855,
        6702
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24B6"
    },
    "9198": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5855,
        6702
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9199": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5855,
        6702
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9200": {
      "branch": 243,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6086,
        6097
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9201": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6082,
        6702
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2405"
    },
    "9204": {
      "branch": 243,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6082,
        6702
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9205": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6123,
        6137
      ],
      "op": "DUP7",
      "path": "23",
      "statement": 99
    },
    "9206": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6123,
        6137
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9207": {
      "op": "POP"
    },
    "9208": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6160,
        6196
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 100,
      "value": "0x23E8"
    },
    "9211": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6189,
        6195
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9212": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6160,
        6184
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "9215": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6123,
        6137
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9216": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6172,
        6183
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9217": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6160,
        6171
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F9E"
    },
    "9220": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6160,
        6184
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9221": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6082,
        6702
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9222": {
      "branch": 244,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6217,
        6228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9223": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6213,
        6702
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x241B"
    },
    "9226": {
      "branch": 244,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6213,
        6702
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9227": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6254,
        6268
      ],
      "op": "DUP8",
      "path": "23",
      "statement": 101
    },
    "9228": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6254,
        6268
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9229": {
      "op": "POP"
    },
    "9230": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6291,
        6327
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 102,
      "value": "0x23E8"
    },
    "9233": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6320,
        6326
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9234": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6291,
        6315
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "9237": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6254,
        6268
      ],
      "op": "DUP8",
      "path": "23"
    },
    "9238": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6303,
        6314
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9239": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6291,
        6302
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F9E"
    },
    "9242": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6291,
        6315
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9243": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6213,
        6702
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9244": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6358,
        6371
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9246": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6374,
        6438
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2439"
    },
    "9249": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6383,
        6409
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x242A"
    },
    "9252": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6383,
        6397
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9253": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6402,
        6408
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9254": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6383,
        6401
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F9E"
    },
    "9257": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6383,
        6409
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9258": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6383,
        6409
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9259": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6411,
        6437
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2434"
    },
    "9262": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6411,
        6425
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9263": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6430,
        6436
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9264": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6411,
        6429
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F9E"
    },
    "9267": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6411,
        6437
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9268": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6411,
        6437
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9269": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6374,
        6382
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3278"
    },
    "9272": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6374,
        6438
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9273": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6374,
        6438
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9274": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6358,
        6438
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9275": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6358,
        6438
      ],
      "op": "POP",
      "path": "23"
    },
    "9276": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6468,
        6469
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 103,
      "value": "0x0"
    },
    "9278": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6460,
        6465
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9279": {
      "branch": 245,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6460,
        6469
      ],
      "op": "GT",
      "path": "23"
    },
    "9280": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2478"
    },
    "9283": {
      "branch": 245,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9284": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9286": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9287": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9294": {
      "op": "SHL"
    },
    "9295": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9296": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9297": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9299": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "9301": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9302": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "ADD",
      "path": "23"
    },
    "9303": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9304": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "9306": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "9308": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9309": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "ADD",
      "path": "23"
    },
    "9310": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9311": {
      "op": "PUSH5",
      "value": "0x63726F7373"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9319": {
      "op": "SHL"
    },
    "9320": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "9322": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9323": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "ADD",
      "path": "23"
    },
    "9324": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9325": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9326": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9327": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9328": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9329": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9330": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "SUB",
      "path": "23"
    },
    "9331": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "9333": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "ADD",
      "path": "23"
    },
    "9334": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9335": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "REVERT",
      "path": "23"
    },
    "9336": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6452,
        6479
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9337": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6536,
        6567
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 104,
      "value": "0x248B"
    },
    "9340": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6565,
        6566
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "9342": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6536,
        6560
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A08"
    },
    "9345": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6553,
        6559
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9346": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6536,
        6548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "9349": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6536,
        6541
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9350": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6565,
        6566
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9351": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6536,
        6545
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F72"
    },
    "9354": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6536,
        6548
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9355": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6536,
        6567
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9356": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6526,
        6567
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "9357": {
      "op": "POP"
    },
    "9358": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6591,
        6622
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 105,
      "value": "0x24A0"
    },
    "9361": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6620,
        6621
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "9363": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6591,
        6615
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A08"
    },
    "9366": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6608,
        6614
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9367": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6591,
        6603
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "9370": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6591,
        6596
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9371": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6620,
        6621
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9372": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6591,
        6600
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F72"
    },
    "9375": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6591,
        6603
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9376": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6591,
        6622
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9377": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6581,
        6622
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9378": {
      "op": "POP"
    },
    "9379": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6645,
        6691
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 106,
      "value": "0x24B2"
    },
    "9382": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6684,
        6690
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9383": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6645,
        6679
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "9386": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6672,
        6678
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9387": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6645,
        6679
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9388": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6645,
        6650
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9389": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6655,
        6666
      ],
      "op": "DUP10",
      "path": "23"
    },
    "9390": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6645,
        6654
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F9E"
    },
    "9393": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6645,
        6667
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9394": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6645,
        6691
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9395": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6636,
        6691
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "9396": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6636,
        6691
      ],
      "op": "POP",
      "path": "23"
    },
    "9397": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6213,
        6702
      ],
      "op": "POP",
      "path": "23"
    },
    "9398": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6213,
        6702
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9399": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5395,
        6708
      ],
      "op": "POP",
      "path": "23"
    },
    "9400": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5395,
        6708
      ],
      "op": "POP",
      "path": "23"
    },
    "9401": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5395,
        6708
      ],
      "op": "POP",
      "path": "23"
    },
    "9402": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5395,
        6708
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9403": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5395,
        6708
      ],
      "op": "POP",
      "path": "23"
    },
    "9404": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5395,
        6708
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9405": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5395,
        6708
      ],
      "op": "POP",
      "path": "23"
    },
    "9406": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5395,
        6708
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9407": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "o",
      "offset": [
        5395,
        6708
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9408": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9409": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 107,
      "value": "0x40"
    },
    "9411": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9412": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9419": {
      "op": "SHL"
    },
    "9420": {
      "op": "SUB"
    },
    "9421": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9422": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP7",
      "path": "4"
    },
    "9423": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "9424": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "9426": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9427": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "9428": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9429": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9430": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "9431": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "9433": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9434": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "9435": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9436": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "9438": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9439": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9440": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "9441": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9442": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9443": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9444": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9445": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9446": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9447": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9448": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SUB",
      "path": "4"
    },
    "9449": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9450": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9451": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "9452": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9453": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9454": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x84"
    },
    "9456": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9457": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9458": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "9459": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9460": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9461": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9462": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9464": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9465": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "9466": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9467": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9472": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9474": {
      "op": "SHL"
    },
    "9475": {
      "op": "SUB"
    },
    "9476": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "9477": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "9482": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9484": {
      "op": "SHL"
    },
    "9485": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "OR",
      "path": "4"
    },
    "9486": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9487": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9488": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E0F"
    },
    "9491": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9492": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "DUP6",
      "path": "4"
    },
    "9493": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9494": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1004
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x315A"
    },
    "9497": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        985,
        1081
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9498": {
      "fn": "ERC20._mint",
      "offset": [
        7832,
        8202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9505": {
      "op": "SHL"
    },
    "9506": {
      "op": "SUB"
    },
    "9507": {
      "fn": "ERC20._mint",
      "offset": [
        7915,
        7936
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 108
    },
    "9508": {
      "branch": 265,
      "fn": "ERC20._mint",
      "offset": [
        7915,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "9509": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2575"
    },
    "9512": {
      "branch": 265,
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9513": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9515": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9516": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9517": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9523": {
      "op": "SHL"
    },
    "9524": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9525": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9526": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9528": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9530": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9531": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "ADD",
      "path": "2"
    },
    "9532": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9533": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9535": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "9537": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9538": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "ADD",
      "path": "2"
    },
    "9539": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9540": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "9573": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "9575": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9576": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "ADD",
      "path": "2"
    },
    "9577": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9578": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9579": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9580": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9581": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9582": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9583": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SUB",
      "path": "2"
    },
    "9584": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "9586": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "ADD",
      "path": "2"
    },
    "9587": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9588": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9589": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9590": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        8032
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 109,
      "value": "0x2581"
    },
    "9593": {
      "fn": "ERC20._mint",
      "offset": [
        8012,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9595": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8023
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9596": {
      "fn": "ERC20._mint",
      "offset": [
        8025,
        8031
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9597": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        8003
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E2"
    },
    "9600": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        7983,
        8032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9601": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        8032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9602": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8070
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 110,
      "value": "0x2"
    },
    "9604": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8070
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9605": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x258E"
    },
    "9608": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9609": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8081
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9610": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8074
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260A"
    },
    "9613": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8058,
        8082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9614": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9615": {
      "fn": "ERC20._mint",
      "offset": [
        8043,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9617": {
      "fn": "ERC20._mint",
      "offset": [
        8043,
        8082
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9624": {
      "op": "SHL"
    },
    "9625": {
      "op": "SUB"
    },
    "9626": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 111
    },
    "9627": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "AND",
      "path": "2"
    },
    "9628": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9630": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9631": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9632": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9633": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9635": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9636": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9637": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9638": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9640": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9641": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9642": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9643": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25B4"
    },
    "9646": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9647": {
      "fn": "ERC20._mint",
      "offset": [
        8136,
        8142
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9648": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260A"
    },
    "9651": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8113,
        8143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9652": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9659": {
      "op": "SHL"
    },
    "9660": {
      "op": "SUB"
    },
    "9661": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9662": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "AND",
      "path": "2"
    },
    "9663": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9665": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9666": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9667": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9668": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9670": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9671": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9672": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9673": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9675": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9676": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9677": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9678": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9679": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9680": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9681": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9682": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 112
    },
    "9683": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9684": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9685": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9686": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9687": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9688": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9689": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9690": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9691": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8101
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9692": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8101
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9693": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9726": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9727": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9728": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9729": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SUB",
      "path": "2"
    },
    "9730": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9731": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9732": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "ADD",
      "path": "2"
    },
    "9733": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9734": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "LOG3",
      "path": "2"
    },
    "9735": {
      "fn": "ERC20._mint",
      "offset": [
        7832,
        8202
      ],
      "op": "POP",
      "path": "2"
    },
    "9736": {
      "fn": "ERC20._mint",
      "offset": [
        7832,
        8202
      ],
      "op": "POP",
      "path": "2"
    },
    "9737": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        7832,
        8202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9738": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9739": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9741": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9742": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9743": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "1"
    },
    "9744": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 113
    },
    "9745": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9746": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "1"
    },
    "9747": {
      "branch": 289,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9748": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAC5"
    },
    "9751": {
      "branch": 289,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9752": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9754": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9755": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9756": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9762": {
      "op": "SHL"
    },
    "9763": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9764": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9765": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9767": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9769": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9770": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "9771": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9772": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "9774": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "9776": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9777": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "9778": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9779": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "9812": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "9814": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9815": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "9816": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9817": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9818": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9819": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9820": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9821": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9822": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "1"
    },
    "9823": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "9825": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "9826": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9827": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9828": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        11945,
        12419
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9829": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12045,
        12056
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "9862": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12074,
        12095
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 114,
      "value": "0x2"
    },
    "9864": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12074,
        12095
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9865": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12074,
        12095
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9866": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12074,
        12095
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "9867": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12074,
        12095
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9868": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12074,
        12095
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9869": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12074,
        12095
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9870": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12074,
        12095
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "9871": {
      "branch": 246,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12074,
        12095
      ],
      "op": "SLT",
      "path": "23"
    },
    "9872": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26D8"
    },
    "9875": {
      "branch": 246,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9876": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9878": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9879": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9886": {
      "op": "SHL"
    },
    "9887": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9888": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9889": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9891": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "9893": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9894": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "ADD",
      "path": "23"
    },
    "9895": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9896": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x15"
    },
    "9898": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "9900": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9901": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "ADD",
      "path": "23"
    },
    "9902": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9903": {
      "op": "PUSH21",
      "value": "0x3A34B1B5A637BBB2B9101E103A34B1B5AAB83832B9"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "9927": {
      "op": "SHL"
    },
    "9928": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "9930": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9931": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "ADD",
      "path": "23"
    },
    "9932": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9933": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9934": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9935": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9936": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9937": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9938": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "SUB",
      "path": "23"
    },
    "9939": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "9941": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "ADD",
      "path": "23"
    },
    "9942": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9943": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "REVERT",
      "path": "23"
    },
    "9944": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12066,
        12121
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9945": {
      "op": "PUSH3",
      "value": "0xD89E7"
    },
    "9949": {
      "op": "NOT"
    },
    "9950": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12139,
        12169
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 115,
      "value": "0x2"
    },
    "9952": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12139,
        12169
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9953": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12139,
        12169
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9954": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12139,
        12169
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "9955": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12139,
        12169
      ],
      "op": "SLT",
      "path": "23"
    },
    "9956": {
      "branch": 247,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12139,
        12169
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9957": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2729"
    },
    "9960": {
      "branch": 247,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9961": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9963": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9964": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9971": {
      "op": "SHL"
    },
    "9972": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9973": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9974": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9976": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "9978": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9979": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "ADD",
      "path": "23"
    },
    "9980": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9981": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x11"
    },
    "9983": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "9985": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9986": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "ADD",
      "path": "23"
    },
    "9987": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9988": {
      "op": "PUSH17",
      "value": "0x7469636B4C6F77657220746F6F206C6F77"
    },
    "10006": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "10008": {
      "op": "SHL"
    },
    "10009": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10011": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10012": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "ADD",
      "path": "23"
    },
    "10013": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10014": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10015": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10016": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10017": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10018": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10019": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "SUB",
      "path": "23"
    },
    "10020": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10022": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "ADD",
      "path": "23"
    },
    "10023": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10024": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10025": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12131,
        12191
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10026": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0xD89E8"
    },
    "10030": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12209,
        12239
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 116,
      "value": "0x2"
    },
    "10032": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12209,
        12239
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10033": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12209,
        12239
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10034": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12209,
        12239
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10035": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12209,
        12239
      ],
      "op": "SGT",
      "path": "23"
    },
    "10036": {
      "branch": 248,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12209,
        12239
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10037": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x277A"
    },
    "10040": {
      "branch": 248,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10041": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10043": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10044": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10051": {
      "op": "SHL"
    },
    "10052": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10053": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10054": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10056": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10058": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10059": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "ADD",
      "path": "23"
    },
    "10060": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10061": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x12"
    },
    "10063": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10065": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10066": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "ADD",
      "path": "23"
    },
    "10067": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10068": {
      "op": "PUSH18",
      "value": "0xE8D2C6D6AAE0E0CAE440E8DEDE40D0D2CED"
    },
    "10087": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "10089": {
      "op": "SHL"
    },
    "10090": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10092": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10093": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "ADD",
      "path": "23"
    },
    "10094": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10095": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10096": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10097": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10098": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10099": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10100": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "SUB",
      "path": "23"
    },
    "10101": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10103": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "ADD",
      "path": "23"
    },
    "10104": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10105": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10106": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12201,
        12262
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10107": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12292,
        12304
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 117
    },
    "10108": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10110": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10111": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12289
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10112": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10114": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10115": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10116": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2789"
    },
    "10119": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10120": {
      "dev": "Modulus by zero",
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "INVALID",
      "path": "23"
    },
    "10121": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10122": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12304
      ],
      "op": "SMOD",
      "path": "23"
    },
    "10123": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12309
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10125": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12309
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10126": {
      "branch": 249,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12280,
        12309
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10127": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27DF"
    },
    "10130": {
      "branch": 249,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10131": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10133": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10134": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10141": {
      "op": "SHL"
    },
    "10142": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10143": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10144": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10146": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10148": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10149": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "ADD",
      "path": "23"
    },
    "10150": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10151": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x17"
    },
    "10153": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10155": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10156": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "ADD",
      "path": "23"
    },
    "10157": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10158": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x7469636B4C6F7765722025207469636B53706163696E67000000000000000000"
    },
    "10191": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10193": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10194": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "ADD",
      "path": "23"
    },
    "10195": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10196": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10197": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10198": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10199": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10200": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10201": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "SUB",
      "path": "23"
    },
    "10202": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10204": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "ADD",
      "path": "23"
    },
    "10205": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10206": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10207": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12272,
        12337
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10208": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12367,
        12379
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 118
    },
    "10209": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10211": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10212": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12364
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10213": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10215": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10216": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10217": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27EE"
    },
    "10220": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10221": {
      "dev": "Modulus by zero",
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "INVALID",
      "path": "23"
    },
    "10222": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10223": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12379
      ],
      "op": "SMOD",
      "path": "23"
    },
    "10224": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12384
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10226": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12384
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10227": {
      "branch": 250,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12355,
        12384
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10228": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8E2"
    },
    "10231": {
      "branch": 250,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10232": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10234": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10235": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10236": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10242": {
      "op": "SHL"
    },
    "10243": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10244": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10245": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10247": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10249": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10250": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "ADD",
      "path": "23"
    },
    "10251": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10252": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x17"
    },
    "10254": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10256": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10257": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "ADD",
      "path": "23"
    },
    "10258": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10259": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x7469636B55707065722025207469636B53706163696E67000000000000000000"
    },
    "10292": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10294": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10295": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "ADD",
      "path": "23"
    },
    "10296": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10297": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10298": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10299": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10300": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10301": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10302": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "SUB",
      "path": "23"
    },
    "10303": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10305": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "ADD",
      "path": "23"
    },
    "10306": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10307": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12347,
        12412
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10308": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10309": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12661,
        12674
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10311": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12688,
        12701
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10312": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12715,
        12732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10314": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12735,
        12775
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2853"
    },
    "10317": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12754,
        12763
      ],
      "op": "DUP6",
      "path": "23"
    },
    "10318": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12765,
        12774
      ],
      "op": "DUP6",
      "path": "23"
    },
    "10319": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12735,
        12753
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2303"
    },
    "10322": {
      "fn": "AlphaVault._burnAllLiquidity",
      "jump": "i",
      "offset": [
        12735,
        12775
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10323": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12735,
        12775
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10324": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12715,
        12775
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10325": {
      "op": "POP"
    },
    "10326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10332": {
      "op": "SHL"
    },
    "10333": {
      "op": "SUB"
    },
    "10334": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12789,
        12802
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10335": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12789,
        12802
      ],
      "op": "AND",
      "path": "23"
    },
    "10336": {
      "branch": 251,
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12789,
        12802
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10337": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12785,
        12888
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2902"
    },
    "10340": {
      "branch": 251,
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12785,
        12888
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10341": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12839
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 119,
      "value": "0x7"
    },
    "10343": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12839
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "10344": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10346": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10347": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10348": {
      "op": "PUSH4",
      "value": "0xA34123A7"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10355": {
      "op": "SHL"
    },
    "10356": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10357": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10358": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10360": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP9",
      "path": "23"
    },
    "10361": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10362": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10363": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10365": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10366": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ADD",
      "path": "23"
    },
    "10367": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10368": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP8",
      "path": "23"
    },
    "10369": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10370": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10371": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10373": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10374": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ADD",
      "path": "23"
    },
    "10375": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10380": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10382": {
      "op": "SHL"
    },
    "10383": {
      "op": "SUB"
    },
    "10384": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10385": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "AND",
      "path": "23"
    },
    "10386": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10388": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10389": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ADD",
      "path": "23"
    },
    "10390": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10391": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10392": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10399": {
      "op": "SHL"
    },
    "10400": {
      "op": "SUB"
    },
    "10401": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12839
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10402": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12839
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "10403": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12839
      ],
      "op": "AND",
      "path": "23"
    },
    "10404": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12839
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10405": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12844
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA34123A7"
    },
    "10410": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12844
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10411": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10413": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10414": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10415": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ADD",
      "path": "23"
    },
    "10416": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "10417": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10418": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10419": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10420": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10421": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10422": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SUB",
      "path": "23"
    },
    "10423": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ADD",
      "path": "23"
    },
    "10424": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10425": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12839
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10427": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12839
      ],
      "op": "DUP8",
      "path": "23"
    },
    "10428": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10429": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "10430": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10431": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10432": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10433": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x28C9"
    },
    "10436": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10437": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10439": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10440": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10441": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10442": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "POP",
      "path": "23"
    },
    "10443": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "GAS",
      "path": "23"
    },
    "10444": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "CALL",
      "path": "23"
    },
    "10445": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10446": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10447": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10448": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x28DD"
    },
    "10451": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10452": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10453": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10455": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10456": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "10457": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10458": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10460": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10461": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10462": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "POP",
      "path": "23"
    },
    "10463": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "POP",
      "path": "23"
    },
    "10464": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "POP",
      "path": "23"
    },
    "10465": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "POP",
      "path": "23"
    },
    "10466": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10468": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10469": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10470": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10472": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10473": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "LT",
      "path": "23"
    },
    "10474": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10475": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x28F3"
    },
    "10478": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10479": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10481": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10482": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10483": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10484": {
      "op": "POP"
    },
    "10485": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10486": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10487": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10489": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10490": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10491": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "ADD",
      "path": "23"
    },
    "10492": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10493": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10494": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "10495": {
      "op": "POP"
    },
    "10496": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12835,
        12877
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10497": {
      "op": "POP"
    },
    "10498": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12785,
        12888
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10499": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13010
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "10501": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13010
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "10502": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10504": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10505": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10506": {
      "op": "PUSH4",
      "value": "0x9E3D67B"
    },
    "10511": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "10513": {
      "op": "SHL"
    },
    "10514": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10515": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10516": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13044,
        13048
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "10517": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10519": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10520": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ADD",
      "path": "23"
    },
    "10521": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10522": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10524": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP9",
      "path": "23"
    },
    "10525": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10526": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10527": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10529": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10530": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ADD",
      "path": "23"
    },
    "10531": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10532": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP8",
      "path": "23"
    },
    "10533": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10534": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10535": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10537": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10538": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ADD",
      "path": "23"
    },
    "10539": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10544": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10546": {
      "op": "SHL"
    },
    "10547": {
      "op": "SUB"
    },
    "10548": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10550": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10551": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ADD",
      "path": "23"
    },
    "10552": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10553": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10554": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10555": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x84"
    },
    "10557": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10558": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ADD",
      "path": "23"
    },
    "10559": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10560": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10561": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10562": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12956,
        12972
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10564": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12956,
        12972
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "10565": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12956,
        12972
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10566": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12956,
        12972
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "10567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10573": {
      "op": "SHL"
    },
    "10574": {
      "op": "SUB"
    },
    "10575": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13010
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10576": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13010
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10577": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13010
      ],
      "op": "AND",
      "path": "23"
    },
    "10578": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13010
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10579": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13018
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x4F1EB3D8"
    },
    "10584": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13018
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10585": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA4"
    },
    "10587": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10588": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10589": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ADD",
      "path": "23"
    },
    "10590": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "10591": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10592": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10593": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10594": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SUB",
      "path": "23"
    },
    "10595": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ADD",
      "path": "23"
    },
    "10596": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10597": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12956,
        12972
      ],
      "op": "DUP8",
      "path": "23"
    },
    "10598": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13010
      ],
      "op": "DUP8",
      "path": "23"
    },
    "10599": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10600": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "10601": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10602": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10603": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10604": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2974"
    },
    "10607": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10608": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10610": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10611": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10612": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10613": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "POP",
      "path": "23"
    },
    "10614": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "GAS",
      "path": "23"
    },
    "10615": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "CALL",
      "path": "23"
    },
    "10616": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10617": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10618": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10619": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2988"
    },
    "10622": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10623": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10624": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10626": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10627": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "10628": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10629": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10631": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10632": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10633": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "POP",
      "path": "23"
    },
    "10634": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "POP",
      "path": "23"
    },
    "10635": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "POP",
      "path": "23"
    },
    "10636": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "POP",
      "path": "23"
    },
    "10637": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10639": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10640": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10641": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10643": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10644": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "LT",
      "path": "23"
    },
    "10645": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10646": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x299E"
    },
    "10649": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10650": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10652": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10653": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10654": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10655": {
      "op": "POP"
    },
    "10656": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10657": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10658": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10660": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10661": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10662": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "ADD",
      "path": "23"
    },
    "10663": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13006,
        13187
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10670": {
      "op": "SHL"
    },
    "10671": {
      "op": "SUB"
    },
    "10672": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12955,
        13187
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10673": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12955,
        13187
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10674": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12955,
        13187
      ],
      "op": "AND",
      "path": "23"
    },
    "10675": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12955,
        13187
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "10676": {
      "op": "POP"
    },
    "10677": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12955,
        13187
      ],
      "op": "AND",
      "path": "23"
    },
    "10678": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12955,
        13187
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10679": {
      "op": "POP"
    },
    "10680": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13198,
        13219
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10682": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13222,
        13241
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C3"
    },
    "10685": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12955,
        13187
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10686": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13235,
        13240
      ],
      "op": "DUP8",
      "path": "23"
    },
    "10687": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13222,
        13234
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F72"
    },
    "10690": {
      "fn": "AlphaVault._burnAllLiquidity",
      "jump": "i",
      "offset": [
        13222,
        13241
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10691": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13222,
        13241
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10692": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13198,
        13241
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10693": {
      "op": "POP"
    },
    "10694": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13251,
        13272
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10696": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13275,
        13294
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29D1"
    },
    "10699": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13275,
        13283
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10700": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13288,
        13293
      ],
      "op": "DUP8",
      "path": "23"
    },
    "10701": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13275,
        13287
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F72"
    },
    "10704": {
      "fn": "AlphaVault._burnAllLiquidity",
      "jump": "i",
      "offset": [
        13275,
        13294
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10705": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13275,
        13294
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10706": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13442,
        13453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "10708": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13442,
        13453
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "10709": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13251,
        13294
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10710": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13251,
        13294
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10711": {
      "op": "POP"
    },
    "10712": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13304,
        13327
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10714": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13304,
        13327
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10715": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13304,
        13327
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10716": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13304,
        13327
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10717": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13467,
        13483
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10718": {
      "branch": 252,
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13467,
        13483
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10719": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13463,
        13796
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A2A"
    },
    "10722": {
      "branch": 252,
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13463,
        13796
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10723": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13517,
        13557
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 120,
      "value": "0x29F3"
    },
    "10726": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13553,
        13556
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xF4240"
    },
    "10730": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13517,
        13548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "10733": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13517,
        13530
      ],
      "op": "DUP8",
      "path": "23"
    },
    "10734": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13535,
        13547
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10735": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13517,
        13534
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F9E"
    },
    "10738": {
      "fn": "AlphaVault._burnAllLiquidity",
      "jump": "i",
      "offset": [
        13517,
        13548
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10739": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13517,
        13557
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10740": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13499,
        13557
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10741": {
      "op": "POP"
    },
    "10742": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13589,
        13629
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 121,
      "value": "0x2A06"
    },
    "10745": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13625,
        13628
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xF4240"
    },
    "10749": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13589,
        13620
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "10752": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13589,
        13602
      ],
      "op": "DUP7",
      "path": "23"
    },
    "10753": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13607,
        13619
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10754": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13589,
        13606
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F9E"
    },
    "10757": {
      "fn": "AlphaVault._burnAllLiquidity",
      "jump": "i",
      "offset": [
        13589,
        13620
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10758": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13589,
        13629
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10759": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13666,
        13686
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 122,
      "value": "0xE"
    },
    "10761": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13666,
        13686
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "10762": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13571,
        13629
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10763": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13571,
        13629
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13666,
        13707
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A16"
    },
    "10768": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13666,
        13707
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10769": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13691,
        13706
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10770": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13666,
        13690
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x260A"
    },
    "10773": {
      "fn": "AlphaVault._burnAllLiquidity",
      "jump": "i",
      "offset": [
        13666,
        13707
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10774": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13666,
        13707
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10775": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13643,
        13663
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE"
    },
    "10777": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13643,
        13707
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "10778": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13744,
        13764
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 123,
      "value": "0xF"
    },
    "10780": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13744,
        13764
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "10781": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13744,
        13785
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A26"
    },
    "10784": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13744,
        13785
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10785": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13769,
        13784
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10786": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13744,
        13768
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x260A"
    },
    "10789": {
      "fn": "AlphaVault._burnAllLiquidity",
      "jump": "i",
      "offset": [
        13744,
        13785
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10790": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13744,
        13785
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10791": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13721,
        13741
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xF"
    },
    "10793": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13721,
        13785
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "10794": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13463,
        13796
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10795": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 124,
      "value": "0x40"
    },
    "10797": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10798": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10799": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP7",
      "path": "23"
    },
    "10800": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10801": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10802": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10804": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10805": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "ADD",
      "path": "23"
    },
    "10806": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP7",
      "path": "23"
    },
    "10807": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10808": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10809": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10810": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10811": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "ADD",
      "path": "23"
    },
    "10812": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP6",
      "path": "23"
    },
    "10813": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10814": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10815": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "10817": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10818": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "ADD",
      "path": "23"
    },
    "10819": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10820": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10821": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10822": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10823": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10824": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x1AC56D7E866E3F5EA9AA92AA11758EAD39A0A5F013F3FEFB0F47CB9D008EDD27"
    },
    "10857": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10858": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10859": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10860": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "SUB",
      "path": "23"
    },
    "10861": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "10863": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "ADD",
      "path": "23"
    },
    "10864": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10865": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        13810,
        13885
      ],
      "op": "LOG1",
      "path": "23"
    },
    "10866": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10867": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10868": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10869": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10870": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10871": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10872": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10873": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10874": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10875": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10876": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10877": {
      "fn": "AlphaVault._burnAllLiquidity",
      "offset": [
        12537,
        13892
      ],
      "op": "POP",
      "path": "23"
    },
    "10878": {
      "fn": "AlphaVault._burnAllLiquidity",
      "jump": "o",
      "offset": [
        12537,
        13892
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10879": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14894,
        15028
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10880": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14938,
        14945
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10882": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        15021
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 125,
      "value": "0x2B26"
    },
    "10885": {
      "fn": "AlphaVault._balance0",
      "offset": [
        15000,
        15020
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE"
    },
    "10887": {
      "fn": "AlphaVault._balance0",
      "offset": [
        15000,
        15020
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "10888": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14970
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10927": {
      "op": "SHL"
    },
    "10928": {
      "op": "SUB"
    },
    "10929": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14980
      ],
      "op": "AND",
      "path": "23"
    },
    "10930": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14980
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "10935": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14989,
        14993
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "10936": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10938": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10939": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10940": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "10945": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "AND",
      "path": "23"
    },
    "10946": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "10948": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "SHL",
      "path": "23"
    },
    "10949": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10950": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10951": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10953": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "ADD",
      "path": "23"
    },
    "10954": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10955": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10962": {
      "op": "SHL"
    },
    "10963": {
      "op": "SUB"
    },
    "10964": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "AND",
      "path": "23"
    },
    "10965": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10966": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10967": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10969": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "ADD",
      "path": "23"
    },
    "10970": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10971": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "POP",
      "path": "23"
    },
    "10972": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "POP",
      "path": "23"
    },
    "10973": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10975": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10977": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10978": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10979": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10980": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "SUB",
      "path": "23"
    },
    "10981": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10982": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP7",
      "path": "23"
    },
    "10983": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10984": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "10985": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10986": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10987": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10988": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AF4"
    },
    "10991": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10992": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10994": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10995": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10996": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10997": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "POP",
      "path": "23"
    },
    "10998": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "GAS",
      "path": "23"
    },
    "10999": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "11000": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11001": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11002": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11003": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B08"
    },
    "11006": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11007": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11008": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11010": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11011": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "11012": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11013": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11015": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11016": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11017": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "POP",
      "path": "23"
    },
    "11018": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "POP",
      "path": "23"
    },
    "11019": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "POP",
      "path": "23"
    },
    "11020": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "POP",
      "path": "23"
    },
    "11021": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11023": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11024": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11025": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11027": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11028": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "LT",
      "path": "23"
    },
    "11029": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11030": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B1E"
    },
    "11033": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11034": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11036": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11037": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11038": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11039": {
      "op": "POP"
    },
    "11040": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11041": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14995
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11042": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        14999
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F72"
    },
    "11045": {
      "fn": "AlphaVault._balance0",
      "jump": "i",
      "offset": [
        14964,
        15021
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11046": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14964,
        15021
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11047": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14957,
        15021
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11048": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14957,
        15021
      ],
      "op": "POP",
      "path": "23"
    },
    "11049": {
      "fn": "AlphaVault._balance0",
      "offset": [
        14894,
        15028
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11050": {
      "fn": "AlphaVault._balance0",
      "jump": "o",
      "offset": [
        14894,
        15028
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11051": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15088,
        15222
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11052": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15132,
        15139
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11054": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15215
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 126,
      "value": "0x2B26"
    },
    "11057": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15194,
        15214
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xF"
    },
    "11059": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15194,
        15214
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "11060": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15164
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "11093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11099": {
      "op": "SHL"
    },
    "11100": {
      "op": "SUB"
    },
    "11101": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15174
      ],
      "op": "AND",
      "path": "23"
    },
    "11102": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15174
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "11107": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15183,
        15187
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "11108": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11110": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11111": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11112": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "11117": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "AND",
      "path": "23"
    },
    "11118": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11120": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "SHL",
      "path": "23"
    },
    "11121": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11122": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11123": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11125": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "ADD",
      "path": "23"
    },
    "11126": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11127": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11134": {
      "op": "SHL"
    },
    "11135": {
      "op": "SUB"
    },
    "11136": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "AND",
      "path": "23"
    },
    "11137": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11138": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11139": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11141": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "ADD",
      "path": "23"
    },
    "11142": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11143": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "POP",
      "path": "23"
    },
    "11144": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "POP",
      "path": "23"
    },
    "11145": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11147": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11149": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11150": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11151": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11152": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "SUB",
      "path": "23"
    },
    "11153": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11154": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11155": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11156": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "11157": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11158": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11159": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11160": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AF4"
    },
    "11163": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11164": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11166": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11167": {
      "fn": "AlphaVault._balance1",
      "offset": [
        15158,
        15189
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11168": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        16819,
        17327
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11169": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        16978,
        16985
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11171": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        16998,
        17018
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11172": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "11174": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11176": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11177": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "11178": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11179": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "11182": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "EXP",
      "path": "23"
    },
    "11183": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11184": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "DIV",
      "path": "23"
    },
    "11185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11191": {
      "op": "SHL"
    },
    "11192": {
      "op": "SUB"
    },
    "11193": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17038
      ],
      "op": "AND",
      "path": "23"
    },
    "11194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11200": {
      "op": "SHL"
    },
    "11201": {
      "op": "SUB"
    },
    "11202": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17044
      ],
      "op": "AND",
      "path": "23"
    },
    "11203": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17044
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3850C7BD"
    },
    "11208": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11210": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11211": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11212": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "11217": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "AND",
      "path": "23"
    },
    "11218": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11220": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "SHL",
      "path": "23"
    },
    "11221": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11222": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11223": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11225": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "ADD",
      "path": "23"
    },
    "11226": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11228": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11230": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11231": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11232": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11233": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "SUB",
      "path": "23"
    },
    "11234": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11235": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11236": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11237": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "11238": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11239": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11240": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11241": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BF1"
    },
    "11244": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11245": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11247": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11248": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11249": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11250": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "POP",
      "path": "23"
    },
    "11251": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "GAS",
      "path": "23"
    },
    "11252": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "11253": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11254": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11255": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11256": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C05"
    },
    "11259": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11260": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11261": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11263": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11264": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "11265": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11266": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11268": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11269": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11270": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "POP",
      "path": "23"
    },
    "11271": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "POP",
      "path": "23"
    },
    "11272": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "POP",
      "path": "23"
    },
    "11273": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "POP",
      "path": "23"
    },
    "11274": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11276": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11277": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11278": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11280": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11281": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "LT",
      "path": "23"
    },
    "11282": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11283": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C1B"
    },
    "11286": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11287": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11289": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11290": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11291": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11292": {
      "op": "POP"
    },
    "11293": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11294": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11295": {
      "op": "POP"
    },
    "11296": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17075,
        17320
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 127,
      "value": "0x2C3C"
    },
    "11299": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11300": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17162,
        17200
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C2C"
    },
    "11303": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17190,
        17199
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11304": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17162,
        17189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3287"
    },
    "11307": {
      "fn": "AlphaVault._liquidityForAmounts",
      "jump": "i",
      "offset": [
        17162,
        17200
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11308": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17162,
        17200
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11309": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17218,
        17256
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C35"
    },
    "11312": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17246,
        17255
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11313": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17218,
        17245
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3287"
    },
    "11316": {
      "fn": "AlphaVault._liquidityForAmounts",
      "jump": "i",
      "offset": [
        17218,
        17256
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11317": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17218,
        17256
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11318": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17274,
        17281
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11319": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17299,
        17306
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11320": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17075,
        17114
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35B9"
    },
    "11323": {
      "fn": "AlphaVault._liquidityForAmounts",
      "jump": "i",
      "offset": [
        17075,
        17320
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11324": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17075,
        17320
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11325": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        17056,
        17320
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "11326": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        16819,
        17327
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "11327": {
      "op": "POP"
    },
    "11328": {
      "op": "POP"
    },
    "11329": {
      "op": "POP"
    },
    "11330": {
      "op": "POP"
    },
    "11331": {
      "op": "POP"
    },
    "11332": {
      "op": "POP"
    },
    "11333": {
      "fn": "AlphaVault._liquidityForAmounts",
      "jump": "o",
      "offset": [
        16819,
        17327
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11334": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        13962,
        14199
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11339": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11341": {
      "op": "SHL"
    },
    "11342": {
      "op": "SUB"
    },
    "11343": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14092,
        14105
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11344": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14092,
        14105
      ],
      "op": "AND",
      "path": "23"
    },
    "11345": {
      "branch": 253,
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14092,
        14105
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11346": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14088,
        14193
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8E2"
    },
    "11349": {
      "branch": 253,
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14088,
        14193
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11350": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14125
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 128,
      "value": "0x7"
    },
    "11352": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14125
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "11353": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11355": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11356": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11357": {
      "op": "PUSH4",
      "value": "0x3C8A7D8D"
    },
    "11362": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11364": {
      "op": "SHL"
    },
    "11365": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11366": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11367": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14139,
        14143
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "11368": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11370": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11371": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ADD",
      "path": "23"
    },
    "11372": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11373": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "11375": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11376": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11377": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11378": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "11380": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11381": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ADD",
      "path": "23"
    },
    "11382": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11383": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11384": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11385": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11386": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "11388": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11389": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ADD",
      "path": "23"
    },
    "11390": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11395": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11397": {
      "op": "SHL"
    },
    "11398": {
      "op": "SUB"
    },
    "11399": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11400": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "AND",
      "path": "23"
    },
    "11401": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "11403": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11404": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ADD",
      "path": "23"
    },
    "11405": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11406": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "11408": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x84"
    },
    "11410": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11411": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ADD",
      "path": "23"
    },
    "11412": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11413": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14125
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11415": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA4"
    },
    "11417": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11418": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ADD",
      "path": "23"
    },
    "11419": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11420": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11421": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11422": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11423": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11430": {
      "op": "SHL"
    },
    "11431": {
      "op": "SUB"
    },
    "11432": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14125
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11433": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14125
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "11434": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14125
      ],
      "op": "AND",
      "path": "23"
    },
    "11435": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14125
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11436": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14130
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3C8A7D8D"
    },
    "11441": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14130
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11442": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC4"
    },
    "11444": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11445": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11446": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ADD",
      "path": "23"
    },
    "11447": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "11448": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11449": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11450": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11451": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11452": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11453": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SUB",
      "path": "23"
    },
    "11454": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ADD",
      "path": "23"
    },
    "11455": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11456": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11457": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11458": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14125
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11459": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11460": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "11461": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11462": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11463": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11464": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1958"
    },
    "11467": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11468": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11470": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11471": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14121,
        14182
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11472": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11473": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15749,
        15764
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11475": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15766,
        15781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11476": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15797,
        15816
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11478": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15819,
        15875
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CE0"
    },
    "11481": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15847,
        15851
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "11482": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15854,
        15863
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11483": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15865,
        15874
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11484": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15819,
        15838
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x320B"
    },
    "11487": {
      "fn": "AlphaVault._positionAmounts",
      "jump": "i",
      "offset": [
        15819,
        15875
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11488": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15819,
        15875
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11489": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15797,
        15875
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11490": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15797,
        15875
      ],
      "op": "POP",
      "path": "23"
    },
    "11491": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15886,
        15903
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11493": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15909,
        15928
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11494": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15930,
        15949
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11496": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "11498": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11500": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11501": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "11502": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11503": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "11506": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "EXP",
      "path": "23"
    },
    "11507": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11508": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "DIV",
      "path": "23"
    },
    "11509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11515": {
      "op": "SHL"
    },
    "11516": {
      "op": "SUB"
    },
    "11517": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15969
      ],
      "op": "AND",
      "path": "23"
    },
    "11518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11524": {
      "op": "SHL"
    },
    "11525": {
      "op": "SUB"
    },
    "11526": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15979
      ],
      "op": "AND",
      "path": "23"
    },
    "11527": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15979
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x514EA4BF"
    },
    "11532": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15980,
        15991
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11533": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11535": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11536": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11537": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "11542": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "AND",
      "path": "23"
    },
    "11543": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11545": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SHL",
      "path": "23"
    },
    "11546": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11547": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11548": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11550": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "ADD",
      "path": "23"
    },
    "11551": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11552": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11553": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11554": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11555": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11557": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "ADD",
      "path": "23"
    },
    "11558": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11559": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "POP",
      "path": "23"
    },
    "11560": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "POP",
      "path": "23"
    },
    "11561": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "11563": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11565": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11566": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11567": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11568": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SUB",
      "path": "23"
    },
    "11569": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11570": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11571": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11572": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "11573": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11574": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11575": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11576": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D40"
    },
    "11579": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11580": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11582": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11583": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11584": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11585": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "POP",
      "path": "23"
    },
    "11586": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "GAS",
      "path": "23"
    },
    "11587": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "11588": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11589": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11590": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11591": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D54"
    },
    "11594": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11595": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11596": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11598": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11599": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "11600": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11601": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11603": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11604": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11605": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "POP",
      "path": "23"
    },
    "11606": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "POP",
      "path": "23"
    },
    "11607": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "POP",
      "path": "23"
    },
    "11608": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "POP",
      "path": "23"
    },
    "11609": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11611": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11612": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11613": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "11615": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11616": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "LT",
      "path": "23"
    },
    "11617": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11618": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D6A"
    },
    "11621": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11622": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11624": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11625": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11626": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11627": {
      "op": "POP"
    },
    "11628": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11629": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11630": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "11632": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11633": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "ADD",
      "path": "23"
    },
    "11634": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11635": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "11637": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11638": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11639": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "ADD",
      "path": "23"
    },
    "11640": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11641": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11642": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "11643": {
      "op": "POP"
    },
    "11644": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11645": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11646": {
      "op": "POP"
    },
    "11647": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11648": {
      "op": "POP"
    },
    "11649": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16024,
        16077
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 129,
      "value": "0x2D8B"
    },
    "11652": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16045,
        16054
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11653": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16056,
        16065
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11654": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15965,
        15992
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11655": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16024,
        16044
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x367D"
    },
    "11658": {
      "fn": "AlphaVault._positionAmounts",
      "jump": "i",
      "offset": [
        16024,
        16077
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11659": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16024,
        16077
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11660": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16003,
        16077
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11661": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16003,
        16077
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "11662": {
      "op": "POP"
    },
    "11663": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16003,
        16077
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "11664": {
      "op": "POP"
    },
    "11665": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16097,
        16130
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 130,
      "value": "0x2DA3"
    },
    "11668": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16003,
        16077
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11673": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11675": {
      "op": "SHL"
    },
    "11676": {
      "op": "SUB"
    },
    "11677": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16109,
        16129
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11678": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16109,
        16129
      ],
      "op": "AND",
      "path": "23"
    },
    "11679": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16097,
        16108
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x260A"
    },
    "11682": {
      "fn": "AlphaVault._positionAmounts",
      "jump": "i",
      "offset": [
        16097,
        16130
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11683": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16097,
        16130
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11684": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16087,
        16130
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "11685": {
      "op": "POP"
    },
    "11686": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16150,
        16183
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 131,
      "value": "0x2DB8"
    },
    "11689": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16150,
        16157
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11694": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11696": {
      "op": "SHL"
    },
    "11697": {
      "op": "SUB"
    },
    "11698": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16162,
        16182
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11699": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16162,
        16182
      ],
      "op": "AND",
      "path": "23"
    },
    "11700": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16150,
        16161
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x260A"
    },
    "11703": {
      "fn": "AlphaVault._positionAmounts",
      "jump": "i",
      "offset": [
        16150,
        16183
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11704": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16150,
        16183
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11705": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16140,
        16183
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "11706": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        16140,
        16183
      ],
      "op": "POP",
      "path": "23"
    },
    "11707": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "POP",
      "path": "23"
    },
    "11708": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "POP",
      "path": "23"
    },
    "11709": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "POP",
      "path": "23"
    },
    "11710": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "POP",
      "path": "23"
    },
    "11711": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11712": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "POP",
      "path": "23"
    },
    "11713": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11714": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11715": {
      "fn": "AlphaVault._positionAmounts",
      "offset": [
        15642,
        16190
      ],
      "op": "POP",
      "path": "23"
    },
    "11716": {
      "fn": "AlphaVault._positionAmounts",
      "jump": "o",
      "offset": [
        15642,
        16190
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11717": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11718": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9073,
        9088
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11720": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9090,
        9105
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11721": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9117,
        9133
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11723": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9136,
        9176
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DD4"
    },
    "11726": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9155,
        9164
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11727": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9166,
        9175
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11728": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9136,
        9154
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2303"
    },
    "11731": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9136,
        9176
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11732": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9136,
        9176
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11733": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9117,
        9176
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11734": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9117,
        9176
      ],
      "op": "POP",
      "path": "23"
    },
    "11735": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9186,
        9203
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11737": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9206,
        9254
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DF6"
    },
    "11740": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9240,
        9253
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DE3"
    },
    "11743": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9240,
        9251
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9D7"
    },
    "11746": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9240,
        9253
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11747": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9240,
        9253
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11748": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9206,
        9235
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BE1"
    },
    "11751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11755": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11757": {
      "op": "SHL"
    },
    "11758": {
      "op": "SUB"
    },
    "11759": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9206,
        9223
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11760": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9206,
        9223
      ],
      "op": "AND",
      "path": "23"
    },
    "11761": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9228,
        9234
      ],
      "op": "DUP10",
      "path": "23"
    },
    "11762": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9206,
        9227
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F9E"
    },
    "11765": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9206,
        9235
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11766": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9206,
        9254
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11767": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9186,
        9254
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11768": {
      "op": "POP"
    },
    "11769": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9269,
        9282
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11770": {
      "branch": 254,
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9269,
        9282
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11771": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9265,
        9682
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F93"
    },
    "11774": {
      "branch": 254,
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9265,
        9682
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11775": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9323
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 132,
      "value": "0x7"
    },
    "11777": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9323
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "11778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11784": {
      "op": "SHL"
    },
    "11785": {
      "op": "SUB"
    },
    "11786": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9323
      ],
      "op": "AND",
      "path": "23"
    },
    "11787": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9328
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA34123A7"
    },
    "11792": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9329,
        9338
      ],
      "op": "DUP10",
      "path": "23"
    },
    "11793": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9340,
        9349
      ],
      "op": "DUP10",
      "path": "23"
    },
    "11794": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9351,
        9372
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E1A"
    },
    "11797": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9362,
        9371
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11798": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9351,
        9361
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3727"
    },
    "11801": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9351,
        9372
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11802": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9351,
        9372
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11803": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11805": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11806": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11807": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "11812": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "AND",
      "path": "23"
    },
    "11813": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11815": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SHL",
      "path": "23"
    },
    "11816": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11817": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11818": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11820": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ADD",
      "path": "23"
    },
    "11821": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11822": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11823": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "11825": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11826": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11827": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11828": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11830": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ADD",
      "path": "23"
    },
    "11831": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11832": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "11834": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11835": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11836": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11837": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11839": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ADD",
      "path": "23"
    },
    "11840": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11845": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11847": {
      "op": "SHL"
    },
    "11848": {
      "op": "SUB"
    },
    "11849": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "AND",
      "path": "23"
    },
    "11850": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11851": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11852": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11854": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ADD",
      "path": "23"
    },
    "11855": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11856": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "POP",
      "path": "23"
    },
    "11857": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "POP",
      "path": "23"
    },
    "11858": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "POP",
      "path": "23"
    },
    "11859": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "POP",
      "path": "23"
    },
    "11860": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11862": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11863": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11864": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11865": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11866": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SUB",
      "path": "23"
    },
    "11867": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11868": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11870": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11871": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11872": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "11873": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11874": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11875": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11876": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E6C"
    },
    "11879": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11880": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11882": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11883": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11884": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11885": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "POP",
      "path": "23"
    },
    "11886": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "GAS",
      "path": "23"
    },
    "11887": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "CALL",
      "path": "23"
    },
    "11888": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11889": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11890": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11891": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E80"
    },
    "11894": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11895": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11896": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11898": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11899": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "11900": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11901": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11903": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11904": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11905": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "POP",
      "path": "23"
    },
    "11906": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "POP",
      "path": "23"
    },
    "11907": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "POP",
      "path": "23"
    },
    "11908": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "POP",
      "path": "23"
    },
    "11909": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11911": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11912": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11913": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11915": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11916": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "LT",
      "path": "23"
    },
    "11917": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11918": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E96"
    },
    "11921": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11922": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11924": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11925": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11926": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11927": {
      "op": "POP"
    },
    "11928": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11929": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11930": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11932": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11933": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11934": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "ADD",
      "path": "23"
    },
    "11935": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11936": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11937": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "11938": {
      "op": "POP"
    },
    "11939": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9319,
        9373
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11940": {
      "op": "POP"
    },
    "11941": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9392,
        9403
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11942": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9392,
        9403
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11943": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9392,
        9403
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11944": {
      "branch": 255,
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9392,
        9403
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11945": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9392,
        9418
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2EB2"
    },
    "11948": {
      "branch": 255,
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9392,
        9418
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11949": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9392,
        9418
      ],
      "op": "POP",
      "path": "23"
    },
    "11950": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9417,
        9418
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11952": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9407,
        9414
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11953": {
      "branch": 256,
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9407,
        9418
      ],
      "op": "GT",
      "path": "23"
    },
    "11954": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9392,
        9418
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11955": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9388,
        9672
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11956": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9388,
        9672
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F93"
    },
    "11959": {
      "branch": 256,
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9388,
        9672
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11960": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9463
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 133,
      "value": "0x7"
    },
    "11962": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9463
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "11963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11969": {
      "op": "SHL"
    },
    "11970": {
      "op": "SUB"
    },
    "11971": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9463
      ],
      "op": "AND",
      "path": "23"
    },
    "11972": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9471
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x4F1EB3D8"
    },
    "11977": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9493,
        9495
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11978": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9517,
        9526
      ],
      "op": "DUP11",
      "path": "23"
    },
    "11979": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9548,
        9557
      ],
      "op": "DUP11",
      "path": "23"
    },
    "11980": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9579,
        9598
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2ED4"
    },
    "11983": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9590,
        9597
      ],
      "op": "DUP10",
      "path": "23"
    },
    "11984": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9579,
        9589
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3727"
    },
    "11987": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9579,
        9598
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11988": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9579,
        9598
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11989": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9620,
        9639
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2EDD"
    },
    "11992": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9631,
        9638
      ],
      "op": "DUP10",
      "path": "23"
    },
    "11993": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9620,
        9630
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3727"
    },
    "11996": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9620,
        9639
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11997": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9620,
        9639
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11998": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12000": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12001": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP7",
      "path": "23"
    },
    "12002": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "12007": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "AND",
      "path": "23"
    },
    "12008": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "12010": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "SHL",
      "path": "23"
    },
    "12011": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12012": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12013": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12015": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ADD",
      "path": "23"
    },
    "12016": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12017": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP7",
      "path": "23"
    },
    "12018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12024": {
      "op": "SHL"
    },
    "12025": {
      "op": "SUB"
    },
    "12026": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "AND",
      "path": "23"
    },
    "12027": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12028": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12029": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12031": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ADD",
      "path": "23"
    },
    "12032": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12033": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "12035": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "12036": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12037": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12038": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12040": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ADD",
      "path": "23"
    },
    "12041": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP5",
      "path": "23"
    },
    "12042": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "12044": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "12045": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12046": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12047": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12049": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ADD",
      "path": "23"
    },
    "12050": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12055": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12057": {
      "op": "SHL"
    },
    "12058": {
      "op": "SUB"
    },
    "12059": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "AND",
      "path": "23"
    },
    "12060": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12061": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12062": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12064": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ADD",
      "path": "23"
    },
    "12065": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12070": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12072": {
      "op": "SHL"
    },
    "12073": {
      "op": "SUB"
    },
    "12074": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "AND",
      "path": "23"
    },
    "12075": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12076": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12077": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12079": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ADD",
      "path": "23"
    },
    "12080": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "12081": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12082": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12083": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12084": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12085": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12086": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12087": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12089": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12090": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12091": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12092": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12093": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "SUB",
      "path": "23"
    },
    "12094": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12095": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12097": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP8",
      "path": "23"
    },
    "12098": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12099": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "12100": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12101": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12102": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12103": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F4F"
    },
    "12106": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12107": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12109": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12110": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12111": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12112": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12113": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "GAS",
      "path": "23"
    },
    "12114": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "CALL",
      "path": "23"
    },
    "12115": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12116": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12117": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12118": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F63"
    },
    "12121": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12122": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12123": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12125": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12126": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "12127": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12128": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12130": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12131": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12132": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12133": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12134": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12135": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "POP",
      "path": "23"
    },
    "12136": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12138": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12139": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12140": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12142": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12143": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "LT",
      "path": "23"
    },
    "12144": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12145": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F79"
    },
    "12148": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12149": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12151": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12152": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12153": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12154": {
      "op": "POP"
    },
    "12155": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12156": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12157": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12159": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12160": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12161": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "ADD",
      "path": "23"
    },
    "12162": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9459,
        9657
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12167": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12169": {
      "op": "SHL"
    },
    "12170": {
      "op": "SUB"
    },
    "12171": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9438,
        9657
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12172": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9438,
        9657
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12173": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9438,
        9657
      ],
      "op": "AND",
      "path": "23"
    },
    "12174": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9438,
        9657
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "12175": {
      "op": "POP"
    },
    "12176": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9438,
        9657
      ],
      "op": "AND",
      "path": "23"
    },
    "12177": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9438,
        9657
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12178": {
      "op": "POP"
    },
    "12179": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9388,
        9672
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12180": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "POP",
      "path": "23"
    },
    "12181": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "POP",
      "path": "23"
    },
    "12182": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "12183": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "POP",
      "path": "23"
    },
    "12184": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "12185": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12186": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "POP",
      "path": "23"
    },
    "12187": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "POP",
      "path": "23"
    },
    "12188": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        8926,
        9688
      ],
      "op": "POP",
      "path": "23"
    },
    "12189": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "o",
      "offset": [
        8926,
        9688
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12190": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12191": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12193": {
      "branch": 290,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12194": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FAD"
    },
    "12197": {
      "branch": 290,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12198": {
      "op": "POP"
    },
    "12199": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 134,
      "value": "0x0"
    },
    "12201": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x995"
    },
    "12204": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12205": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12206": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12207": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12208": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "1"
    },
    "12209": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12210": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "1"
    },
    "12211": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12212": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12213": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 135,
      "value": "0x2FBA"
    },
    "12216": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12217": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "1"
    },
    "12218": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12219": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "1"
    },
    "12220": {
      "branch": 291,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "1"
    },
    "12221": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAC5"
    },
    "12224": {
      "branch": 291,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12225": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12227": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12234": {
      "op": "SHL"
    },
    "12235": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12236": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12237": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12239": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "1"
    },
    "12240": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12241": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12242": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12244": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "1"
    },
    "12245": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12246": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12247": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "1"
    },
    "12248": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12249": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12250": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "12252": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12253": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12254": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12256": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "1"
    },
    "12257": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12258": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C7D"
    },
    "12261": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "12263": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12264": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "12265": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12267": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "1"
    },
    "12268": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12269": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "1"
    },
    "12270": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "1"
    },
    "12271": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12273": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12274": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12275": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12276": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "1"
    },
    "12277": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12278": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12279": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12280": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12282": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 136
    },
    "12283": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12284": {
      "branch": 292,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "1"
    },
    "12285": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x304D"
    },
    "12288": {
      "branch": 292,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12289": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12291": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12292": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12299": {
      "op": "SHL"
    },
    "12300": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12301": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12302": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12304": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12306": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12307": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "12308": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12309": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "12311": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "12313": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12314": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "12315": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12316": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "12349": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "12351": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12352": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "12353": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12354": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12355": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12356": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12357": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12358": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12359": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "1"
    },
    "12360": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "12362": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "12363": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12364": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12365": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12366": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 137
    },
    "12367": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "1"
    },
    "12368": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12369": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3056"
    },
    "12372": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12373": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "1"
    },
    "12374": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12375": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "1"
    },
    "12376": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "12377": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "12378": {
      "op": "POP"
    },
    "12379": {
      "op": "POP"
    },
    "12380": {
      "op": "POP"
    },
    "12381": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12382": {
      "fn": "ERC20._burn",
      "offset": [
        8522,
        8932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12389": {
      "op": "SHL"
    },
    "12390": {
      "op": "SUB"
    },
    "12391": {
      "fn": "ERC20._burn",
      "offset": [
        8605,
        8626
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 138
    },
    "12392": {
      "branch": 266,
      "fn": "ERC20._burn",
      "offset": [
        8605,
        8626
      ],
      "op": "AND",
      "path": "2"
    },
    "12393": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30A3"
    },
    "12396": {
      "branch": 266,
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12397": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12399": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12406": {
      "op": "SHL"
    },
    "12407": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12408": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12409": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12411": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "ADD",
      "path": "2"
    },
    "12412": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12413": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12414": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12416": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "ADD",
      "path": "2"
    },
    "12417": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12418": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12419": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SUB",
      "path": "2"
    },
    "12420": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12421": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12422": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "12424": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12425": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12426": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12428": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "ADD",
      "path": "2"
    },
    "12429": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12430": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CC6"
    },
    "12433": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "12435": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12436": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "12437": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12439": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "ADD",
      "path": "2"
    },
    "12440": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12441": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "POP",
      "path": "2"
    },
    "12442": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "POP",
      "path": "2"
    },
    "12443": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12445": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12446": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12447": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12448": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SUB",
      "path": "2"
    },
    "12449": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12450": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12451": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12452": {
      "fn": "ERC20._burn",
      "offset": [
        8675,
        8724
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 139,
      "value": "0x30AF"
    },
    "12455": {
      "fn": "ERC20._burn",
      "offset": [
        8696,
        8703
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12456": {
      "fn": "ERC20._burn",
      "offset": [
        8713,
        8714
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12458": {
      "fn": "ERC20._burn",
      "offset": [
        8717,
        8723
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12459": {
      "fn": "ERC20._burn",
      "offset": [
        8675,
        8695
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E2"
    },
    "12462": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8675,
        8724
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12463": {
      "fn": "ERC20._burn",
      "offset": [
        8675,
        8724
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12464": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 140,
      "value": "0x30EC"
    },
    "12467": {
      "fn": "ERC20._burn",
      "offset": [
        8779,
        8785
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12468": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12470": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12471": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12472": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "12474": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "ADD",
      "path": "2"
    },
    "12475": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12477": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12478": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12479": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "12481": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12482": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12483": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12485": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "ADD",
      "path": "2"
    },
    "12486": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BED"
    },
    "12489": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "12491": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12492": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "12493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12499": {
      "op": "SHL"
    },
    "12500": {
      "op": "SUB"
    },
    "12501": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12502": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "AND",
      "path": "2"
    },
    "12503": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8765
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12505": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12506": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12507": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12508": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12510": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12511": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12512": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12513": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12515": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12516": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12517": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12518": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12519": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12520": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x226C"
    },
    "12523": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8756,
        8824
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12524": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12531": {
      "op": "SHL"
    },
    "12532": {
      "op": "SUB"
    },
    "12533": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12534": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "AND",
      "path": "2"
    },
    "12535": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12537": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12538": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12539": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12540": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12542": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12543": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12544": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12545": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12547": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12548": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12549": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8824
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12550": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8861
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 141,
      "value": "0x2"
    },
    "12552": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12553": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3112"
    },
    "12556": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8873
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12557": {
      "fn": "ERC20._burn",
      "offset": [
        8866,
        8872
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12558": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F72"
    },
    "12561": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8849,
        8873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12562": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12563": {
      "fn": "ERC20._burn",
      "offset": [
        8834,
        8846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12565": {
      "fn": "ERC20._burn",
      "offset": [
        8834,
        8873
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12566": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 142,
      "value": "0x40"
    },
    "12568": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12569": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12570": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12571": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12572": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12573": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12574": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12575": {
      "fn": "ERC20._burn",
      "offset": [
        8914,
        8915
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12577": {
      "fn": "ERC20._burn",
      "offset": [
        8914,
        8915
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12584": {
      "op": "SHL"
    },
    "12585": {
      "op": "SUB"
    },
    "12586": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12587": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "AND",
      "path": "2"
    },
    "12588": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12589": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12622": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12623": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12624": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12625": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SUB",
      "path": "2"
    },
    "12626": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12628": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "ADD",
      "path": "2"
    },
    "12629": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12630": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "LOG3",
      "path": "2"
    },
    "12631": {
      "fn": "ERC20._burn",
      "offset": [
        8522,
        8932
      ],
      "op": "POP",
      "path": "2"
    },
    "12632": {
      "fn": "ERC20._burn",
      "offset": [
        8522,
        8932
      ],
      "op": "POP",
      "path": "2"
    },
    "12633": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        8522,
        8932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12634": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12635": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12637": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x31AF"
    },
    "12640": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3440,
        3444
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12641": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12643": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12644": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12645": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12647": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "4"
    },
    "12648": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12650": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12651": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12652": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12654": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12655": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12656": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12658": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "4"
    },
    "12659": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "12692": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12693": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12694": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "POP",
      "path": "4"
    },
    "12695": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3420,
        3425
      ],
      "op": "DUP6",
      "path": "4"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12702": {
      "op": "SHL"
    },
    "12703": {
      "op": "SUB"
    },
    "12704": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "AND",
      "path": "4"
    },
    "12705": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x373E"
    },
    "12708": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12709": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "12710": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12711": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12712": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "12717": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "AND",
      "path": "4"
    },
    "12718": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMP",
      "path": "4"
    },
    "12719": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12720": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12721": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12722": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12723": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12724": {
      "op": "POP"
    },
    "12725": {
      "branch": 285,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3516
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "12726": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8E2"
    },
    "12729": {
      "branch": 285,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12730": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3635,
        3645
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 143
    },
    "12731": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12732": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12734": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ADD",
      "path": "4"
    },
    "12735": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12736": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12737": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12739": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12740": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "LT",
      "path": "4"
    },
    "12741": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "12742": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x31CE"
    },
    "12745": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12746": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12748": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12749": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "REVERT",
      "path": "4"
    },
    "12750": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12751": {
      "op": "POP"
    },
    "12752": {
      "branch": 286,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12753": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8E2"
    },
    "12756": {
      "branch": 286,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12757": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12759": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12766": {
      "op": "SHL"
    },
    "12767": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12768": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12769": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "12771": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "12772": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12773": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12774": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12776": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "12777": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12778": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12779": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "4"
    },
    "12780": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12781": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12782": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "12784": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12785": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12786": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12788": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "12789": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12790": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D30"
    },
    "12793": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "12795": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12796": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "12797": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12799": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "12800": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12801": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "4"
    },
    "12802": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "4"
    },
    "12803": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12805": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12806": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12808": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "4"
    },
    "12809": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12810": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "REVERT",
      "path": "4"
    },
    "12811": {
      "fn": "PositionKey.compute",
      "offset": [
        162,
        370
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12812": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 144,
      "value": "0x40"
    },
    "12814": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP1",
      "path": "21"
    },
    "12815": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12816": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "12818": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "12819": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12820": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "12821": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SHL",
      "path": "21"
    },
    "12822": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12835": {
      "op": "NOT"
    },
    "12836": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "AND",
      "path": "21"
    },
    "12837": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12839": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP1",
      "path": "21"
    },
    "12840": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP7",
      "path": "21"
    },
    "12841": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "12842": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "12843": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12844": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "12845": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "12846": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "12848": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "12849": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP5",
      "path": "21"
    },
    "12850": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SIGNEXTEND",
      "path": "21"
    },
    "12851": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xE8"
    },
    "12853": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12854": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12855": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SHL",
      "path": "21"
    },
    "12856": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x34"
    },
    "12858": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP8",
      "path": "21"
    },
    "12859": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "12860": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "12861": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "12862": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12863": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "12864": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SIGNEXTEND",
      "path": "21"
    },
    "12865": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12866": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "12867": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SHL",
      "path": "21"
    },
    "12868": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x37"
    },
    "12870": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP5",
      "path": "21"
    },
    "12871": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "12872": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "12873": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP1",
      "path": "21"
    },
    "12874": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12875": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP1",
      "path": "21"
    },
    "12876": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP5",
      "path": "21"
    },
    "12877": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SUB",
      "path": "21"
    },
    "12878": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1A"
    },
    "12880": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "12881": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12882": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "12883": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3A"
    },
    "12885": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12886": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "12887": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "12888": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12889": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "12890": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12891": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12892": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "12893": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "ADD",
      "path": "21"
    },
    "12894": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "12895": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12896": {
      "fn": "PositionKey.compute",
      "jump": "o",
      "offset": [
        162,
        370
      ],
      "op": "JUMP",
      "path": "21"
    },
    "12897": {
      "fn": "Math.max",
      "offset": [
        223,
        328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12898": {
      "fn": "Math.max",
      "offset": [
        281,
        288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12900": {
      "fn": "Math.max",
      "offset": [
        312,
        313
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 145
    },
    "12901": {
      "fn": "Math.max",
      "offset": [
        307,
        308
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12902": {
      "fn": "Math.max",
      "offset": [
        307,
        313
      ],
      "op": "LT",
      "path": "0"
    },
    "12903": {
      "branch": 282,
      "fn": "Math.max",
      "offset": [
        307,
        313
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12904": {
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3271"
    },
    "12907": {
      "branch": 282,
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12908": {
      "fn": "Math.max",
      "offset": [
        320,
        321
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12909": {
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "12912": {
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12913": {
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12914": {
      "op": "POP"
    },
    "12915": {
      "fn": "Math.max",
      "offset": [
        316,
        317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12916": {
      "fn": "Math.max",
      "offset": [
        316,
        317
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12917": {
      "fn": "Math.max",
      "offset": [
        300,
        321
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12918": {
      "op": "POP"
    },
    "12919": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        223,
        328
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12920": {
      "fn": "Math.min",
      "offset": [
        399,
        503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12921": {
      "fn": "Math.min",
      "offset": [
        457,
        464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12923": {
      "fn": "Math.min",
      "offset": [
        487,
        488
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 146
    },
    "12924": {
      "fn": "Math.min",
      "offset": [
        483,
        484
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12925": {
      "branch": 283,
      "fn": "Math.min",
      "offset": [
        483,
        488
      ],
      "op": "LT",
      "path": "0"
    },
    "12926": {
      "fn": "Math.min",
      "offset": [
        483,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3271"
    },
    "12929": {
      "branch": 283,
      "fn": "Math.min",
      "offset": [
        483,
        496
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12930": {
      "fn": "Math.min",
      "offset": [
        495,
        496
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12931": {
      "fn": "Math.min",
      "offset": [
        483,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "12934": {
      "fn": "Math.min",
      "offset": [
        483,
        496
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12935": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12936": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1418,
        1438
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12938": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1450,
        1465
      ],
      "op": "DUP1",
      "path": "19"
    },
    "12939": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1475,
        1476
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12941": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1472
      ],
      "op": "DUP4",
      "path": "19"
    },
    "12942": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1476
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "12944": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1476
      ],
      "op": "SIGNEXTEND",
      "path": "19"
    },
    "12945": {
      "branch": 293,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1476
      ],
      "op": "SLT",
      "path": "19"
    },
    "12946": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x329E"
    },
    "12949": {
      "branch": 293,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12950": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1519,
        1523
      ],
      "op": "DUP3",
      "path": "19"
    },
    "12951": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1512,
        1524
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "12953": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1512,
        1524
      ],
      "op": "SIGNEXTEND",
      "path": "19"
    },
    "12954": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32A6"
    },
    "12957": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "JUMP",
      "path": "19"
    },
    "12958": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12959": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1495,
        1499
      ],
      "op": "DUP3",
      "path": "19"
    },
    "12960": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1488,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "12962": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1488,
        1500
      ],
      "op": "SIGNEXTEND",
      "path": "19"
    },
    "12963": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1487,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "12965": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1487,
        1500
      ],
      "op": "SUB",
      "path": "19"
    },
    "12966": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "12967": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1450,
        1525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "12968": {
      "op": "POP"
    },
    "12969": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0xD89E8"
    },
    "12973": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1543,
        1571
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 147
    },
    "12974": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1543,
        1571
      ],
      "op": "GT",
      "path": "19"
    },
    "12975": {
      "branch": 294,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1543,
        1571
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "12976": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32E4"
    },
    "12979": {
      "branch": 294,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12980": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "12982": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP1",
      "path": "19"
    },
    "12983": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "12984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12990": {
      "op": "SHL"
    },
    "12991": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "19"
    },
    "12992": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "12993": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "12995": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "12997": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "19"
    },
    "12998": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "19"
    },
    "12999": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13000": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "13002": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "13004": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13005": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "19"
    },
    "13006": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13007": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "13009": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "13011": {
      "op": "SHL"
    },
    "13012": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "13014": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13015": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "19"
    },
    "13016": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13017": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13018": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13019": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13020": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13021": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13022": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SUB",
      "path": "19"
    },
    "13023": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "13025": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "19"
    },
    "13026": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13027": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "REVERT",
      "path": "19"
    },
    "13028": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13029": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1588,
        1601
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13031": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1614,
        1617
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "13033": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1617
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13034": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1617
      ],
      "op": "AND",
      "path": "19"
    },
    "13035": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32F8"
    },
    "13038": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13041": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13043": {
      "op": "SHL"
    },
    "13044": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x330A"
    },
    "13047": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13048": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13049": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1625,
        1659
      ],
      "op": "PUSH16",
      "path": "19",
      "value": "0xFFFCB933BD6FAD37AA2D162D1A594001"
    },
    "13066": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13067": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1588,
        1697
      ],
      "op": "PUSH17",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13085": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1588,
        1697
      ],
      "op": "AND",
      "path": "19"
    },
    "13086": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1588,
        1697
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13087": {
      "op": "POP"
    },
    "13088": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1721,
        1724
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "13090": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1711,
        1724
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13091": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1711,
        1724
      ],
      "op": "AND",
      "path": "19"
    },
    "13092": {
      "branch": 295,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1711,
        1729
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13093": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1707,
        1790
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x333E"
    },
    "13096": {
      "branch": 295,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1707,
        1790
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13097": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1748,
        1782
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 148,
      "value": "0xFFF97272373D413259A46990580E213A"
    },
    "13114": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1740,
        1782
      ],
      "op": "MUL",
      "path": "19"
    },
    "13115": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1787,
        1790
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13117": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1739,
        1790
      ],
      "op": "SHR",
      "path": "19"
    },
    "13118": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1707,
        1790
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13119": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1814,
        1817
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "13121": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1804,
        1817
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13122": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1804,
        1817
      ],
      "op": "AND",
      "path": "19"
    },
    "13123": {
      "branch": 296,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1804,
        1822
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13124": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1800,
        1883
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x335D"
    },
    "13127": {
      "branch": 296,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1800,
        1883
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13128": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1841,
        1875
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 149,
      "value": "0xFFF2E50F5F656932EF12357CF3C7FDCC"
    },
    "13145": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1833,
        1875
      ],
      "op": "MUL",
      "path": "19"
    },
    "13146": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1880,
        1883
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13148": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1832,
        1883
      ],
      "op": "SHR",
      "path": "19"
    },
    "13149": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1800,
        1883
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13150": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1907,
        1910
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "13152": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1897,
        1910
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13153": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1897,
        1910
      ],
      "op": "AND",
      "path": "19"
    },
    "13154": {
      "branch": 297,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1897,
        1915
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13155": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1893,
        1976
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x337C"
    },
    "13158": {
      "branch": 297,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1893,
        1976
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13159": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1934,
        1968
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 150,
      "value": "0xFFE5CACA7E10E4E61C3624EAA0941CD0"
    },
    "13176": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1926,
        1968
      ],
      "op": "MUL",
      "path": "19"
    },
    "13177": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1973,
        1976
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13179": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1925,
        1976
      ],
      "op": "SHR",
      "path": "19"
    },
    "13180": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1893,
        1976
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13181": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2000,
        2004
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "13183": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1990,
        2004
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13184": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1990,
        2004
      ],
      "op": "AND",
      "path": "19"
    },
    "13185": {
      "branch": 298,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1990,
        2009
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13186": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1986,
        2070
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x339B"
    },
    "13189": {
      "branch": 298,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1986,
        2070
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13190": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2028,
        2062
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 151,
      "value": "0xFFCB9843D60F6159C9DB58835C926644"
    },
    "13207": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2020,
        2062
      ],
      "op": "MUL",
      "path": "19"
    },
    "13208": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2067,
        2070
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13210": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2019,
        2070
      ],
      "op": "SHR",
      "path": "19"
    },
    "13211": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1986,
        2070
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13212": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2094,
        2098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13214": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2084,
        2098
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13215": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2084,
        2098
      ],
      "op": "AND",
      "path": "19"
    },
    "13216": {
      "branch": 299,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2084,
        2103
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13217": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2080,
        2164
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33BA"
    },
    "13220": {
      "branch": 299,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2080,
        2164
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13221": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2122,
        2156
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 152,
      "value": "0xFF973B41FA98C081472E6896DFB254C0"
    },
    "13238": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2114,
        2156
      ],
      "op": "MUL",
      "path": "19"
    },
    "13239": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2161,
        2164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13241": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2113,
        2164
      ],
      "op": "SHR",
      "path": "19"
    },
    "13242": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2080,
        2164
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13243": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2188,
        2192
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13245": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2178,
        2192
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13246": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2178,
        2192
      ],
      "op": "AND",
      "path": "19"
    },
    "13247": {
      "branch": 300,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2178,
        2197
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13248": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2174,
        2258
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33D9"
    },
    "13251": {
      "branch": 300,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2174,
        2258
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13252": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2216,
        2250
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 153,
      "value": "0xFF2EA16466C96A3843EC78B326B52861"
    },
    "13269": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2208,
        2250
      ],
      "op": "MUL",
      "path": "19"
    },
    "13270": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2255,
        2258
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13272": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2207,
        2258
      ],
      "op": "SHR",
      "path": "19"
    },
    "13273": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2174,
        2258
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13274": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2282,
        2286
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13276": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2272,
        2286
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13277": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2272,
        2286
      ],
      "op": "AND",
      "path": "19"
    },
    "13278": {
      "branch": 301,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2272,
        2291
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13279": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2268,
        2352
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33F8"
    },
    "13282": {
      "branch": 301,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2268,
        2352
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13283": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2310,
        2344
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 154,
      "value": "0xFE5DEE046A99A2A811C461F1969C3053"
    },
    "13300": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2302,
        2344
      ],
      "op": "MUL",
      "path": "19"
    },
    "13301": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2349,
        2352
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13303": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2301,
        2352
      ],
      "op": "SHR",
      "path": "19"
    },
    "13304": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2268,
        2352
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13305": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2376,
        2381
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "13308": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2366,
        2381
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13309": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2366,
        2381
      ],
      "op": "AND",
      "path": "19"
    },
    "13310": {
      "branch": 302,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2366,
        2386
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13311": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2362,
        2447
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3418"
    },
    "13314": {
      "branch": 302,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2362,
        2447
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13315": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2405,
        2439
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 155,
      "value": "0xFCBE86C7900A88AEDCFFC83B479AA3A4"
    },
    "13332": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2397,
        2439
      ],
      "op": "MUL",
      "path": "19"
    },
    "13333": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2444,
        2447
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13335": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2396,
        2447
      ],
      "op": "SHR",
      "path": "19"
    },
    "13336": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2362,
        2447
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13337": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2471,
        2476
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x200"
    },
    "13340": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2461,
        2476
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13341": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2461,
        2476
      ],
      "op": "AND",
      "path": "19"
    },
    "13342": {
      "branch": 303,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2461,
        2481
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13343": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2457,
        2542
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3438"
    },
    "13346": {
      "branch": 303,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2457,
        2542
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13347": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2500,
        2534
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 156,
      "value": "0xF987A7253AC413176F2B074CF7815E54"
    },
    "13364": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2492,
        2534
      ],
      "op": "MUL",
      "path": "19"
    },
    "13365": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2539,
        2542
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13367": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2491,
        2542
      ],
      "op": "SHR",
      "path": "19"
    },
    "13368": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2457,
        2542
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13369": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2566,
        2571
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x400"
    },
    "13372": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2556,
        2571
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13373": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2556,
        2571
      ],
      "op": "AND",
      "path": "19"
    },
    "13374": {
      "branch": 304,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2556,
        2576
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13375": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2552,
        2637
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3458"
    },
    "13378": {
      "branch": 304,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2552,
        2637
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13379": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2595,
        2629
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 157,
      "value": "0xF3392B0822B70005940C7A398E4B70F3"
    },
    "13396": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2587,
        2629
      ],
      "op": "MUL",
      "path": "19"
    },
    "13397": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2634,
        2637
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13399": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2586,
        2637
      ],
      "op": "SHR",
      "path": "19"
    },
    "13400": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2552,
        2637
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13401": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2661,
        2666
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x800"
    },
    "13404": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2651,
        2666
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13405": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2651,
        2666
      ],
      "op": "AND",
      "path": "19"
    },
    "13406": {
      "branch": 305,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2651,
        2671
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13407": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2647,
        2732
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3478"
    },
    "13410": {
      "branch": 305,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2647,
        2732
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13411": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2690,
        2724
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 158,
      "value": "0xE7159475A2C29B7443B29C7FA6E889D9"
    },
    "13428": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2682,
        2724
      ],
      "op": "MUL",
      "path": "19"
    },
    "13429": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2729,
        2732
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13431": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2681,
        2732
      ],
      "op": "SHR",
      "path": "19"
    },
    "13432": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2647,
        2732
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13433": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2756,
        2762
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1000"
    },
    "13436": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2746,
        2762
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13437": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2746,
        2762
      ],
      "op": "AND",
      "path": "19"
    },
    "13438": {
      "branch": 306,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2746,
        2767
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13439": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2742,
        2828
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3498"
    },
    "13442": {
      "branch": 306,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2742,
        2828
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13443": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2786,
        2820
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 159,
      "value": "0xD097F3BDFD2022B8845AD8F792AA5825"
    },
    "13460": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2778,
        2820
      ],
      "op": "MUL",
      "path": "19"
    },
    "13461": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2825,
        2828
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13463": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2777,
        2828
      ],
      "op": "SHR",
      "path": "19"
    },
    "13464": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2742,
        2828
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13465": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2852,
        2858
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2000"
    },
    "13468": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2842,
        2858
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13469": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2842,
        2858
      ],
      "op": "AND",
      "path": "19"
    },
    "13470": {
      "branch": 307,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2842,
        2863
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13471": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2838,
        2924
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34B8"
    },
    "13474": {
      "branch": 307,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2838,
        2924
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13475": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2882,
        2916
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 160,
      "value": "0xA9F746462D870FDF8A65DC1F90E061E5"
    },
    "13492": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2874,
        2916
      ],
      "op": "MUL",
      "path": "19"
    },
    "13493": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2921,
        2924
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13495": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2873,
        2924
      ],
      "op": "SHR",
      "path": "19"
    },
    "13496": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2838,
        2924
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13497": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2948,
        2954
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4000"
    },
    "13500": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2938,
        2954
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13501": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2938,
        2954
      ],
      "op": "AND",
      "path": "19"
    },
    "13502": {
      "branch": 308,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2938,
        2959
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13503": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2934,
        3020
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34D8"
    },
    "13506": {
      "branch": 308,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2934,
        3020
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13507": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2978,
        3012
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 161,
      "value": "0x70D869A156D2A1B890BB3DF62BAF32F7"
    },
    "13524": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2970,
        3012
      ],
      "op": "MUL",
      "path": "19"
    },
    "13525": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3017,
        3020
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13527": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2969,
        3020
      ],
      "op": "SHR",
      "path": "19"
    },
    "13528": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2934,
        3020
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13529": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3044,
        3050
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8000"
    },
    "13532": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3034,
        3050
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13533": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3034,
        3050
      ],
      "op": "AND",
      "path": "19"
    },
    "13534": {
      "branch": 309,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3034,
        3055
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13535": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3030,
        3116
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F8"
    },
    "13538": {
      "branch": 309,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3030,
        3116
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13539": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3074,
        3108
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 162,
      "value": "0x31BE135F97D08FD981231505542FCFA6"
    },
    "13556": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3066,
        3108
      ],
      "op": "MUL",
      "path": "19"
    },
    "13557": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3113,
        3116
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13559": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3065,
        3116
      ],
      "op": "SHR",
      "path": "19"
    },
    "13560": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3030,
        3116
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13561": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3140,
        3147
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x10000"
    },
    "13565": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3130,
        3147
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13566": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3130,
        3147
      ],
      "op": "AND",
      "path": "19"
    },
    "13567": {
      "branch": 310,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3130,
        3152
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13568": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3126,
        3212
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3519"
    },
    "13571": {
      "branch": 310,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3126,
        3212
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13572": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3171,
        3204
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 163,
      "value": "0x9AA508B5B7A84E1C677DE54F3E99BC9"
    },
    "13589": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3163,
        3204
      ],
      "op": "MUL",
      "path": "19"
    },
    "13590": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3209,
        3212
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13592": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3162,
        3212
      ],
      "op": "SHR",
      "path": "19"
    },
    "13593": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3126,
        3212
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13594": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3236,
        3243
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x20000"
    },
    "13598": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3226,
        3243
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13599": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3226,
        3243
      ],
      "op": "AND",
      "path": "19"
    },
    "13600": {
      "branch": 311,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3226,
        3248
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13601": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3222,
        3307
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3539"
    },
    "13604": {
      "branch": 311,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3222,
        3307
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13605": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3267,
        3299
      ],
      "op": "PUSH15",
      "path": "19",
      "statement": 164,
      "value": "0x5D6AF8DEDB81196699C329225EE604"
    },
    "13621": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3259,
        3299
      ],
      "op": "MUL",
      "path": "19"
    },
    "13622": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3304,
        3307
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13624": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3258,
        3307
      ],
      "op": "SHR",
      "path": "19"
    },
    "13625": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3222,
        3307
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13626": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3331,
        3338
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x40000"
    },
    "13630": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3321,
        3338
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13631": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3321,
        3338
      ],
      "op": "AND",
      "path": "19"
    },
    "13632": {
      "branch": 312,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3321,
        3343
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13633": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3317,
        3400
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3558"
    },
    "13636": {
      "branch": 312,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3317,
        3400
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13637": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3362,
        3392
      ],
      "op": "PUSH14",
      "path": "19",
      "statement": 165,
      "value": "0x2216E584F5FA1EA926041BEDFE98"
    },
    "13652": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3354,
        3392
      ],
      "op": "MUL",
      "path": "19"
    },
    "13653": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3397,
        3400
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13655": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3353,
        3400
      ],
      "op": "SHR",
      "path": "19"
    },
    "13656": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3317,
        3400
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13657": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3424,
        3431
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x80000"
    },
    "13661": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3414,
        3431
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13662": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3414,
        3431
      ],
      "op": "AND",
      "path": "19"
    },
    "13663": {
      "branch": 313,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3414,
        3436
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13664": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3410,
        3488
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3575"
    },
    "13667": {
      "branch": 313,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3410,
        3488
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13668": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3455,
        3480
      ],
      "op": "PUSH12",
      "path": "19",
      "statement": 166,
      "value": "0x48A170391F7DC42444E8FA2"
    },
    "13681": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3447,
        3480
      ],
      "op": "MUL",
      "path": "19"
    },
    "13682": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3485,
        3488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13684": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3446,
        3488
      ],
      "op": "SHR",
      "path": "19"
    },
    "13685": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3410,
        3488
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13686": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3510,
        3511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13688": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3503,
        3507
      ],
      "op": "DUP5",
      "path": "19"
    },
    "13689": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3503,
        3511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "13691": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3503,
        3511
      ],
      "op": "SIGNEXTEND",
      "path": "19"
    },
    "13692": {
      "branch": 314,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3503,
        3511
      ],
      "op": "SGT",
      "path": "19"
    },
    "13693": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3499,
        3546
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13694": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3499,
        3546
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3590"
    },
    "13697": {
      "branch": 314,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3499,
        3546
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13698": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3541,
        3546
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 167
    },
    "13699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13701": {
      "op": "NOT"
    },
    "13702": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13703": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x358C"
    },
    "13706": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13707": {
      "dev": "Division by zero",
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "INVALID",
      "path": "19"
    },
    "13708": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13709": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "DIV",
      "path": "19"
    },
    "13710": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3513,
        3546
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13711": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3513,
        3546
      ],
      "op": "POP",
      "path": "19"
    },
    "13712": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3499,
        3546
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13713": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3905,
        3912
      ],
      "op": "PUSH5",
      "path": "19",
      "statement": 168,
      "value": "0x100000000"
    },
    "13719": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3901
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13720": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3913
      ],
      "op": "MOD",
      "path": "19"
    },
    "13721": {
      "branch": 315,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3918
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13722": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35A4"
    },
    "13725": {
      "branch": 315,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13726": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3925,
        3926
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "13728": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35A7"
    },
    "13731": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13732": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13733": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3921,
        3922
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13735": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13736": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3879,
        3927
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "13738": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3879,
        3927
      ],
      "op": "AND",
      "path": "19"
    },
    "13739": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3889,
        3891
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13741": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3880,
        3885
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13742": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3880,
        3891
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13743": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3880,
        3891
      ],
      "op": "SHR",
      "path": "19"
    },
    "13744": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3879,
        3927
      ],
      "op": "ADD",
      "path": "19"
    },
    "13745": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3856,
        3928
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "13746": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3856,
        3928
      ],
      "op": "POP",
      "path": "19"
    },
    "13747": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "POP",
      "path": "19"
    },
    "13748": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "POP",
      "path": "19"
    },
    "13749": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "13750": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13751": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "POP",
      "path": "19"
    },
    "13752": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "jump": "o",
      "offset": [
        1355,
        3935
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13753": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13754": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3185,
        3202
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13756": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3234,
        3247
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13763": {
      "op": "SHL"
    },
    "13764": {
      "op": "SUB"
    },
    "13765": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3218,
        3247
      ],
      "op": "AND",
      "path": "20"
    },
    "13766": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3218,
        3231
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13773": {
      "op": "SHL"
    },
    "13774": {
      "op": "SUB"
    },
    "13775": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3218,
        3247
      ],
      "op": "AND",
      "path": "20"
    },
    "13776": {
      "branch": 270,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3218,
        3247
      ],
      "op": "GT",
      "path": "20"
    },
    "13777": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3214,
        3312
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13778": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3214,
        3312
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35D9"
    },
    "13781": {
      "branch": 270,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3214,
        3312
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13782": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3283,
        3296
      ],
      "op": "SWAP3",
      "path": "20",
      "statement": 169
    },
    "13783": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3283,
        3296
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "13784": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3298,
        3311
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13785": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3214,
        3312
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13786": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3343,
        3356
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13793": {
      "op": "SHL"
    },
    "13794": {
      "op": "SUB"
    },
    "13795": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3327,
        3356
      ],
      "op": "AND",
      "path": "20"
    },
    "13796": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3327,
        3339
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13803": {
      "op": "SHL"
    },
    "13804": {
      "op": "SUB"
    },
    "13805": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3327,
        3356
      ],
      "op": "AND",
      "path": "20"
    },
    "13806": {
      "branch": 271,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3327,
        3356
      ],
      "op": "GT",
      "path": "20"
    },
    "13807": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3604"
    },
    "13810": {
      "branch": 271,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13811": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3384,
        3445
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 170,
      "value": "0x35FD"
    },
    "13814": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3407,
        3420
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13815": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3422,
        3435
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13816": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3437,
        3444
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13817": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3384,
        3406
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3755"
    },
    "13820": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "i",
      "offset": [
        3384,
        3445
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13821": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3384,
        3445
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13822": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3372,
        3445
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13823": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3372,
        3445
      ],
      "op": "POP",
      "path": "20"
    },
    "13824": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3674"
    },
    "13827": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13828": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13829": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3481,
        3494
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13836": {
      "op": "SHL"
    },
    "13837": {
      "op": "SUB"
    },
    "13838": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3466,
        3494
      ],
      "op": "AND",
      "path": "20"
    },
    "13839": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3466,
        3478
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13846": {
      "op": "SHL"
    },
    "13847": {
      "op": "SUB"
    },
    "13848": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3466,
        3494
      ],
      "op": "AND",
      "path": "20"
    },
    "13849": {
      "branch": 272,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3466,
        3494
      ],
      "op": "LT",
      "path": "20"
    },
    "13850": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13851": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3666"
    },
    "13854": {
      "branch": 272,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13855": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3510,
        3528
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13857": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3531,
        3591
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x362B"
    },
    "13860": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3554,
        3566
      ],
      "op": "DUP8",
      "path": "20"
    },
    "13861": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3568,
        3581
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13862": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3583,
        3590
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13863": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3531,
        3553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3755"
    },
    "13866": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "i",
      "offset": [
        3531,
        3591
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13867": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3531,
        3591
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13868": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3510,
        3591
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13869": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3510,
        3591
      ],
      "op": "POP",
      "path": "20"
    },
    "13870": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3605,
        3623
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13872": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3626,
        3686
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x363A"
    },
    "13875": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3649,
        3662
      ],
      "op": "DUP8",
      "path": "20"
    },
    "13876": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP10",
      "path": "20"
    },
    "13877": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3678,
        3685
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13878": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3626,
        3648
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37B8"
    },
    "13881": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "i",
      "offset": [
        3626,
        3686
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13882": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3626,
        3686
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13883": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3605,
        3686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13884": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3605,
        3686
      ],
      "op": "POP",
      "path": "20"
    },
    "13885": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3726,
        3736
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 171
    },
    "13886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13890": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13892": {
      "op": "SHL"
    },
    "13893": {
      "op": "SUB"
    },
    "13894": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3736
      ],
      "op": "AND",
      "path": "20"
    },
    "13895": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3723
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13900": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13902": {
      "op": "SHL"
    },
    "13903": {
      "op": "SUB"
    },
    "13904": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3736
      ],
      "op": "AND",
      "path": "20"
    },
    "13905": {
      "branch": 273,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3736
      ],
      "op": "LT",
      "path": "20"
    },
    "13906": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x365B"
    },
    "13909": {
      "branch": 273,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13910": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3752,
        3762
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13911": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x365D"
    },
    "13914": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13915": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13916": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3739,
        3749
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13917": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13918": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3701,
        3762
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13919": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3701,
        3762
      ],
      "op": "POP",
      "path": "20"
    },
    "13920": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "POP",
      "path": "20"
    },
    "13921": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "POP",
      "path": "20"
    },
    "13922": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3674"
    },
    "13925": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13926": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13927": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3805,
        3866
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 172,
      "value": "0x3671"
    },
    "13930": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3828,
        3841
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13931": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3843,
        3856
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13932": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3858,
        3865
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13933": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3805,
        3827
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37B8"
    },
    "13936": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "i",
      "offset": [
        3805,
        3866
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13937": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3805,
        3866
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13938": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3793,
        3866
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13939": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3793,
        3866
      ],
      "op": "POP",
      "path": "20"
    },
    "13940": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13941": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "13942": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "13943": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "13944": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "13945": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "13946": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "13947": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "13948": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "o",
      "offset": [
        2982,
        3883
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13949": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16269,
        16740
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13950": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16405,
        16412
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13952": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16414,
        16421
      ],
      "op": "DUP1",
      "path": "23"
    },
    "13953": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16434,
        16454
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13955": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "13957": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13959": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13960": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "13961": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13962": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "13965": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "EXP",
      "path": "23"
    },
    "13966": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13967": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "DIV",
      "path": "23"
    },
    "13968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13974": {
      "op": "SHL"
    },
    "13975": {
      "op": "SUB"
    },
    "13976": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16474
      ],
      "op": "AND",
      "path": "23"
    },
    "13977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13983": {
      "op": "SHL"
    },
    "13984": {
      "op": "SUB"
    },
    "13985": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16480
      ],
      "op": "AND",
      "path": "23"
    },
    "13986": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16480
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3850C7BD"
    },
    "13991": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13993": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13994": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13995": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "14000": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "AND",
      "path": "23"
    },
    "14001": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "14003": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "SHL",
      "path": "23"
    },
    "14004": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14005": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14006": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "14008": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "ADD",
      "path": "23"
    },
    "14009": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "14011": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14013": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14014": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14015": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP4",
      "path": "23"
    },
    "14016": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "SUB",
      "path": "23"
    },
    "14017": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14018": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP7",
      "path": "23"
    },
    "14019": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14020": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "14021": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14022": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14023": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14024": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x36D0"
    },
    "14027": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14028": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14030": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14031": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "REVERT",
      "path": "23"
    },
    "14032": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14033": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "POP",
      "path": "23"
    },
    "14034": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "GAS",
      "path": "23"
    },
    "14035": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "14036": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14037": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14038": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14039": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x36E4"
    },
    "14042": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14043": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "14044": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14046": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14047": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "14048": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "14049": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14051": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "REVERT",
      "path": "23"
    },
    "14052": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14053": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "POP",
      "path": "23"
    },
    "14054": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "POP",
      "path": "23"
    },
    "14055": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "POP",
      "path": "23"
    },
    "14056": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "POP",
      "path": "23"
    },
    "14057": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14059": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14060": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "14061": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "14063": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14064": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "LT",
      "path": "23"
    },
    "14065": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14066": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x36FA"
    },
    "14069": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14070": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14072": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14073": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "REVERT",
      "path": "23"
    },
    "14074": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14075": {
      "op": "POP"
    },
    "14076": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14077": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14078": {
      "op": "POP"
    },
    "14079": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16511,
        16733
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 173,
      "value": "0x371A"
    },
    "14082": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16470,
        16482
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14083": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16598,
        16636
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x370B"
    },
    "14086": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16626,
        16635
      ],
      "op": "DUP9",
      "path": "23"
    },
    "14087": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16598,
        16625
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3287"
    },
    "14090": {
      "fn": "AlphaVault._amountsForLiquidity",
      "jump": "i",
      "offset": [
        16598,
        16636
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14091": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16598,
        16636
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14092": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16654,
        16692
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3714"
    },
    "14095": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16682,
        16691
      ],
      "op": "DUP9",
      "path": "23"
    },
    "14096": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16654,
        16681
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3287"
    },
    "14099": {
      "fn": "AlphaVault._amountsForLiquidity",
      "jump": "i",
      "offset": [
        16654,
        16692
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14100": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16654,
        16692
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14101": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16710,
        16719
      ],
      "op": "DUP8",
      "path": "23"
    },
    "14102": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16511,
        16550
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x37F5"
    },
    "14105": {
      "fn": "AlphaVault._amountsForLiquidity",
      "jump": "i",
      "offset": [
        16511,
        16733
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14106": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16511,
        16733
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14107": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16492,
        16733
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "14108": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16492,
        16733
      ],
      "op": "POP",
      "path": "23"
    },
    "14109": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16492,
        16733
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "14110": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16492,
        16733
      ],
      "op": "POP",
      "path": "23"
    },
    "14111": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16492,
        16733
      ],
      "op": "POP",
      "path": "23"
    },
    "14112": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16269,
        16740
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "14113": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16269,
        16740
      ],
      "op": "POP",
      "path": "23"
    },
    "14114": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16269,
        16740
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "14115": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16269,
        16740
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14116": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16269,
        16740
      ],
      "op": "POP",
      "path": "23"
    },
    "14117": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        16269,
        16740
      ],
      "op": "POP",
      "path": "23"
    },
    "14118": {
      "fn": "AlphaVault._amountsForLiquidity",
      "jump": "o",
      "offset": [
        16269,
        16740
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14119": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17392,
        17529
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14120": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17446,
        17453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14126": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14128": {
      "op": "SHL"
    },
    "14129": {
      "op": "SUB"
    },
    "14130": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17472,
        17494
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 174
    },
    "14131": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17472,
        17494
      ],
      "op": "GT",
      "path": "23"
    },
    "14132": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17472,
        17494
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14133": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17465,
        17495
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x373A"
    },
    "14136": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17465,
        17495
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14137": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17465,
        17495
      ],
      "op": "INVALID",
      "path": "23"
    },
    "14138": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17465,
        17495
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14139": {
      "op": "POP"
    },
    "14140": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        17520,
        17521
      ],
      "op": "SWAP1",
      "path": "23",
      "statement": 175
    },
    "14141": {
      "fn": "AlphaVault._toUint128",
      "jump": "o",
      "offset": [
        17392,
        17529
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14142": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14143": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "14145": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 176,
      "value": "0x374D"
    },
    "14148": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14149": {
      "fn": "Address.functionCall",
      "offset": [
        3745,
        3749
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14150": {
      "fn": "Address.functionCall",
      "offset": [
        3751,
        3752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14152": {
      "fn": "Address.functionCall",
      "offset": [
        3754,
        3766
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14153": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3891"
    },
    "14156": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14157": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14158": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "14159": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "14160": {
      "op": "POP"
    },
    "14161": {
      "op": "POP"
    },
    "14162": {
      "op": "POP"
    },
    "14163": {
      "op": "POP"
    },
    "14164": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14165": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1085,
        1560
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14166": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1233,
        1250
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14168": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1282,
        1295
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14175": {
      "op": "SHL"
    },
    "14176": {
      "op": "SUB"
    },
    "14177": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1266,
        1295
      ],
      "op": "AND",
      "path": "20"
    },
    "14178": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1266,
        1279
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14185": {
      "op": "SHL"
    },
    "14186": {
      "op": "SUB"
    },
    "14187": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1266,
        1295
      ],
      "op": "AND",
      "path": "20"
    },
    "14188": {
      "branch": 274,
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1266,
        1295
      ],
      "op": "GT",
      "path": "20"
    },
    "14189": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1262,
        1360
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14190": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1262,
        1360
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3775"
    },
    "14193": {
      "branch": 274,
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1262,
        1360
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14194": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1331,
        1344
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 177
    },
    "14195": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1331,
        1344
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14196": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1346,
        1359
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14197": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1262,
        1360
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14198": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1370,
        1390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14200": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1456
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3798"
    },
    "14203": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14210": {
      "op": "SHL"
    },
    "14211": {
      "op": "SUB"
    },
    "14212": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1456
      ],
      "op": "AND",
      "path": "20"
    },
    "14213": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1424,
        1437
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14220": {
      "op": "SHL"
    },
    "14221": {
      "op": "SUB"
    },
    "14222": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1456
      ],
      "op": "AND",
      "path": "20"
    },
    "14223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14227": {
      "op": "SHL"
    },
    "14228": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1408
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x39EC"
    },
    "14231": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "jump": "i",
      "offset": [
        1393,
        1456
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14232": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1456
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14233": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1370,
        1456
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14234": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1370,
        1456
      ],
      "op": "POP",
      "path": "20"
    },
    "14235": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1473,
        1553
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 178,
      "value": "0x3674"
    },
    "14238": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1483,
        1552
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37B3"
    },
    "14241": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1499,
        1506
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14242": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1508,
        1520
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14243": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1538,
        1551
      ],
      "op": "DUP9",
      "path": "20"
    },
    "14244": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1522,
        1535
      ],
      "op": "DUP9",
      "path": "20"
    },
    "14245": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1522,
        1551
      ],
      "op": "SUB",
      "path": "20"
    },
    "14246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14252": {
      "op": "SHL"
    },
    "14253": {
      "op": "SUB"
    },
    "14254": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1483,
        1552
      ],
      "op": "AND",
      "path": "20"
    },
    "14255": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1483,
        1498
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x39EC"
    },
    "14258": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "jump": "i",
      "offset": [
        1483,
        1552
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14259": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1483,
        1552
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14260": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1473,
        1482
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A9B"
    },
    "14263": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "jump": "i",
      "offset": [
        1473,
        1553
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14264": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        1999,
        2382
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14265": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2147,
        2164
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14267": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2196,
        2209
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14274": {
      "op": "SHL"
    },
    "14275": {
      "op": "SUB"
    },
    "14276": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2180,
        2209
      ],
      "op": "AND",
      "path": "20"
    },
    "14277": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2180,
        2193
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14284": {
      "op": "SHL"
    },
    "14285": {
      "op": "SUB"
    },
    "14286": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2180,
        2209
      ],
      "op": "AND",
      "path": "20"
    },
    "14287": {
      "branch": 275,
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2180,
        2209
      ],
      "op": "GT",
      "path": "20"
    },
    "14288": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2176,
        2274
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14289": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2176,
        2274
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37D8"
    },
    "14292": {
      "branch": 275,
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2176,
        2274
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14293": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2245,
        2258
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 179
    },
    "14294": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2245,
        2258
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14295": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2260,
        2273
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14296": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2176,
        2274
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14297": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2291,
        2375
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 180,
      "value": "0x374D"
    },
    "14300": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2301,
        2374
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37B3"
    },
    "14303": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2317,
        2324
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14306": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14308": {
      "op": "SHL"
    },
    "14309": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2360,
        2373
      ],
      "op": "DUP8",
      "path": "20"
    },
    "14310": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2344,
        2357
      ],
      "op": "DUP8",
      "path": "20"
    },
    "14311": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2344,
        2373
      ],
      "op": "SUB",
      "path": "20"
    },
    "14312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14318": {
      "op": "SHL"
    },
    "14319": {
      "op": "SUB"
    },
    "14320": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2301,
        2374
      ],
      "op": "AND",
      "path": "20"
    },
    "14321": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2301,
        2316
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x39EC"
    },
    "14324": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "jump": "i",
      "offset": [
        2301,
        2374
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14325": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14326": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6193,
        6208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14328": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6210,
        6225
      ],
      "op": "DUP1",
      "path": "20"
    },
    "14329": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6257,
        6270
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14336": {
      "op": "SHL"
    },
    "14337": {
      "op": "SUB"
    },
    "14338": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6241,
        6270
      ],
      "op": "AND",
      "path": "20"
    },
    "14339": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6241,
        6254
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14346": {
      "op": "SHL"
    },
    "14347": {
      "op": "SUB"
    },
    "14348": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6241,
        6270
      ],
      "op": "AND",
      "path": "20"
    },
    "14349": {
      "branch": 276,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6241,
        6270
      ],
      "op": "GT",
      "path": "20"
    },
    "14350": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6237,
        6335
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14351": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6237,
        6335
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3816"
    },
    "14354": {
      "branch": 276,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6237,
        6335
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14355": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6306,
        6319
      ],
      "op": "SWAP3",
      "path": "20",
      "statement": 181
    },
    "14356": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6306,
        6319
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "14357": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6321,
        6334
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14358": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6237,
        6335
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14359": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14366": {
      "op": "SHL"
    },
    "14367": {
      "op": "SUB"
    },
    "14368": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6350,
        6379
      ],
      "op": "AND",
      "path": "20"
    },
    "14369": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6350,
        6362
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14376": {
      "op": "SHL"
    },
    "14377": {
      "op": "SUB"
    },
    "14378": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6350,
        6379
      ],
      "op": "AND",
      "path": "20"
    },
    "14379": {
      "branch": 277,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6350,
        6379
      ],
      "op": "GT",
      "path": "20"
    },
    "14380": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3841"
    },
    "14383": {
      "branch": 277,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14384": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6405,
        6468
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 182,
      "value": "0x383A"
    },
    "14387": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6428,
        6441
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14388": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6443,
        6456
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14389": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6458,
        6467
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14390": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6405,
        6427
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AB1"
    },
    "14393": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6405,
        6468
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14394": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6405,
        6468
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14395": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6395,
        6468
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14396": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6395,
        6468
      ],
      "op": "POP",
      "path": "20"
    },
    "14397": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3888"
    },
    "14400": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14401": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14402": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6504,
        6517
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14409": {
      "op": "SHL"
    },
    "14410": {
      "op": "SUB"
    },
    "14411": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6489,
        6517
      ],
      "op": "AND",
      "path": "20"
    },
    "14412": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6489,
        6501
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14419": {
      "op": "SHL"
    },
    "14420": {
      "op": "SUB"
    },
    "14421": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6489,
        6517
      ],
      "op": "AND",
      "path": "20"
    },
    "14422": {
      "branch": 278,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6489,
        6517
      ],
      "op": "LT",
      "path": "20"
    },
    "14423": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14424": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x387A"
    },
    "14427": {
      "branch": 278,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14428": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6543,
        6605
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 183,
      "value": "0x3866"
    },
    "14431": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6566,
        6578
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14432": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6580,
        6593
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14433": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6595,
        6604
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14434": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6543,
        6565
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AB1"
    },
    "14437": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6543,
        6605
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14438": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6543,
        6605
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14439": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6533,
        6605
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14440": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6533,
        6605
      ],
      "op": "POP",
      "path": "20"
    },
    "14441": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6629,
        6691
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 184,
      "value": "0x3873"
    },
    "14444": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6652,
        6665
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14445": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6667,
        6679
      ],
      "op": "DUP8",
      "path": "20"
    },
    "14446": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6681,
        6690
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14447": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6629,
        6651
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B1A"
    },
    "14450": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6629,
        6691
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14451": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6629,
        6691
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14452": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6619,
        6691
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14453": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6619,
        6691
      ],
      "op": "POP",
      "path": "20"
    },
    "14454": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3888"
    },
    "14457": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14458": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14459": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6732,
        6795
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 185,
      "value": "0x3885"
    },
    "14462": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6755,
        6768
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14463": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6770,
        6783
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14464": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6785,
        6794
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14465": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6732,
        6754
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B1A"
    },
    "14468": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6732,
        6795
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14469": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6732,
        6795
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14470": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6722,
        6795
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14471": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6722,
        6795
      ],
      "op": "POP",
      "path": "20"
    },
    "14472": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14473": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "14474": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "POP",
      "path": "20"
    },
    "14475": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "14476": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14477": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "POP",
      "path": "20"
    },
    "14478": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "POP",
      "path": "20"
    },
    "14479": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "POP",
      "path": "20"
    },
    "14480": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "o",
      "offset": [
        6013,
        6812
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14482": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "14484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4792,
        4797
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 186
    },
    "14485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4788
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "14486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "LT",
      "path": "5"
    },
    "14487": {
      "branch": 257,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38D2"
    },
    "14491": {
      "branch": 257,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14492": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14499": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14501": {
      "op": "SHL"
    },
    "14502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14506": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "14507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14509": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14511": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "14512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "5"
    },
    "14515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14516": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14517": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "14519": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "14524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C57"
    },
    "14528": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "14530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "14532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14534": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "14535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "5"
    },
    "14537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "5"
    },
    "14538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "5"
    },
    "14544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 187,
      "value": "0x38DB"
    },
    "14550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4869,
        4875
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4868
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B5D"
    },
    "14554": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14555": {
      "branch": 258,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14556": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x392C"
    },
    "14559": {
      "branch": 258,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14560": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14562": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14563": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14570": {
      "op": "SHL"
    },
    "14571": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14573": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14575": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14577": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "14579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14580": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1D"
    },
    "14582": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "14584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14585": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "14586": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14587": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "14620": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "14622": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14623": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "14624": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14625": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14626": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14627": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14629": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14630": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SUB",
      "path": "5"
    },
    "14631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "14633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "14634": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14635": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14639": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5018
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14640": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14647": {
      "op": "SHL"
    },
    "14648": {
      "op": "SUB"
    },
    "14649": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5033
      ],
      "op": "AND",
      "path": "5"
    },
    "14650": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5047
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14651": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5054
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14654": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14655": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14656": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14657": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14658": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14659": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14660": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14665": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14667": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14670": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14671": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "LT",
      "path": "5"
    },
    "14672": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x396A"
    },
    "14675": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14678": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14679": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14680": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14682": {
      "op": "NOT"
    },
    "14683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14684": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14692": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14693": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14694": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x394B"
    },
    "14697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14699": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "14701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "5"
    },
    "14705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "14708": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EXP",
      "path": "5"
    },
    "14709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "5"
    },
    "14710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "5"
    },
    "14712": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14714": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "5"
    },
    "14715": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14716": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "5"
    },
    "14719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14720": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14721": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "OR",
      "path": "5"
    },
    "14722": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14729": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14736": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14741": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14742": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14743": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "5"
    },
    "14744": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14746": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14747": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "GAS",
      "path": "5"
    },
    "14748": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "CALL",
      "path": "5"
    },
    "14749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14751": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14752": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14753": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "14754": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14757": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14758": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EQ",
      "path": "5"
    },
    "14759": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39CC"
    },
    "14762": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14763": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14765": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14766": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14767": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14768": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "14770": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "5"
    },
    "14771": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "14773": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "14774": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14775": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "5"
    },
    "14776": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14777": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14778": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14780": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14781": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "14782": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14783": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14784": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "14785": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14787": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14789": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14791": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "14792": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39D1"
    },
    "14795": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14796": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14797": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "14799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14801": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14804": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14805": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14806": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 188,
      "value": "0x39E1"
    },
    "14810": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14811": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5109
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14812": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5111,
        5123
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14813": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B63"
    },
    "14816": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14817": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14818": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5124
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "14819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "14820": {
      "op": "POP"
    },
    "14821": {
      "op": "POP"
    },
    "14822": {
      "op": "POP"
    },
    "14823": {
      "op": "POP"
    },
    "14824": {
      "op": "POP"
    },
    "14825": {
      "op": "POP"
    },
    "14826": {
      "op": "POP"
    },
    "14827": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14828": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14829": {
      "fn": "FullMath.mulDiv",
      "offset": [
        854,
        868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14831": {
      "fn": "FullMath.mulDiv",
      "offset": [
        854,
        868
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14832": {
      "fn": "FullMath.mulDiv",
      "offset": [
        854,
        868
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14835": {
      "op": "NOT"
    },
    "14836": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1361,
        1362
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14837": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1358,
        1359
      ],
      "op": "DUP8",
      "path": "18"
    },
    "14838": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1351,
        1371
      ],
      "op": "MULMOD",
      "path": "18"
    },
    "14839": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1393,
        1402
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14840": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1393,
        1402
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14841": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1393,
        1402
      ],
      "op": "MUL",
      "path": "18"
    },
    "14842": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1393,
        1402
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14843": {
      "op": "POP"
    },
    "14844": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1444,
        1457
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14845": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1444,
        1457
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14846": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1444,
        1457
      ],
      "op": "LT",
      "path": "18"
    },
    "14847": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1428,
        1442
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14848": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1428,
        1442
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14849": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1428,
        1442
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14850": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1428,
        1442
      ],
      "op": "SUB",
      "path": "18"
    },
    "14851": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1424,
        1458
      ],
      "op": "SUB",
      "path": "18"
    },
    "14852": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1424,
        1458
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14853": {
      "op": "POP"
    },
    "14854": {
      "branch": 267,
      "fn": "FullMath.mulDiv",
      "offset": [
        1540,
        1550
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14855": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1536,
        1715
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A22"
    },
    "14858": {
      "branch": 267,
      "fn": "FullMath.mulDiv",
      "offset": [
        1536,
        1715
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14859": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1588,
        1589
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 189,
      "value": "0x0"
    },
    "14861": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1574,
        1585
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14862": {
      "branch": 268,
      "fn": "FullMath.mulDiv",
      "offset": [
        1574,
        1589
      ],
      "op": "GT",
      "path": "18"
    },
    "14863": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A17"
    },
    "14866": {
      "branch": 268,
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14867": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14869": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14870": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "REVERT",
      "path": "18"
    },
    "14871": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14872": {
      "op": "POP"
    },
    "14873": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1641,
        1664
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14874": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1641,
        1664
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14875": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1641,
        1664
      ],
      "op": "DIV",
      "path": "18"
    },
    "14876": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1641,
        1664
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14877": {
      "op": "POP"
    },
    "14878": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1691,
        1704
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 190,
      "value": "0xAC5"
    },
    "14881": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1691,
        1704
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14882": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1536,
        1715
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14883": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1842,
        1847
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 191
    },
    "14884": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1828,
        1839
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14885": {
      "branch": 269,
      "fn": "FullMath.mulDiv",
      "offset": [
        1828,
        1847
      ],
      "op": "GT",
      "path": "18"
    },
    "14886": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A2E"
    },
    "14889": {
      "branch": 269,
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14890": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14892": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14893": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "REVERT",
      "path": "18"
    },
    "14894": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14895": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2125,
        2142
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14897": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2201,
        2212
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14898": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2198,
        2199
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14899": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2195,
        2196
      ],
      "op": "DUP9",
      "path": "18"
    },
    "14900": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2188,
        2213
      ],
      "op": "MULMOD",
      "path": "18"
    },
    "14901": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2553,
        2565
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14903": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2580
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14904": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2580
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14905": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2580
      ],
      "op": "SUB",
      "path": "18"
    },
    "14906": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2594
      ],
      "op": "DUP8",
      "path": "18"
    },
    "14907": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2594
      ],
      "op": "AND",
      "path": "18"
    },
    "14908": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "14909": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "DUP8",
      "path": "18"
    },
    "14910": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14911": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "DIV",
      "path": "18"
    },
    "14912": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "14913": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3491,
        3492
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "14915": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3472,
        3473
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "14917": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3472,
        3487
      ],
      "op": "DUP10",
      "path": "18"
    },
    "14918": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3472,
        3487
      ],
      "op": "MUL",
      "path": "18"
    },
    "14919": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3471,
        3492
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14920": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3471,
        3492
      ],
      "op": "XOR",
      "path": "18"
    },
    "14921": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 192
    },
    "14922": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP11",
      "path": "18"
    },
    "14923": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "18"
    },
    "14924": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3714,
        3735
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14925": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3714,
        3735
      ],
      "op": "SUB",
      "path": "18"
    },
    "14926": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3707,
        3735
      ],
      "op": "MUL",
      "path": "18"
    },
    "14927": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3776,
        3793
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 193
    },
    "14928": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3776,
        3793
      ],
      "op": "DUP11",
      "path": "18"
    },
    "14929": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3776,
        3793
      ],
      "op": "MUL",
      "path": "18"
    },
    "14930": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3772,
        3793
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14931": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3772,
        3793
      ],
      "op": "SUB",
      "path": "18"
    },
    "14932": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3765,
        3793
      ],
      "op": "MUL",
      "path": "18"
    },
    "14933": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3835,
        3852
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 194
    },
    "14934": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3835,
        3852
      ],
      "op": "DUP11",
      "path": "18"
    },
    "14935": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3835,
        3852
      ],
      "op": "MUL",
      "path": "18"
    },
    "14936": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3831,
        3852
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14937": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3831,
        3852
      ],
      "op": "SUB",
      "path": "18"
    },
    "14938": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3824,
        3852
      ],
      "op": "MUL",
      "path": "18"
    },
    "14939": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3894,
        3911
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 195
    },
    "14940": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3894,
        3911
      ],
      "op": "DUP11",
      "path": "18"
    },
    "14941": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3894,
        3911
      ],
      "op": "MUL",
      "path": "18"
    },
    "14942": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3890,
        3911
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14943": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3890,
        3911
      ],
      "op": "SUB",
      "path": "18"
    },
    "14944": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3883,
        3911
      ],
      "op": "MUL",
      "path": "18"
    },
    "14945": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3953,
        3970
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 196
    },
    "14946": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3953,
        3970
      ],
      "op": "DUP11",
      "path": "18"
    },
    "14947": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3953,
        3970
      ],
      "op": "MUL",
      "path": "18"
    },
    "14948": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3949,
        3970
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14949": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3949,
        3970
      ],
      "op": "SUB",
      "path": "18"
    },
    "14950": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3942,
        3970
      ],
      "op": "MUL",
      "path": "18"
    },
    "14951": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4013,
        4030
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 197
    },
    "14952": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4013,
        4030
      ],
      "op": "DUP11",
      "path": "18"
    },
    "14953": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4013,
        4030
      ],
      "op": "MUL",
      "path": "18"
    },
    "14954": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4009,
        4030
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14955": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4009,
        4030
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14956": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4009,
        4030
      ],
      "op": "SUB",
      "path": "18"
    },
    "14957": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4002,
        4030
      ],
      "op": "MUL",
      "path": "18"
    },
    "14958": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3060,
        3072
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14959": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3060,
        3072
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14960": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3060,
        3072
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14961": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3060,
        3072
      ],
      "op": "SUB",
      "path": "18"
    },
    "14962": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3056,
        3079
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14963": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3056,
        3079
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14964": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3056,
        3079
      ],
      "op": "DIV",
      "path": "18"
    },
    "14965": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3081,
        3082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "14967": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3052,
        3083
      ],
      "op": "ADD",
      "path": "18"
    },
    "14968": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2330,
        2350
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14969": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2330,
        2350
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14970": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2330,
        2350
      ],
      "op": "GT",
      "path": "18"
    },
    "14971": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2319,
        2351
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14972": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2319,
        2351
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "14973": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2319,
        2351
      ],
      "op": "SUB",
      "path": "18"
    },
    "14974": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3111,
        3123
      ],
      "op": "SWAP5",
      "path": "18",
      "statement": 198
    },
    "14975": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3111,
        3123
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14976": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3111,
        3123
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "14977": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3111,
        3123
      ],
      "op": "MUL",
      "path": "18"
    },
    "14978": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2373,
        2394
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14979": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2373,
        2394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14980": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2373,
        2394
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "14981": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2373,
        2394
      ],
      "op": "SUB",
      "path": "18"
    },
    "14982": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2816,
        2832
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14983": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2816,
        2832
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14984": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2816,
        2832
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14985": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2816,
        2832
      ],
      "op": "DIV",
      "path": "18"
    },
    "14986": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3102,
        3123
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14987": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3102,
        3123
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14988": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3102,
        3123
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14989": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3102,
        3123
      ],
      "op": "OR",
      "path": "18"
    },
    "14990": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "SWAP2",
      "path": "18",
      "statement": 199
    },
    "14991": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14992": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14993": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "MUL",
      "path": "18"
    },
    "14994": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14995": {
      "op": "POP"
    },
    "14996": {
      "op": "POP"
    },
    "14997": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "14998": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14999": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "POP",
      "path": "18"
    },
    "15000": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "POP",
      "path": "18"
    },
    "15001": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "POP",
      "path": "18"
    },
    "15002": {
      "fn": "FullMath.mulDiv",
      "jump": "o",
      "offset": [
        742,
        4518
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15003": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        507,
        617
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15004": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        608,
        609
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 200
    },
    "15005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15009": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15011": {
      "op": "SHL"
    },
    "15012": {
      "op": "SUB"
    },
    "15013": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        588,
        609
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15014": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        588,
        609
      ],
      "op": "AND",
      "path": "20"
    },
    "15015": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        588,
        609
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15016": {
      "branch": 279,
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        588,
        609
      ],
      "op": "EQ",
      "path": "20"
    },
    "15017": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x113D"
    },
    "15020": {
      "branch": 279,
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15021": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15023": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15024": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15025": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4241,
        4739
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15026": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4391,
        4406
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15028": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4438,
        4451
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15035": {
      "op": "SHL"
    },
    "15036": {
      "op": "SUB"
    },
    "15037": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4422,
        4451
      ],
      "op": "AND",
      "path": "20"
    },
    "15038": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4422,
        4435
      ],
      "op": "DUP5",
      "path": "20"
    },
    "15039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15045": {
      "op": "SHL"
    },
    "15046": {
      "op": "SUB"
    },
    "15047": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4422,
        4451
      ],
      "op": "AND",
      "path": "20"
    },
    "15048": {
      "branch": 280,
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4422,
        4451
      ],
      "op": "GT",
      "path": "20"
    },
    "15049": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4418,
        4516
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15050": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4418,
        4516
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AD1"
    },
    "15053": {
      "branch": 280,
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4418,
        4516
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15054": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4487,
        4500
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 201
    },
    "15055": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4487,
        4500
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "15056": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4502,
        4515
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15057": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4418,
        4516
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15058": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4719,
        4732
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 202
    },
    "15059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15065": {
      "op": "SHL"
    },
    "15066": {
      "op": "SUB"
    },
    "15067": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "AND",
      "path": "20"
    },
    "15068": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B0A"
    },
    "15071": {
      "offset": [
        309,
        311
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "15073": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4624
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "15075": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4624
      ],
      "op": "AND",
      "path": "20"
    },
    "15076": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4587,
        4596
      ],
      "op": "DUP5",
      "path": "20"
    },
    "15077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15081": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15083": {
      "op": "SHL"
    },
    "15084": {
      "op": "SUB"
    },
    "15085": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4597
      ],
      "op": "AND",
      "path": "20"
    },
    "15086": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4624
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15087": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4624
      ],
      "op": "SHL",
      "path": "20"
    },
    "15088": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4658,
        4671
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15089": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4642,
        4655
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15090": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4642,
        4671
      ],
      "op": "SUB",
      "path": "20"
    },
    "15091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15097": {
      "op": "SHL"
    },
    "15098": {
      "op": "SUB"
    },
    "15099": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4716
      ],
      "op": "AND",
      "path": "20"
    },
    "15100": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4689,
        4702
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15107": {
      "op": "SHL"
    },
    "15108": {
      "op": "SUB"
    },
    "15109": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4716
      ],
      "op": "AND",
      "path": "20"
    },
    "15110": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4561
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x39EC"
    },
    "15113": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "jump": "i",
      "offset": [
        4546,
        4716
      ],
      "op": "JUMP",
      "path": "20"
    },
    "15114": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4716
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15115": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15116": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B11"
    },
    "15119": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15120": {
      "dev": "Division by zero",
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "INVALID",
      "path": "20"
    },
    "15121": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15122": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "DIV",
      "path": "20"
    },
    "15123": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "15124": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4241,
        4739
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "15125": {
      "op": "POP"
    },
    "15126": {
      "op": "POP"
    },
    "15127": {
      "op": "POP"
    },
    "15128": {
      "op": "POP"
    },
    "15129": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "jump": "o",
      "offset": [
        4241,
        4739
      ],
      "op": "JUMP",
      "path": "20"
    },
    "15130": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5097,
        5472
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15131": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5247,
        5262
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15133": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5294,
        5307
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15140": {
      "op": "SHL"
    },
    "15141": {
      "op": "SUB"
    },
    "15142": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5278,
        5307
      ],
      "op": "AND",
      "path": "20"
    },
    "15143": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5278,
        5291
      ],
      "op": "DUP5",
      "path": "20"
    },
    "15144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15150": {
      "op": "SHL"
    },
    "15151": {
      "op": "SUB"
    },
    "15152": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5278,
        5307
      ],
      "op": "AND",
      "path": "20"
    },
    "15153": {
      "branch": 281,
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5278,
        5307
      ],
      "op": "GT",
      "path": "20"
    },
    "15154": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5274,
        5372
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15155": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5274,
        5372
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B3A"
    },
    "15158": {
      "branch": 281,
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5274,
        5372
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15159": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5343,
        5356
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 203
    },
    "15160": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5343,
        5356
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "15161": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5358,
        5371
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15162": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5274,
        5372
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15163": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5390,
        5465
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 204,
      "value": "0x374D"
    },
    "15166": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5406,
        5415
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15171": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15173": {
      "op": "SHL"
    },
    "15174": {
      "op": "SUB"
    },
    "15175": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5390,
        5465
      ],
      "op": "AND",
      "path": "20"
    },
    "15176": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5433,
        5446
      ],
      "op": "DUP6",
      "path": "20"
    },
    "15177": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5417,
        5430
      ],
      "op": "DUP6",
      "path": "20"
    },
    "15178": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5417,
        5446
      ],
      "op": "SUB",
      "path": "20"
    },
    "15179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15185": {
      "op": "SHL"
    },
    "15186": {
      "op": "SUB"
    },
    "15187": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5390,
        5465
      ],
      "op": "AND",
      "path": "20"
    },
    "15188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15190": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15192": {
      "op": "SHL"
    },
    "15193": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5390,
        5405
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x39EC"
    },
    "15196": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "jump": "i",
      "offset": [
        5390,
        5465
      ],
      "op": "JUMP",
      "path": "20"
    },
    "15197": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15198": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "15199": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "5",
      "statement": 205
    },
    "15200": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15201": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15202": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15203": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15204": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "15206": {
      "branch": 259,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15207": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15208": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B72"
    },
    "15211": {
      "branch": 259,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15212": {
      "op": "POP"
    },
    "15213": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 206
    },
    "15214": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC5"
    },
    "15217": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15218": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15219": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15220": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15221": {
      "branch": 260,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15222": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B82"
    },
    "15225": {
      "branch": 260,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15226": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15227": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15228": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15229": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15230": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15232": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "5"
    },
    "15233": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15234": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15235": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 207,
      "value": "0x40"
    },
    "15237": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15244": {
      "op": "SHL"
    },
    "15245": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15246": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15247": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15249": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15251": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15252": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15253": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15254": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15255": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15256": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15257": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15258": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "15260": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15261": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15262": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15263": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15264": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15265": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15266": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "15267": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15268": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15269": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15270": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15271": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "15273": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15274": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15275": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15276": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15277": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15278": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15279": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15280": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15281": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15282": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15284": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15285": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15286": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22C0"
    },
    "15289": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15290": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15291": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15292": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15293": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15294": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15295": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15296": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15297": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15298": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15300": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15301": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22A8"
    },
    "15304": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "5"
    }
  },
  "sha1": "57aebf623689f871092ce56d194e219b515b5f2e",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity 0.7.6;\n\nimport \"@openzeppelin/contracts/math/Math.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@uniswap/v3-core/contracts/libraries/TickMath.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/LiquidityAmounts.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/PositionKey.sol\";\n\nimport \"../interfaces/IVault.sol\";\n\n/**\n * @title   Alpha Vault\n * @notice  A vault that provides liquidity on Uniswap V3.\n */\ncontract AlphaVault is IVault, IUniswapV3MintCallback, ERC20, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    event Deposit(\n        address indexed sender,\n        address indexed to,\n        uint256 shares,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    event Withdraw(\n        address indexed sender,\n        address indexed to,\n        uint256 shares,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    event CollectFees(\n        uint256 feesFromPool0,\n        uint256 feesFromPool1,\n        uint256 feesToProtocol0,\n        uint256 feesToProtocol1\n    );\n\n    event Snapshot(int24 tick, uint256 totalAmount0, uint256 totalAmount1, uint256 totalSupply);\n\n    IUniswapV3Pool public pool;\n    IERC20 public immutable token0;\n    IERC20 public immutable token1;\n    int24 public immutable tickSpacing;\n\n    uint256 public protocolFee;\n    uint256 public maxTotalSupply;\n    address public strategy;\n    address public governance;\n    address public pendingGovernance;\n    bool public finalized;\n\n    int24 public baseLower;\n    int24 public baseUpper;\n    int24 public limitLower;\n    int24 public limitUpper;\n    uint256 public accruedProtocolFees0;\n    uint256 public accruedProtocolFees1;\n\n    /**\n     * @dev After deploying, strategy needs to be set via `setStrategy()`\n     * @param _pool Underlying Uniswap V3 pool\n     * @param _protocolFee Protocol fee expressed as multiple of 1e-6\n     * @param _maxTotalSupply Pause deposits if total supply exceeds this\n     */\n    constructor(\n        address _pool,\n        uint256 _protocolFee,\n        uint256 _maxTotalSupply\n    ) ERC20(\"Alpha Vault\", \"AV\") {\n        pool = IUniswapV3Pool(_pool);\n        token0 = IERC20(pool.token0());\n        token1 = IERC20(pool.token1());\n        tickSpacing = pool.tickSpacing();\n\n        protocolFee = _protocolFee;\n        maxTotalSupply = _maxTotalSupply;\n        governance = msg.sender;\n\n        require(_protocolFee < 1e6, \"protocolFee\");\n    }\n\n    /**\n     * @notice Deposits tokens in proportion to the vault's current holdings.\n     * @dev These tokens sit in the vault and are not used for liquidity on\n     * Uniswap until the next rebalance. Also note it's not necessary to check\n     * if user manipulated price to deposit cheaper, as the value of range\n     * orders can only by manipulated higher.\n     * @param amount0Desired Max amount of token0 to deposit\n     * @param amount1Desired Max amount of token1 to deposit\n     * @param amount0Min Revert if resulting `amount0` is less than this\n     * @param amount1Min Revert if resulting `amount1` is less than this\n     * @param to Recipient of shares\n     * @return shares Number of shares minted\n     * @return amount0 Amount of token0 deposited\n     * @return amount1 Amount of token1 deposited\n     */\n    function deposit(\n        uint256 amount0Desired,\n        uint256 amount1Desired,\n        uint256 amount0Min,\n        uint256 amount1Min,\n        address to\n    )\n        external\n        override\n        nonReentrant\n        returns (\n            uint256 shares,\n            uint256 amount0,\n            uint256 amount1\n        )\n    {\n        require(amount0Desired > 0 || amount1Desired > 0, \"amount0Desired or amount1Desired\");\n        require(to != address(0) && to != address(this), \"to\");\n\n        // Do zero-burns to poke the Uniswap pools so earned fees are updated\n        if (_positionLiquidity(baseLower, baseUpper) > 0) {\n            pool.burn(baseLower, baseUpper, 0);\n        }\n        if (_positionLiquidity(limitLower, limitUpper) > 0) {\n            pool.burn(limitLower, limitUpper, 0);\n        }\n\n        (shares, amount0, amount1) = _calcSharesAndAmounts(amount0Desired, amount1Desired);\n        require(shares > 0, \"shares\");\n        require(amount0 >= amount0Min, \"amount0Min\");\n        require(amount1 >= amount1Min, \"amount1Min\");\n\n        // Pull in tokens from sender\n        if (amount0 > 0) token0.safeTransferFrom(msg.sender, address(this), amount0);\n        if (amount1 > 0) token1.safeTransferFrom(msg.sender, address(this), amount1);\n\n        // Mint shares to recipient\n        _mint(to, shares);\n        emit Deposit(msg.sender, to, shares, amount0, amount1);\n        require(totalSupply() <= maxTotalSupply, \"maxTotalSupply\");\n    }\n\n    // @dev Calculates the largest possible `amount0` and `amount1` such that\n    // they're in the same proportion as total amounts, but not greater than\n    // `amount0Desired` and `amount1Desired` respectively.\n    function _calcSharesAndAmounts(uint256 amount0Desired, uint256 amount1Desired)\n        internal\n        view\n        returns (\n            uint256 shares,\n            uint256 amount0,\n            uint256 amount1\n        )\n    {\n        uint256 totalSupply = totalSupply();\n        (uint256 total0, uint256 total1) = getTotalAmounts();\n\n        // If total supply > 0, vault can't be empty\n        assert(totalSupply == 0 || total0 > 0 || total1 > 0);\n\n        if (totalSupply == 0) {\n            // For first deposit, just use the amounts desired\n            amount0 = amount0Desired;\n            amount1 = amount1Desired;\n            shares = Math.max(amount0, amount1);\n        } else if (total0 == 0) {\n            amount1 = amount1Desired;\n            shares = amount1.mul(totalSupply).div(total1);\n        } else if (total1 == 0) {\n            amount0 = amount0Desired;\n            shares = amount0.mul(totalSupply).div(total0);\n        } else {\n            uint256 cross = Math.min(amount0Desired.mul(total1), amount1Desired.mul(total0));\n            require(cross > 0, \"cross\");\n\n            // Round up amounts\n            amount0 = cross.sub(1).div(total1).add(1);\n            amount1 = cross.sub(1).div(total0).add(1);\n            shares = cross.mul(totalSupply).div(total0).div(total1);\n        }\n    }\n\n    /**\n     * @notice Withdraws tokens in proportion to the vault's holdings.\n     * @dev Removes proportional amount of liquidity from Uniswap. Note it\n     * doesn't collect share of fees since last rebalance to save gas.\n     * @param shares Shares burned by sender\n     * @param amount0Min Revert if resulting `amount0` is smaller than this\n     * @param amount1Min Revert if resulting `amount1` is smaller than this\n     * @param to Recipient of tokens\n     * @return amount0 Amount of token0 sent to recipient\n     * @return amount1 Amount of token1 sent to recipient\n     */\n    function withdraw(\n        uint256 shares,\n        uint256 amount0Min,\n        uint256 amount1Min,\n        address to\n    ) external override nonReentrant returns (uint256 amount0, uint256 amount1) {\n        require(shares > 0, \"shares\");\n        require(to != address(0) && to != address(this), \"to\");\n\n        // Withdraw proportion of liquidity from Uniswap pool and push\n        // resulting tokens to recipient directly\n        (uint256 baseAmount0, uint256 baseAmount1) =\n            _burnLiquidityShare(baseLower, baseUpper, shares, to);\n        (uint256 limitAmount0, uint256 limitAmount1) =\n            _burnLiquidityShare(limitLower, limitUpper, shares, to);\n\n        // Push tokens proportional to unused balances\n        uint256 totalSupply = totalSupply();\n        uint256 unusedAmount0 = _balance0().mul(shares).div(totalSupply);\n        uint256 unusedAmount1 = _balance1().mul(shares).div(totalSupply);\n        if (unusedAmount0 > 0) token0.safeTransfer(to, unusedAmount0);\n        if (unusedAmount1 > 0) token1.safeTransfer(to, unusedAmount1);\n\n        // Sum up total amounts sent to recipient\n        amount0 = baseAmount0.add(limitAmount0).add(unusedAmount0);\n        amount1 = baseAmount1.add(limitAmount1).add(unusedAmount1);\n        require(amount0 >= amount0Min, \"amount0Min\");\n        require(amount1 >= amount1Min, \"amount1Min\");\n\n        // Burn shares\n        _burn(msg.sender, shares);\n        emit Withdraw(msg.sender, to, shares, amount0, amount1);\n    }\n\n    /// @dev Withdraws share of liquidity in a range from Uniswap pool. Doesn't\n    /// collect earned fees. Reverts if total supply is 0.\n    function _burnLiquidityShare(\n        int24 tickLower,\n        int24 tickUpper,\n        uint256 shares,\n        address to\n    ) internal returns (uint256 amount0, uint256 amount1) {\n        uint128 position = _positionLiquidity(tickLower, tickUpper);\n        uint256 liquidity = uint256(position).mul(shares).div(totalSupply());\n\n        if (liquidity > 0) {\n            (amount0, amount1) = pool.burn(tickLower, tickUpper, _toUint128(liquidity));\n\n            if (amount0 > 0 || amount1 > 0) {\n                (amount0, amount1) = pool.collect(\n                    to,\n                    tickLower,\n                    tickUpper,\n                    _toUint128(amount0),\n                    _toUint128(amount1)\n                );\n            }\n        }\n    }\n\n    /**\n     * @notice Updates vault's positions. Can only be called by the strategy.\n     * @dev Two orders are placed - a base order and a limit order. The base\n     * order is placed first with as much liquidity as possible. This order\n     * should use up all of one token, leaving only the other one. This excess\n     * amount is then placed as a single-sided bid or ask order.\n     */\n    function rebalance(\n        int24 _baseLower,\n        int24 _baseUpper,\n        int24 _bidLower,\n        int24 _bidUpper,\n        int24 _askLower,\n        int24 _askUpper\n    ) external nonReentrant {\n        require(msg.sender == strategy, \"strategy\");\n        _checkRange(_baseLower, _baseUpper);\n        _checkRange(_bidLower, _bidUpper);\n        _checkRange(_askLower, _askUpper);\n\n        (, int24 tick, , , , , ) = pool.slot0();\n        require(_bidUpper <= tick, \"bidUpper\");\n        require(_askLower > tick, \"askLower\"); // inequality is strict as tick is rounded down\n\n        // Withdraw all current liquidity from Uniswap pool\n        _burnAllLiquidity(baseLower, baseUpper);\n        _burnAllLiquidity(limitLower, limitUpper);\n\n        // Emit snapshot to record balances and supply\n        uint256 balance0 = _balance0();\n        uint256 balance1 = _balance1();\n        emit Snapshot(tick, balance0, balance1, totalSupply());\n\n        // Place base order on Uniswap\n        uint128 liquidity = _liquidityForAmounts(_baseLower, _baseUpper, balance0, balance1);\n        _mintLiquidity(_baseLower, _baseUpper, liquidity);\n        (baseLower, baseUpper) = (_baseLower, _baseUpper);\n\n        balance0 = _balance0();\n        balance1 = _balance1();\n\n        // Place bid or ask order on Uniswap depending on which token is left\n        uint128 bidLiquidity = _liquidityForAmounts(_bidLower, _bidUpper, balance0, balance1);\n        uint128 askLiquidity = _liquidityForAmounts(_askLower, _askUpper, balance0, balance1);\n        if (bidLiquidity > askLiquidity) {\n            _mintLiquidity(_bidLower, _bidUpper, bidLiquidity);\n            (limitLower, limitUpper) = (_bidLower, _bidUpper);\n        } else {\n            _mintLiquidity(_askLower, _askUpper, askLiquidity);\n            (limitLower, limitUpper) = (_askLower, _askUpper);\n        }\n    }\n\n    function _checkRange(int24 tickLower, int24 tickUpper) internal view {\n        int24 _tickSpacing = tickSpacing;\n        require(tickLower < tickUpper, \"tickLower < tickUpper\");\n        require(tickLower >= TickMath.MIN_TICK, \"tickLower too low\");\n        require(tickUpper <= TickMath.MAX_TICK, \"tickUpper too high\");\n        require(tickLower % _tickSpacing == 0, \"tickLower % tickSpacing\");\n        require(tickUpper % _tickSpacing == 0, \"tickUpper % tickSpacing\");\n    }\n\n    /// @dev Withdraws all liquidity in a range from Uniswap pool and collects\n    /// all fees in the process.\n    function _burnAllLiquidity(int24 tickLower, int24 tickUpper) internal {\n        // Burn all liquidity in this range\n        uint256 owed0 = 0;\n        uint256 owed1 = 0;\n        uint128 liquidity = _positionLiquidity(tickLower, tickUpper);\n        if (liquidity > 0) {\n            (owed0, owed1) = pool.burn(tickLower, tickUpper, liquidity);\n        }\n\n        // Collect all owed tokens including earned fees\n        (uint256 collect0, uint256 collect1) =\n            pool.collect(\n                address(this),\n                tickLower,\n                tickUpper,\n                type(uint128).max,\n                type(uint128).max\n            );\n\n        uint256 feesFromPool0 = collect0.sub(owed0);\n        uint256 feesFromPool1 = collect1.sub(owed1);\n        uint256 feesToProtocol0 = 0;\n        uint256 feesToProtocol1 = 0;\n\n        // Update accrued protocol fees\n        uint256 _protocolFee = protocolFee;\n        if (_protocolFee > 0) {\n            feesToProtocol0 = feesFromPool0.mul(_protocolFee).div(1e6);\n            feesToProtocol1 = feesFromPool1.mul(_protocolFee).div(1e6);\n            accruedProtocolFees0 = accruedProtocolFees0.add(feesToProtocol0);\n            accruedProtocolFees1 = accruedProtocolFees1.add(feesToProtocol1);\n        }\n        emit CollectFees(feesFromPool0, feesFromPool1, feesToProtocol0, feesToProtocol1);\n    }\n\n    /// @dev Deposits liquidity in a range on the Uniswap pool.\n    function _mintLiquidity(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) internal {\n        if (liquidity > 0) {\n            pool.mint(address(this), tickLower, tickUpper, liquidity, \"\");\n        }\n    }\n\n    /**\n     * @notice Calculates the vault's total holdings of token0 and token1 - in\n     * other words, how much of each token the vault would hold if it withdrew\n     * all its liquidity from Uniswap.\n     */\n    function getTotalAmounts() public view override returns (uint256 total0, uint256 total1) {\n        (uint256 baseAmount0, uint256 baseAmount1) = _positionAmounts(baseLower, baseUpper);\n        (uint256 limitAmount0, uint256 limitAmount1) = _positionAmounts(limitLower, limitUpper);\n        total0 = _balance0().add(baseAmount0).add(limitAmount0);\n        total1 = _balance1().add(baseAmount1).add(limitAmount1);\n    }\n\n    /// @dev Amount of token0 held as unused balance.\n    function _balance0() internal view returns (uint256) {\n        return token0.balanceOf(address(this)).sub(accruedProtocolFees0);\n    }\n\n    /// @dev Amount of token1 held as unused balance.\n    function _balance1() internal view returns (uint256) {\n        return token1.balanceOf(address(this)).sub(accruedProtocolFees1);\n    }\n\n    /// @dev Amount of liquidity in vault's position.\n    function _positionLiquidity(int24 tickLower, int24 tickUpper)\n        internal\n        view\n        returns (uint128 liquidity)\n    {\n        bytes32 positionKey = PositionKey.compute(address(this), tickLower, tickUpper);\n        (liquidity, , , , ) = pool.positions(positionKey);\n    }\n\n    /// @dev Amounts of token0 and token1 held in vault's position.\n    function _positionAmounts(int24 tickLower, int24 tickUpper)\n        internal\n        view\n        returns (uint256 amount0, uint256 amount1)\n    {\n        bytes32 positionKey = PositionKey.compute(address(this), tickLower, tickUpper);\n        (uint128 liquidity, , , uint128 tokensOwed0, uint128 tokensOwed1) =\n            pool.positions(positionKey);\n\n        (amount0, amount1) = _amountsForLiquidity(tickLower, tickUpper, liquidity);\n        amount0 = amount0.add(uint256(tokensOwed0));\n        amount1 = amount1.add(uint256(tokensOwed1));\n    }\n\n    /// @dev Wrapper around `LiquidityAmounts.getAmountsForLiquidity()`.\n    function _amountsForLiquidity(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) internal view returns (uint256, uint256) {\n        (uint160 sqrtRatioX96, , , , , , ) = pool.slot0();\n        return\n            LiquidityAmounts.getAmountsForLiquidity(\n                sqrtRatioX96,\n                TickMath.getSqrtRatioAtTick(tickLower),\n                TickMath.getSqrtRatioAtTick(tickUpper),\n                liquidity\n            );\n    }\n\n    /// @dev Wrapper around `LiquidityAmounts.getLiquidityForAmounts()`.\n    function _liquidityForAmounts(\n        int24 tickLower,\n        int24 tickUpper,\n        uint256 amount0,\n        uint256 amount1\n    ) internal view returns (uint128) {\n        (uint160 sqrtRatioX96, , , , , , ) = pool.slot0();\n        return\n            LiquidityAmounts.getLiquidityForAmounts(\n                sqrtRatioX96,\n                TickMath.getSqrtRatioAtTick(tickLower),\n                TickMath.getSqrtRatioAtTick(tickUpper),\n                amount0,\n                amount1\n            );\n    }\n\n    /// @dev Casts uint256 to uint128 with overflow check.\n    function _toUint128(uint256 x) internal pure returns (uint128) {\n        assert(x <= type(uint128).max);\n        return uint128(x);\n    }\n\n    /// @dev Callback for Uniswap V3 pool.\n    function uniswapV3MintCallback(\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external override {\n        require(msg.sender == address(pool));\n        if (amount0 > 0) token0.safeTransfer(msg.sender, amount0);\n        if (amount1 > 0) token1.safeTransfer(msg.sender, amount1);\n    }\n\n    /**\n     * @notice Used to collect accumulated protocol fees.\n     */\n    function collectProtocol(\n        uint256 amount0,\n        uint256 amount1,\n        address to\n    ) external onlyGovernance {\n        accruedProtocolFees0 = accruedProtocolFees0.sub(amount0);\n        accruedProtocolFees1 = accruedProtocolFees1.sub(amount1);\n        if (amount0 > 0) token0.safeTransfer(to, amount0);\n        if (amount1 > 0) token1.safeTransfer(to, amount1);\n    }\n\n    /**\n     * @notice Removes tokens accidentally sent to this vault.\n     */\n    function sweep(\n        IERC20 token,\n        uint256 amount,\n        address to\n    ) external onlyGovernance {\n        require(token != token0 && token != token1, \"token\");\n        token.safeTransfer(to, amount);\n    }\n\n    /**\n     * @notice Used to set the strategy contract that determines the position\n     * ranges and calls rebalance(). Must be called after this vault is\n     * deployed.\n     */\n    function setStrategy(address _strategy) external onlyGovernance {\n        strategy = _strategy;\n    }\n\n    /**\n     * @notice Used to change the protocol fee charged on pool fees earned from\n     * Uniswap, expressed as multiple of 1e-6.\n     */\n    function setProtocolFee(uint256 _protocolFee) external onlyGovernance {\n        require(_protocolFee < 1e6, \"protocolFee\");\n        protocolFee = _protocolFee;\n    }\n\n    /**\n     * @notice Used to change deposit cap for a guarded launch or to ensure\n     * vault doesn't grow too large relative to the pool. Cap is on total\n     * supply rather than amounts of token0 and token1 as those amounts\n     * fluctuate naturally over time.\n     */\n    function setMaxTotalSupply(uint256 _maxTotalSupply) external onlyGovernance {\n        maxTotalSupply = _maxTotalSupply;\n    }\n\n    /**\n     * @notice Used to renounce emergency powers. Cannot be undone.\n     */\n    function finalize() external onlyGovernance {\n        finalized = true;\n    }\n\n    /**\n     * @notice Transfers tokens to governance in case of emergency. Cannot be\n     * called if already finalized.\n     */\n    function emergencyWithdraw(IERC20 token, uint256 amount) external onlyGovernance {\n        require(!finalized, \"finalized\");\n        token.safeTransfer(msg.sender, amount);\n    }\n\n    /**\n     * @notice Removes liquidity and transfer tokens to governance in case of\n     * emergency. Cannot be called if already finalized.\n     */\n    function emergencyBurn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) external onlyGovernance {\n        require(!finalized, \"finalized\");\n        pool.burn(tickLower, tickUpper, liquidity);\n        pool.collect(msg.sender, tickLower, tickUpper, type(uint128).max, type(uint128).max);\n    }\n\n    /**\n     * @notice Governance address is not updated until the new governance\n     * address has called `acceptGovernance()` to accept this responsibility.\n     */\n    function setGovernance(address _governance) external onlyGovernance {\n        pendingGovernance = _governance;\n    }\n\n    /**\n     * @notice `setGovernance()` should be called by the existing governance\n     * address prior to calling this function.\n     */\n    function acceptGovernance() external {\n        require(msg.sender == pendingGovernance, \"pendingGovernance\");\n        governance = msg.sender;\n    }\n\n    modifier onlyGovernance {\n        require(msg.sender == governance, \"governance\");\n        _;\n    }\n}\n",
  "sourceMap": "876:20455:23:-:0;;;2418:463;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2418:463:23;;;;;;;;;;;;1958:145:2;;;;;;;;;;-1:-1:-1;;;1958:145:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;1958:145:2;;;;;;;2032:13;;2418:463:23;;;;;;1958:145:2;;;2032:13;;:5;;:13;:::i;:::-;-1:-1:-1;2055:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:2;:14;;-1:-1:-1;;2082:14:2;2094:2;2082:14;;;-1:-1:-1;2082:14:2;1760:7:7;:22;2559:4:23::1;:28:::0;;-1:-1:-1;;;;;2559:28:23;;::::1;-1:-1:-1::0;;;;;;2559:28:23;;::::1;::::0;;;::::1;::::0;;;;2613:13:::1;::::0;;-1:-1:-1;;;2613:13:23;;;;:4;;;::::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:4;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2613:13:23;2597:30:::1;::::0;-1:-1:-1;;;;;;2597:30:23;::::1;::::0;2653:4:::1;::::0;:13:::1;::::0;;-1:-1:-1;;;2653:13:23;;;;-1:-1:-1;;;;;2653:4:23;;::::1;::::0;:11:::1;::::0;:13:::1;::::0;;::::1;::::0;2613::::1;::::0;2653;;;;;;;;:4;:13;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2653:13:23;2637:30:::1;::::0;-1:-1:-1;;;;;;2637:30:23;::::1;::::0;2691:4:::1;::::0;:18:::1;::::0;;-1:-1:-1;;;2691:18:23;;;;-1:-1:-1;;;;;2691:4:23;;::::1;::::0;:16:::1;::::0;:18:::1;::::0;;::::1;::::0;2653:13:::1;::::0;2691:18;;;;;;;;:4;:18;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2691:18:23;2677:32:::1;::::0;;::::1;::::0;::::1;;;;::::0;2720:11:::1;:26:::0;;;2756:14:::1;:32:::0;;;2798:10:::1;:23:::0;;-1:-1:-1;;;;;;2798:23:23::1;2811:10;2798:23;::::0;;2855:3:::1;2840:18:::0;::::1;2832:42;;;::::0;;-1:-1:-1;;;2832:42:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2832:42:23;;;;;;;;;;;;;::::1;;2418:463:::0;;;876:20455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;876:20455:23;;;-1:-1:-1;876:20455:23;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/AlphaVault.sol",
  "type": "contract"
}