{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "zeroForOne",
          "type": "bool"
        },
        {
          "internalType": "int256",
          "name": "amountSpecified",
          "type": "int256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0Owed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Owed",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3MintCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3SwapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "10": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
    "11": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
    "12": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
    "13": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
    "14": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
    "15": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
    "16": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolState.sol",
    "19": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
    "25": "contracts/test/TestRouter.sol",
    "3": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "8": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
    "9": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol"
  },
  "ast": {
    "absolutePath": "contracts/test/TestRouter.sol",
    "exportedSymbols": {
      "Address": [
        5952
      ],
      "IERC20": [
        4523
      ],
      "IUniswapV3MintCallback": [
        4790
      ],
      "IUniswapV3Pool": [
        2979
      ],
      "IUniswapV3PoolActions": [
        5309
      ],
      "IUniswapV3PoolDerivedState": [
        5340
      ],
      "IUniswapV3PoolEvents": [
        5459
      ],
      "IUniswapV3PoolImmutables": [
        5499
      ],
      "IUniswapV3PoolOwnerActions": [
        5525
      ],
      "IUniswapV3PoolState": [
        5633
      ],
      "IUniswapV3SwapCallback": [
        5213
      ],
      "SafeERC20": [
        4736
      ],
      "SafeMath": [
        3942
      ],
      "TestRouter": [
        2422
      ],
      "TickMath": [
        3514
      ]
    },
    "id": 2423,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2208,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:22:25"
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2209,
        "nodeType": "ImportDirective",
        "scope": 2423,
        "sourceUnit": 4737,
        "src": "63:59:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "id": 2210,
        "nodeType": "ImportDirective",
        "scope": 2423,
        "sourceUnit": 2980,
        "src": "124:66:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "id": 2211,
        "nodeType": "ImportDirective",
        "scope": 2423,
        "sourceUnit": 4791,
        "src": "191:83:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "id": 2212,
        "nodeType": "ImportDirective",
        "scope": 2423,
        "sourceUnit": 5214,
        "src": "275:83:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
        "file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
        "id": 2213,
        "nodeType": "ImportDirective",
        "scope": 2423,
        "sourceUnit": 3515,
        "src": "359:59:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2215,
              "name": "IUniswapV3MintCallback",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4790,
              "src": "611:22:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3MintCallback_$4790",
                "typeString": "contract IUniswapV3MintCallback"
              }
            },
            "id": 2216,
            "nodeType": "InheritanceSpecifier",
            "src": "611:22:25"
          },
          {
            "baseName": {
              "id": 2217,
              "name": "IUniswapV3SwapCallback",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5213,
              "src": "635:22:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$5213",
                "typeString": "contract IUniswapV3SwapCallback"
              }
            },
            "id": 2218,
            "nodeType": "InheritanceSpecifier",
            "src": "635:22:25"
          }
        ],
        "contractDependencies": [
          4790,
          5213
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2214,
          "nodeType": "StructuredDocumentation",
          "src": "420:167:25",
          "text": " @title  TestRouter\n @dev    DO NOT USE IN PRODUCTION. This is only intended to be used for\n         tests and lacks slippage and callback caller checks."
        },
        "fullyImplemented": true,
        "id": 2422,
        "linearizedBaseContracts": [
          2422,
          5213,
          4790
        ],
        "name": "TestRouter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2221,
            "libraryName": {
              "id": 2219,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4736,
              "src": "670:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$4736",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "664:27:25",
            "typeName": {
              "id": 2220,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4523,
              "src": "684:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4523",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "body": {
              "id": 2274,
              "nodeType": "Block",
              "src": "856:335:25",
              "statements": [
                {
                  "assignments": [
                    2237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2237,
                      "mutability": "mutable",
                      "name": "tickSpacing",
                      "nodeType": "VariableDeclaration",
                      "scope": 2274,
                      "src": "866:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2236,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "866:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2241,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2238,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2223,
                        "src": "886:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tickSpacing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5492,
                      "src": "886:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                        "typeString": "function () view external returns (int24)"
                      }
                    },
                    "id": 2240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:18:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "866:38:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2243,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "922:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 2244,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2237,
                            "src": "934:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "922:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "949:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "922:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b4c6f776572206d7573742062652061206d756c7469706c65206f66207469636b53706163696e67",
                        "id": 2248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "952:45:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_140bea89945436350170825c9622dc941b5b525fc5ad16d6443712952bba95f1",
                          "typeString": "literal_string \"tickLower must be a multiple of tickSpacing\""
                        },
                        "value": "tickLower must be a multiple of tickSpacing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_140bea89945436350170825c9622dc941b5b525fc5ad16d6443712952bba95f1",
                          "typeString": "literal_string \"tickLower must be a multiple of tickSpacing\""
                        }
                      ],
                      "id": 2242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "914:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "914:84:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2250,
                  "nodeType": "ExpressionStatement",
                  "src": "914:84:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2252,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2227,
                            "src": "1016:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 2253,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2237,
                            "src": "1028:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "1016:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1043:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1016:28:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b5570706572206d7573742062652061206d756c7469706c65206f66207469636b53706163696e67",
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1046:45:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb826d1e8cf72111817124bd00fe0e2634cc5c9f872cc74ee1a4d6590a71b3b4",
                          "typeString": "literal_string \"tickUpper must be a multiple of tickSpacing\""
                        },
                        "value": "tickUpper must be a multiple of tickSpacing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb826d1e8cf72111817124bd00fe0e2634cc5c9f872cc74ee1a4d6590a71b3b4",
                          "typeString": "literal_string \"tickUpper must be a multiple of tickSpacing\""
                        }
                      ],
                      "id": 2251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1008:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:84:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2259,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:84:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2262,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1119:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1119:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2264,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "1131:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2265,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2227,
                        "src": "1142:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2266,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2229,
                        "src": "1153:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2269,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1172:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1172:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 2267,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1161:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1161:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1161:22:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2260,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2223,
                        "src": "1109:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5240,
                      "src": "1109:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,int24,int24,uint128,bytes memory) external returns (uint256,uint256)"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1109:75:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 2235,
                  "id": 2273,
                  "nodeType": "Return",
                  "src": "1102:82:25"
                }
              ]
            },
            "functionSelector": "b8cca34e",
            "id": 2275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2223,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "720:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                    "typeString": "contract IUniswapV3Pool"
                  },
                  "typeName": {
                    "id": 2222,
                    "name": "IUniswapV3Pool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2979,
                    "src": "720:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "749:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2227,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "774:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2226,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2229,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "799:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2228,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:109:25"
            },
            "returnParameters": {
              "id": 2235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2232,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "838:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2234,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "847:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:18:25"
            },
            "scope": 2422,
            "src": "697:494:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2311,
              "nodeType": "Block",
              "src": "1337:276:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2290,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1393:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1393:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2292,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2279,
                        "src": "1421:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2293,
                        "name": "amountSpecified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2281,
                        "src": "1449:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "condition": {
                          "id": 2294,
                          "name": "zeroForOne",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2279,
                          "src": "1482:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 2302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2299,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3514,
                              "src": "1525:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "MAX_SQRT_RATIO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3000,
                            "src": "1525:23:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1551:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1525:27:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 2303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "1482:70:25",
                        "trueExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 2298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2295,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3514,
                              "src": "1495:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 2296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "MIN_SQRT_RATIO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2996,
                            "src": "1495:23:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1521:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1495:27:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2306,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1581:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1581:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 2304,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1570:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1570:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1570:22:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2288,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2277,
                        "src": "1366:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5290,
                      "src": "1366:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                        "typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
                      }
                    },
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:240:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                      "typeString": "tuple(int256,int256)"
                    }
                  },
                  "functionReturnParameters": 2287,
                  "id": 2310,
                  "nodeType": "Return",
                  "src": "1347:259:25"
                }
              ]
            },
            "functionSelector": "5b71a46e",
            "id": 2312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2277,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "1220:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                    "typeString": "contract IUniswapV3Pool"
                  },
                  "typeName": {
                    "id": 2276,
                    "name": "IUniswapV3Pool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2979,
                    "src": "1220:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2279,
                  "mutability": "mutable",
                  "name": "zeroForOne",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "1249:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2278,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2281,
                  "mutability": "mutable",
                  "name": "amountSpecified",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "1274:22:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2280,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1210:92:25"
            },
            "returnParameters": {
              "id": 2287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2284,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "1321:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2283,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2286,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "1329:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2285,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:16:25"
            },
            "scope": 2422,
            "src": "1197:416:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4789
            ],
            "body": {
              "id": 2328,
              "nodeType": "Block",
              "src": "1761:58:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2323,
                        "name": "amount0Owed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2314,
                        "src": "1781:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2324,
                        "name": "amount1Owed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2316,
                        "src": "1794:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2325,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2318,
                        "src": "1807:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 2322,
                      "name": "_callback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2421,
                      "src": "1771:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes calldata)"
                      }
                    },
                    "id": 2326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2327,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:41:25"
                }
              ]
            },
            "functionSelector": "d3487997",
            "id": 2329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3MintCallback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2320,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1752:8:25"
            },
            "parameters": {
              "id": 2319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2314,
                  "mutability": "mutable",
                  "name": "amount0Owed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2329,
                  "src": "1659:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2316,
                  "mutability": "mutable",
                  "name": "amount1Owed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2329,
                  "src": "1688:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2329,
                  "src": "1717:19:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1649:93:25"
            },
            "returnParameters": {
              "id": 2321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:0:25"
            },
            "scope": 2422,
            "src": "1619:200:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5212
            ],
            "body": {
              "id": 2369,
              "nodeType": "Block",
              "src": "1967:194:25",
              "statements": [
                {
                  "assignments": [
                    2340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2340,
                      "mutability": "mutable",
                      "name": "amount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 2369,
                      "src": "1977:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1977:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2350,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 2343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2341,
                        "name": "amount0Delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2331,
                        "src": "1995:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2010:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1995:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 2348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2038:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 2349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1995:44:25",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 2346,
                          "name": "amount0Delta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2331,
                          "src": "2022:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 2345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2014:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 2344,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2014:7:25",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2014:21:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1977:62:25"
                },
                {
                  "assignments": [
                    2352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2352,
                      "mutability": "mutable",
                      "name": "amount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2369,
                      "src": "2049:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2049:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2362,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 2355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2353,
                        "name": "amount1Delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2333,
                        "src": "2067:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2082:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2067:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 2360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2110:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 2361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2067:44:25",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 2358,
                          "name": "amount1Delta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2333,
                          "src": "2094:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 2357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2086:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 2356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2086:7:25",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2086:21:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2049:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2364,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2340,
                        "src": "2131:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2365,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2352,
                        "src": "2140:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2366,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2335,
                        "src": "2149:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 2363,
                      "name": "_callback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2421,
                      "src": "2121:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,bytes calldata)"
                      }
                    },
                    "id": 2367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:33:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2368,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:33:25"
                }
              ]
            },
            "functionSelector": "fa461e33",
            "id": 2370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3SwapCallback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2337,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1958:8:25"
            },
            "parameters": {
              "id": 2336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "amount0Delta",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "1865:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2330,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2333,
                  "mutability": "mutable",
                  "name": "amount1Delta",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "1894:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2335,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "1923:19:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2334,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1923:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:93:25"
            },
            "returnParameters": {
              "id": 2338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1967:0:25"
            },
            "scope": 2422,
            "src": "1825:336:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2420,
              "nodeType": "Block",
              "src": "2280:271:25",
              "statements": [
                {
                  "assignments": [
                    2380
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2380,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2420,
                      "src": "2290:19:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                        "typeString": "contract IUniswapV3Pool"
                      },
                      "typeName": {
                        "id": 2379,
                        "name": "IUniswapV3Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2979,
                        "src": "2290:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2385,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2327:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2327:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2381,
                      "name": "IUniswapV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2979,
                      "src": "2312:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$2979_$",
                        "typeString": "type(contract IUniswapV3Pool)"
                      }
                    },
                    "id": 2384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:26:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2290:48:25"
                },
                {
                  "assignments": [
                    2387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2387,
                      "mutability": "mutable",
                      "name": "payer",
                      "nodeType": "VariableDeclaration",
                      "scope": 2420,
                      "src": "2348:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2386,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2348:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2395,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2390,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2375:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 2392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2382:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2391,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2382:7:25",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 2393,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2381:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 2388,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2364:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2364:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2364:27:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2348:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2402,
                        "name": "payer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "2441:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2403,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2448:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2448:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2405,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "2460:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2397,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2380,
                                "src": "2409:4:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 2398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token0",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5474,
                              "src": "2409:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 2399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2409:13:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2396,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4523,
                          "src": "2402:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$4523_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2402:21:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4523",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4582,
                      "src": "2402:38:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:66:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2407,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:66:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2414,
                        "name": "payer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "2517:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2415,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2524:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2524:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 2417,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2374,
                        "src": "2536:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2409,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2380,
                                "src": "2485:4:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 2410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5480,
                              "src": "2485:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 2411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2485:13:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2408,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4523,
                          "src": "2478:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$4523_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2478:21:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4523",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4582,
                      "src": "2478:38:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4523_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4523_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2478:66:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2419,
                  "nodeType": "ExpressionStatement",
                  "src": "2478:66:25"
                }
              ]
            },
            "id": 2421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "2195:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2374,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "2220:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2376,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "2245:19:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2245:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2185:85:25"
            },
            "returnParameters": {
              "id": 2378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2280:0:25"
            },
            "scope": 2422,
            "src": "2167:384:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2423,
        "src": "588:1965:25"
      }
    ],
    "src": "39:2515:25"
  },
  "bytecode": "608060405234801561001057600080fd5b50610abd806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635b71a46e14610051578063b8cca34e1461009e578063d3487997146100e7578063fa461e3314610165575b600080fd5b6100856004803603606081101561006757600080fd5b506001600160a01b03813516906020810135151590604001356101e1565b6040805192835260208301919091528051918290030190f35b610085600480360360808110156100b457600080fd5b5080356001600160a01b0316906020810135600290810b91604081013590910b90606001356001600160801b031661034b565b610163600480360360608110156100fd57600080fd5b81359160208101359181019060608101604082013564010000000081111561012457600080fd5b82018360208201111561013657600080fd5b8035906020019184600183028401116401000000008311171561015857600080fd5b50909250905061058a565b005b6101636004803603606081101561017b57600080fd5b8135916020810135918101906060810160408201356401000000008111156101a257600080fd5b8201836020820111156101b457600080fd5b803590602001918460018302840111640100000000831117156101d657600080fd5b50909250905061059c565b600080846001600160a01b031663128acb08338686886102155773fffd8963efd1fc6a506488495d951d5263988d2561021c565b6401000276a45b3360405160200180826001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b031681526020018515158152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102bd5781810151838201526020016102a5565b50505050905090810190601f1680156102ea5780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b15801561030c57600080fd5b505af1158015610320573d6000803e3d6000fd5b505050506040513d604081101561033657600080fd5b50805160209091015190969095509350505050565b6000806000866001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561038957600080fd5b505afa15801561039d573d6000803e3d6000fd5b505050506040513d60208110156103b357600080fd5b50519050600281810b9087900b816103c757fe5b0760020b156104075760405162461bcd60e51b815260040180806020018281038252602b8152602001806109e2602b913960400191505060405180910390fd5b8060020b8560020b8161041657fe5b0760020b156104565760405162461bcd60e51b815260040180806020018281038252602b815260200180610a33602b913960400191505060405180910390fd5b6040805133602080830182905283518084038201815283850194859052633c8a7d8d60e01b9094526044830182815260028b810b60648601528a900b60848501526001600160801b03891660a485015260a060c48501908152855160e486015285516001600160a01b038e1696633c8a7d8d968e958e958e959394909392610104019185019080838360005b838110156104fa5781810151838201526020016104e2565b50505050905090810190601f1680156105275780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b505050506040513d604081101561057357600080fd5b508051602090910151909890975095505050505050565b610596848484846105d8565b50505050565b60008085136105ac5760006105ae565b845b905060008085136105c05760006105c2565b845b90506105d0828286866105d8565b505050505050565b336000838360208110156105eb57600080fd5b5060408051630dfe168160e01b815290516001600160a01b0392358316935061067992849233928b92881691630dfe1681916004808301926020929190829003018186803b15801561063c57600080fd5b505afa158015610650573d6000803e3d6000fd5b505050506040513d602081101561066657600080fd5b50516001600160a01b03169291906106b8565b6105d0813387856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561063c57600080fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526105969085906000610762826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107c39092919063ffffffff16565b8051909150156107be5780806020019051602081101561078157600080fd5b50516107be5760405162461bcd60e51b815260040180806020018281038252602a815260200180610a5e602a913960400191505060405180910390fd5b505050565b60606107d284846000856107dc565b90505b9392505050565b60608247101561081d5760405162461bcd60e51b8152600401808060200182810382526026815260200180610a0d6026913960400191505060405180910390fd5b61082685610937565b610877576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106108b55780518252601f199092019160209182019101610896565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610917576040519150601f19603f3d011682016040523d82523d6000602084013e61091c565b606091505b509150915061092c82828661093d565b979650505050505050565b3b151590565b6060831561094c5750816107d5565b82511561095c5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a657818101518382015260200161098e565b50505050905090810190601f1680156109d35780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe7469636b4c6f776572206d7573742062652061206d756c7469706c65206f66207469636b53706163696e67416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c7469636b5570706572206d7573742062652061206d756c7469706c65206f66207469636b53706163696e675361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212201626a4710f2905a4a4ef3ca82d815ee1d4334df7b31cd79f94abb6bdff9435a764736f6c63430007060033",
  "bytecodeSha1": "a46bb8e7b66a63324826c6662c0cb142e1d07f66",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "TestRouter",
  "coverageMap": {
    "branches": {
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "19": {},
      "25": {
        "TestRouter.mint": {
          "18": [
            922,
            950,
            true
          ],
          "19": [
            1016,
            1044,
            true
          ]
        },
        "TestRouter.swap": {
          "17": [
            1482,
            1492,
            true
          ]
        },
        "TestRouter.uniswapV3SwapCallback": {
          "20": [
            1995,
            2011,
            true
          ],
          "21": [
            2067,
            2083,
            true
          ]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "26": [
            3495,
            3516,
            false
          ],
          "27": [
            3624,
            3654,
            true
          ]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "24": [
            7234,
            7241,
            false
          ],
          "25": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "22": [
            4767,
            4797,
            true
          ],
          "23": [
            4858,
            4876,
            true
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "19": {},
      "25": {
        "TestRouter._callback": {
          "6": [
            2402,
            2468
          ],
          "7": [
            2478,
            2544
          ]
        },
        "TestRouter.mint": {
          "1": [
            914,
            998
          ],
          "2": [
            1008,
            1092
          ],
          "3": [
            1102,
            1184
          ]
        },
        "TestRouter.swap": {
          "0": [
            1347,
            1606
          ]
        },
        "TestRouter.uniswapV3MintCallback": {
          "4": [
            1771,
            1812
          ]
        },
        "TestRouter.uniswapV3SwapCallback": {
          "5": [
            2121,
            2154
          ]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "9": [
            3616,
            3701
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "8": [
            985,
            1081
          ]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "15": [
            7257,
            7274
          ],
          "16": [
            7765,
            7785
          ]
        },
        "Address.functionCall": {
          "10": [
            3708,
            3767
          ]
        },
        "Address.functionCallWithValue": {
          "11": [
            4759,
            4840
          ],
          "12": [
            4850,
            4910
          ],
          "13": [
            5065,
            5124
          ]
        },
        "Address.isContract": {
          "14": [
            1117,
            1132
          ]
        }
      },
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3MintCallback",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3Pool",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolDerivedState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolEvents",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolImmutables",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolOwnerActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3SwapCallback",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "Uniswap/uniswap-v3-core@1.0.0/TickMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80635b71a46e14610051578063b8cca34e1461009e578063d3487997146100e7578063fa461e3314610165575b600080fd5b6100856004803603606081101561006757600080fd5b506001600160a01b03813516906020810135151590604001356101e1565b6040805192835260208301919091528051918290030190f35b610085600480360360808110156100b457600080fd5b5080356001600160a01b0316906020810135600290810b91604081013590910b90606001356001600160801b031661034b565b610163600480360360608110156100fd57600080fd5b81359160208101359181019060608101604082013564010000000081111561012457600080fd5b82018360208201111561013657600080fd5b8035906020019184600183028401116401000000008311171561015857600080fd5b50909250905061058a565b005b6101636004803603606081101561017b57600080fd5b8135916020810135918101906060810160408201356401000000008111156101a257600080fd5b8201836020820111156101b457600080fd5b803590602001918460018302840111640100000000831117156101d657600080fd5b50909250905061059c565b600080846001600160a01b031663128acb08338686886102155773fffd8963efd1fc6a506488495d951d5263988d2561021c565b6401000276a45b3360405160200180826001600160a01b031681526020019150506040516020818303038152906040526040518663ffffffff1660e01b815260040180866001600160a01b031681526020018515158152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102bd5781810151838201526020016102a5565b50505050905090810190601f1680156102ea5780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b15801561030c57600080fd5b505af1158015610320573d6000803e3d6000fd5b505050506040513d604081101561033657600080fd5b50805160209091015190969095509350505050565b6000806000866001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561038957600080fd5b505afa15801561039d573d6000803e3d6000fd5b505050506040513d60208110156103b357600080fd5b50519050600281810b9087900b816103c757fe5b0760020b156104075760405162461bcd60e51b815260040180806020018281038252602b8152602001806109e2602b913960400191505060405180910390fd5b8060020b8560020b8161041657fe5b0760020b156104565760405162461bcd60e51b815260040180806020018281038252602b815260200180610a33602b913960400191505060405180910390fd5b6040805133602080830182905283518084038201815283850194859052633c8a7d8d60e01b9094526044830182815260028b810b60648601528a900b60848501526001600160801b03891660a485015260a060c48501908152855160e486015285516001600160a01b038e1696633c8a7d8d968e958e958e959394909392610104019185019080838360005b838110156104fa5781810151838201526020016104e2565b50505050905090810190601f1680156105275780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b505050506040513d604081101561057357600080fd5b508051602090910151909890975095505050505050565b610596848484846105d8565b50505050565b60008085136105ac5760006105ae565b845b905060008085136105c05760006105c2565b845b90506105d0828286866105d8565b505050505050565b336000838360208110156105eb57600080fd5b5060408051630dfe168160e01b815290516001600160a01b0392358316935061067992849233928b92881691630dfe1681916004808301926020929190829003018186803b15801561063c57600080fd5b505afa158015610650573d6000803e3d6000fd5b505050506040513d602081101561066657600080fd5b50516001600160a01b03169291906106b8565b6105d0813387856001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561063c57600080fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526105969085906000610762826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107c39092919063ffffffff16565b8051909150156107be5780806020019051602081101561078157600080fd5b50516107be5760405162461bcd60e51b815260040180806020018281038252602a815260200180610a5e602a913960400191505060405180910390fd5b505050565b60606107d284846000856107dc565b90505b9392505050565b60608247101561081d5760405162461bcd60e51b8152600401808060200182810382526026815260200180610a0d6026913960400191505060405180910390fd5b61082685610937565b610877576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106108b55780518252601f199092019160209182019101610896565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610917576040519150601f19603f3d011682016040523d82523d6000602084013e61091c565b606091505b509150915061092c82828661093d565b979650505050505050565b3b151590565b6060831561094c5750816107d5565b82511561095c5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a657818101518382015260200161098e565b50505050905090810190601f1680156109d35780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe7469636b4c6f776572206d7573742062652061206d756c7469706c65206f66207469636b53706163696e67416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c7469636b5570706572206d7573742062652061206d756c7469706c65206f66207469636b53706163696e675361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212201626a4710f2905a4a4ef3ca82d815ee1d4334df7b31cd79f94abb6bdff9435a764736f6c63430007060033",
  "deployedSourceMap": "588:1965:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1197:416;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1197:416:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;697:494;;;;;;;;;;;;;;;;-1:-1:-1;697:494:25;;-1:-1:-1;;;;;697:494:25;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;697:494:25;;:::i;1619:200::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1619:200:25;;-1:-1:-1;1619:200:25;-1:-1:-1;1619:200:25;:::i;:::-;;1825:336;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1825:336:25;;-1:-1:-1;1825:336:25;-1:-1:-1;1825:336:25;:::i;1197:416::-;1321:6;1329;1366:4;-1:-1:-1;;;;;1366:9:25;;1393:10;1421;1449:15;1482:10;:70;;1525:27;1482:70;;;1495:27;1482:70;1581:10;1570:22;;;;;;-1:-1:-1;;;;;1570:22:25;;;;;;;;;;;;;;;;;;;;1366:240;;;;;;;;;;;;;-1:-1:-1;;;;;1366:240:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1366:240:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1366:240:25;;;;;;;;;;;-1:-1:-1;1197:416:25;-1:-1:-1;;;;1197:416:25:o;697:494::-;838:7;847;866:17;886:4;-1:-1:-1;;;;;886:16:25;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:18:25;;-1:-1:-1;922:23:25;;;;;;;;;;;;;;:28;;;914:84;;;;-1:-1:-1;;;914:84:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1028:11;1016:23;;:9;:23;;;;;;;;:28;;;1008:84;;;;-1:-1:-1;;;1008:84:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1161:22;;;1119:10;1161:22;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1109:75:25;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1109:75:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1109:9:25;;;;;1131;;1142;;1153:6;;1161:22;;1109:75;;;;;;;;;;;;-1:-1:-1;1109:75:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1109:75:25;;;;;;;;;;;-1:-1:-1;697:494:25;-1:-1:-1;;;;;;697:494:25:o;1619:200::-;1771:41;1781:11;1794;1807:4;;1771:9;:41::i;:::-;1619:200;;;;:::o;1825:336::-;1977:15;2010:1;1995:12;:16;:44;;2038:1;1995:44;;;2022:12;1995:44;1977:62;;2049:15;2082:1;2067:12;:16;:44;;2110:1;2067:44;;;2094:12;2067:44;2049:62;;2121:33;2131:7;2140;2149:4;;2121:9;:33::i;:::-;1825:336;;;;;;:::o;2167:384::-;2327:10;2290:19;2375:4;;2364:27;;;;;;;;;;-1:-1:-1;2409:13:25;;;-1:-1:-1;;;2409:13:25;;;;-1:-1:-1;;;;;2364:27:25;;;;;-1:-1:-1;2402:66:25;;2364:27;;2448:10;;2460:7;;2409:11;;;;;:13;;;;;2364:27;;2409:13;;;;;;;:11;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2409:13:25;-1:-1:-1;;;;;2402:38:25;;:66;;:38;:66::i;:::-;2478;2517:5;2524:10;2536:7;2485:4;-1:-1:-1;;;;;2485:11:25;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:203:4;1012:68;;;-1:-1:-1;;;;;1012:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:4;-1:-1:-1;;;1012:68:4;;;985:96;;1005:5;;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2967:751;;;:::o;3581:193:5:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:5;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:5:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:5;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "DO NOT USE IN PRODUCTION. This is only intended to be used for         tests and lacks slippage and callback caller checks.",
    "kind": "dev",
    "methods": {
      "uniswapV3MintCallback(uint256,uint256,bytes)": {
        "details": "In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.",
        "notice": "Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.",
        "params": {
          "amount0Owed": "The amount of token0 due to the pool for the minted liquidity",
          "amount1Owed": "The amount of token1 due to the pool for the minted liquidity",
          "data": "Any data passed through by the caller via the IUniswapV3PoolActions#mint call"
        }
      },
      "uniswapV3SwapCallback(int256,int256,bytes)": {
        "details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
        "notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.",
        "params": {
          "amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
          "amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
          "data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
        }
      }
    },
    "title": "TestRouter",
    "version": 1
  },
  "offset": [
    588,
    2553
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B71A46E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xB8CCA34E EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xD3487997 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x165 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 SIGNEXTEND SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x34B JUMP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x128ACB08 CALLER DUP7 DUP7 DUP9 PUSH2 0x215 JUMPI PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D25 PUSH2 0x21C JUMP JUMPDEST PUSH5 0x1000276A4 JUMPDEST CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2EA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x320 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP8 SWAP1 SIGNEXTEND DUP2 PUSH2 0x3C7 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x407 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9E2 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP6 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x416 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x456 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA33 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP3 ADD DUP2 MSTORE DUP4 DUP6 ADD SWAP5 DUP6 SWAP1 MSTORE PUSH4 0x3C8A7D8D PUSH1 0xE0 SHL SWAP1 SWAP5 MSTORE PUSH1 0x44 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x2 DUP12 DUP2 SIGNEXTEND PUSH1 0x64 DUP7 ADD MSTORE DUP11 SWAP1 SIGNEXTEND PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP10 AND PUSH1 0xA4 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0xC4 DUP6 ADD SWAP1 DUP2 MSTORE DUP6 MLOAD PUSH1 0xE4 DUP7 ADD MSTORE DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP7 PUSH4 0x3C8A7D8D SWAP7 DUP15 SWAP6 DUP15 SWAP6 DUP15 SWAP6 SWAP4 SWAP5 SWAP1 SWAP4 SWAP3 PUSH2 0x104 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4FA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4E2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x527 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x596 DUP5 DUP5 DUP5 DUP5 PUSH2 0x5D8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 SGT PUSH2 0x5AC JUMPI PUSH1 0x0 PUSH2 0x5AE JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP6 SGT PUSH2 0x5C0 JUMPI PUSH1 0x0 PUSH2 0x5C2 JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP PUSH2 0x5D0 DUP3 DUP3 DUP7 DUP7 PUSH2 0x5D8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP4 DUP4 PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 CALLDATALOAD DUP4 AND SWAP4 POP PUSH2 0x679 SWAP3 DUP5 SWAP3 CALLER SWAP3 DUP12 SWAP3 DUP9 AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x650 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x5D0 DUP2 CALLER DUP8 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x596 SWAP1 DUP6 SWAP1 PUSH1 0x0 PUSH2 0x762 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x7BE JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA5E PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7D2 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x7DC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA0D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x826 DUP6 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x877 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x8B5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x91C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x92C DUP3 DUP3 DUP7 PUSH2 0x93D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x94C JUMPI POP DUP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x95C JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9A6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x98E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9D3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID PUSH21 0x69636B4C6F776572206D7573742062652061206D75 PUSH13 0x7469706C65206F66207469636B MSTORE8 PUSH17 0x6163696E67416464726573733A20696E73 PUSH22 0x6666696369656E742062616C616E636520666F722063 PUSH2 0x6C6C PUSH21 0x69636B5570706572206D7573742062652061206D75 PUSH13 0x7469706C65206F66207469636B MSTORE8 PUSH17 0x6163696E675361666545524332303A2045 MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212201626A471 0xF 0x29 SDIV LOG4 LOG4 0xEF EXTCODECOPY 0xA8 0x2D DUP2 0x5E 0xE1 0xD4 CALLER 0x4D 0xF7 0xB3 SHR 0xD7 SWAP16 SWAP5 0xAB 0xB6 0xBD SELFDESTRUCT SWAP5 CALLDATALOAD 0xA7 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        588,
        2553
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "6": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "POP",
      "path": "25"
    },
    "18": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "21": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "LT",
      "path": "25"
    },
    "22": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "26": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "29": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "SHR",
      "path": "25"
    },
    "32": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "DUP1",
      "path": "25"
    },
    "33": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x5B71A46E"
    },
    "38": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "EQ",
      "path": "25"
    },
    "39": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "43": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "DUP1",
      "path": "25"
    },
    "44": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xB8CCA34E"
    },
    "49": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "EQ",
      "path": "25"
    },
    "50": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9E"
    },
    "53": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "54": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "DUP1",
      "path": "25"
    },
    "55": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD3487997"
    },
    "60": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "EQ",
      "path": "25"
    },
    "61": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7"
    },
    "64": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "65": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "DUP1",
      "path": "25"
    },
    "66": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFA461E33"
    },
    "71": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "EQ",
      "path": "25"
    },
    "72": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x165"
    },
    "75": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "76": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "77": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "DUP1",
      "path": "25"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        588,
        2553
      ],
      "op": "REVERT",
      "path": "25"
    },
    "81": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "82": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x85"
    },
    "85": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "87": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP1",
      "path": "25"
    },
    "88": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "89": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SUB",
      "path": "25"
    },
    "90": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "92": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP2",
      "path": "25"
    },
    "93": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "LT",
      "path": "25"
    },
    "94": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "95": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x67"
    },
    "98": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "99": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "101": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP1",
      "path": "25"
    },
    "102": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "REVERT",
      "path": "25"
    },
    "103": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "104": {
      "op": "POP"
    },
    "105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "111": {
      "op": "SHL"
    },
    "112": {
      "op": "SUB"
    },
    "113": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP2",
      "path": "25"
    },
    "114": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "115": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "AND",
      "path": "25"
    },
    "116": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "117": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "119": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP2",
      "path": "25"
    },
    "120": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "ADD",
      "path": "25"
    },
    "121": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "122": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "123": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "124": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "125": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "127": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "ADD",
      "path": "25"
    },
    "128": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "129": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1E1"
    },
    "132": {
      "fn": "TestRouter.swap",
      "jump": "i",
      "offset": [
        1197,
        1613
      ],
      "op": "JUMP",
      "path": "25"
    },
    "133": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "134": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "136": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP1",
      "path": "25"
    },
    "137": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "138": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "139": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP4",
      "path": "25"
    },
    "140": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "141": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "143": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP4",
      "path": "25"
    },
    "144": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "ADD",
      "path": "25"
    },
    "145": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "146": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "147": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "148": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "149": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP1",
      "path": "25"
    },
    "150": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "151": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "152": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "DUP3",
      "path": "25"
    },
    "153": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "154": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SUB",
      "path": "25"
    },
    "155": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "ADD",
      "path": "25"
    },
    "156": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "157": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "RETURN",
      "path": "25"
    },
    "158": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "159": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x85"
    },
    "162": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "164": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "DUP1",
      "path": "25"
    },
    "165": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "166": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SUB",
      "path": "25"
    },
    "167": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "169": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "DUP2",
      "path": "25"
    },
    "170": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "LT",
      "path": "25"
    },
    "171": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "172": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB4"
    },
    "175": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "176": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "178": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "DUP1",
      "path": "25"
    },
    "179": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "REVERT",
      "path": "25"
    },
    "180": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "181": {
      "op": "POP"
    },
    "182": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "DUP1",
      "path": "25"
    },
    "183": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "190": {
      "op": "SHL"
    },
    "191": {
      "op": "SUB"
    },
    "192": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "AND",
      "path": "25"
    },
    "193": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "194": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "196": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "DUP2",
      "path": "25"
    },
    "197": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "ADD",
      "path": "25"
    },
    "198": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "199": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "201": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "202": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "DUP2",
      "path": "25"
    },
    "203": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "204": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "205": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "207": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "DUP2",
      "path": "25"
    },
    "208": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "ADD",
      "path": "25"
    },
    "209": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "210": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "211": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "212": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "213": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "214": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "216": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "ADD",
      "path": "25"
    },
    "217": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "224": {
      "op": "SHL"
    },
    "225": {
      "op": "SUB"
    },
    "226": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "AND",
      "path": "25"
    },
    "227": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x34B"
    },
    "230": {
      "fn": "TestRouter.mint",
      "jump": "i",
      "offset": [
        697,
        1191
      ],
      "op": "JUMP",
      "path": "25"
    },
    "231": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "232": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x163"
    },
    "235": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "237": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP1",
      "path": "25"
    },
    "238": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "239": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "SUB",
      "path": "25"
    },
    "240": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "242": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP2",
      "path": "25"
    },
    "243": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "LT",
      "path": "25"
    },
    "244": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "245": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xFD"
    },
    "248": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "249": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "251": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP1",
      "path": "25"
    },
    "252": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "REVERT",
      "path": "25"
    },
    "253": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "254": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP2",
      "path": "25"
    },
    "255": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "256": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "257": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "259": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP2",
      "path": "25"
    },
    "260": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ADD",
      "path": "25"
    },
    "261": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "262": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "263": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP2",
      "path": "25"
    },
    "264": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ADD",
      "path": "25"
    },
    "265": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "266": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "268": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP2",
      "path": "25"
    },
    "269": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ADD",
      "path": "25"
    },
    "270": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "272": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP3",
      "path": "25"
    },
    "273": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ADD",
      "path": "25"
    },
    "274": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "275": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH5",
      "path": "25",
      "value": "0x100000000"
    },
    "281": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP2",
      "path": "25"
    },
    "282": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "GT",
      "path": "25"
    },
    "283": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "284": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x124"
    },
    "287": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "288": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "290": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP1",
      "path": "25"
    },
    "291": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "REVERT",
      "path": "25"
    },
    "292": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "293": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP3",
      "path": "25"
    },
    "294": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ADD",
      "path": "25"
    },
    "295": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP4",
      "path": "25"
    },
    "296": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "298": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP3",
      "path": "25"
    },
    "299": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ADD",
      "path": "25"
    },
    "300": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "GT",
      "path": "25"
    },
    "301": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "302": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x136"
    },
    "305": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "306": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "308": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP1",
      "path": "25"
    },
    "309": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "REVERT",
      "path": "25"
    },
    "310": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "311": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP1",
      "path": "25"
    },
    "312": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "313": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "314": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "316": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ADD",
      "path": "25"
    },
    "317": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "318": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP5",
      "path": "25"
    },
    "319": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "321": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP4",
      "path": "25"
    },
    "322": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "MUL",
      "path": "25"
    },
    "323": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP5",
      "path": "25"
    },
    "324": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ADD",
      "path": "25"
    },
    "325": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "GT",
      "path": "25"
    },
    "326": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH5",
      "path": "25",
      "value": "0x100000000"
    },
    "332": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP4",
      "path": "25"
    },
    "333": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "GT",
      "path": "25"
    },
    "334": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "OR",
      "path": "25"
    },
    "335": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "336": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x158"
    },
    "339": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "340": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "342": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "DUP1",
      "path": "25"
    },
    "343": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "REVERT",
      "path": "25"
    },
    "344": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "345": {
      "op": "POP"
    },
    "346": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "347": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "350": {
      "op": "POP"
    },
    "351": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x58A"
    },
    "354": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "jump": "i",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMP",
      "path": "25"
    },
    "355": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "356": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "STOP",
      "path": "25"
    },
    "357": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "358": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x163"
    },
    "361": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "363": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP1",
      "path": "25"
    },
    "364": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "365": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "SUB",
      "path": "25"
    },
    "366": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "368": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP2",
      "path": "25"
    },
    "369": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "LT",
      "path": "25"
    },
    "370": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "371": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x17B"
    },
    "374": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "375": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "377": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP1",
      "path": "25"
    },
    "378": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "REVERT",
      "path": "25"
    },
    "379": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "380": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP2",
      "path": "25"
    },
    "381": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "382": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "383": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "385": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP2",
      "path": "25"
    },
    "386": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ADD",
      "path": "25"
    },
    "387": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "388": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "389": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP2",
      "path": "25"
    },
    "390": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ADD",
      "path": "25"
    },
    "391": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "392": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "394": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP2",
      "path": "25"
    },
    "395": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ADD",
      "path": "25"
    },
    "396": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "398": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP3",
      "path": "25"
    },
    "399": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ADD",
      "path": "25"
    },
    "400": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "401": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH5",
      "path": "25",
      "value": "0x100000000"
    },
    "407": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP2",
      "path": "25"
    },
    "408": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "GT",
      "path": "25"
    },
    "409": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "410": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1A2"
    },
    "413": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "414": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "416": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP1",
      "path": "25"
    },
    "417": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "REVERT",
      "path": "25"
    },
    "418": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "419": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP3",
      "path": "25"
    },
    "420": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ADD",
      "path": "25"
    },
    "421": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP4",
      "path": "25"
    },
    "422": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "424": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP3",
      "path": "25"
    },
    "425": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ADD",
      "path": "25"
    },
    "426": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "GT",
      "path": "25"
    },
    "427": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "428": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1B4"
    },
    "431": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "432": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "434": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP1",
      "path": "25"
    },
    "435": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "REVERT",
      "path": "25"
    },
    "436": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "437": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP1",
      "path": "25"
    },
    "438": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "439": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "440": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "442": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ADD",
      "path": "25"
    },
    "443": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "444": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP5",
      "path": "25"
    },
    "445": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "447": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP4",
      "path": "25"
    },
    "448": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "MUL",
      "path": "25"
    },
    "449": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP5",
      "path": "25"
    },
    "450": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ADD",
      "path": "25"
    },
    "451": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "GT",
      "path": "25"
    },
    "452": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH5",
      "path": "25",
      "value": "0x100000000"
    },
    "458": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP4",
      "path": "25"
    },
    "459": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "GT",
      "path": "25"
    },
    "460": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "OR",
      "path": "25"
    },
    "461": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "462": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D6"
    },
    "465": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "466": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "468": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "DUP1",
      "path": "25"
    },
    "469": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "REVERT",
      "path": "25"
    },
    "470": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "471": {
      "op": "POP"
    },
    "472": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "473": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "474": {
      "op": "POP"
    },
    "475": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "476": {
      "op": "POP"
    },
    "477": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x59C"
    },
    "480": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "jump": "i",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMP",
      "path": "25"
    },
    "481": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "482": {
      "fn": "TestRouter.swap",
      "offset": [
        1321,
        1327
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "484": {
      "fn": "TestRouter.swap",
      "offset": [
        1329,
        1335
      ],
      "op": "DUP1",
      "path": "25"
    },
    "485": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1370
      ],
      "op": "DUP5",
      "path": "25",
      "statement": 0
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "492": {
      "op": "SHL"
    },
    "493": {
      "op": "SUB"
    },
    "494": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1375
      ],
      "op": "AND",
      "path": "25"
    },
    "495": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1375
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x128ACB08"
    },
    "500": {
      "fn": "TestRouter.swap",
      "offset": [
        1393,
        1403
      ],
      "op": "CALLER",
      "path": "25"
    },
    "501": {
      "fn": "TestRouter.swap",
      "offset": [
        1421,
        1431
      ],
      "op": "DUP7",
      "path": "25"
    },
    "502": {
      "fn": "TestRouter.swap",
      "offset": [
        1449,
        1464
      ],
      "op": "DUP7",
      "path": "25"
    },
    "503": {
      "branch": 17,
      "fn": "TestRouter.swap",
      "offset": [
        1482,
        1492
      ],
      "op": "DUP9",
      "path": "25"
    },
    "504": {
      "fn": "TestRouter.swap",
      "offset": [
        1482,
        1552
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x215"
    },
    "507": {
      "branch": 17,
      "fn": "TestRouter.swap",
      "offset": [
        1482,
        1552
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "508": {
      "fn": "TestRouter.swap",
      "offset": [
        1525,
        1552
      ],
      "op": "PUSH20",
      "path": "25",
      "value": "0xFFFD8963EFD1FC6A506488495D951D5263988D25"
    },
    "529": {
      "fn": "TestRouter.swap",
      "offset": [
        1482,
        1552
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x21C"
    },
    "532": {
      "fn": "TestRouter.swap",
      "offset": [
        1482,
        1552
      ],
      "op": "JUMP",
      "path": "25"
    },
    "533": {
      "fn": "TestRouter.swap",
      "offset": [
        1482,
        1552
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "534": {
      "fn": "TestRouter.swap",
      "offset": [
        1495,
        1522
      ],
      "op": "PUSH5",
      "path": "25",
      "value": "0x1000276A4"
    },
    "540": {
      "fn": "TestRouter.swap",
      "offset": [
        1482,
        1552
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "541": {
      "fn": "TestRouter.swap",
      "offset": [
        1581,
        1591
      ],
      "op": "CALLER",
      "path": "25"
    },
    "542": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "544": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "545": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "547": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "ADD",
      "path": "25"
    },
    "548": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "DUP1",
      "path": "25"
    },
    "549": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "DUP3",
      "path": "25"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "AND",
      "path": "25"
    },
    "559": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "DUP2",
      "path": "25"
    },
    "560": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "561": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "563": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "ADD",
      "path": "25"
    },
    "564": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "565": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "POP",
      "path": "25"
    },
    "566": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "POP",
      "path": "25"
    },
    "567": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "569": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "570": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "572": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "DUP2",
      "path": "25"
    },
    "573": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "DUP4",
      "path": "25"
    },
    "574": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "SUB",
      "path": "25"
    },
    "575": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "SUB",
      "path": "25"
    },
    "576": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "DUP2",
      "path": "25"
    },
    "577": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "578": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "579": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "581": {
      "fn": "TestRouter.swap",
      "offset": [
        1570,
        1592
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "582": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "584": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "585": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP7",
      "path": "25"
    },
    "586": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "591": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "AND",
      "path": "25"
    },
    "592": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "594": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SHL",
      "path": "25"
    },
    "595": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "596": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "597": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "599": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "600": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "601": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP7",
      "path": "25"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "608": {
      "op": "SHL"
    },
    "609": {
      "op": "SUB"
    },
    "610": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "AND",
      "path": "25"
    },
    "611": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "612": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "613": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "615": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "616": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP6",
      "path": "25"
    },
    "617": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "618": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "619": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "620": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "621": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "623": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "624": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP5",
      "path": "25"
    },
    "625": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "626": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "627": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "629": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "630": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP4",
      "path": "25"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "op": "SUB"
    },
    "639": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "AND",
      "path": "25"
    },
    "640": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "641": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "642": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "644": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "645": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "646": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "648": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "649": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP3",
      "path": "25"
    },
    "650": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "651": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SUB",
      "path": "25"
    },
    "652": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP3",
      "path": "25"
    },
    "653": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "654": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP4",
      "path": "25"
    },
    "655": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "656": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "657": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "658": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "659": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "660": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "662": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "663": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "664": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "665": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "666": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "667": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "668": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "670": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "671": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "672": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "673": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP4",
      "path": "25"
    },
    "674": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP4",
      "path": "25"
    },
    "675": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "677": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "678": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP4",
      "path": "25"
    },
    "679": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "680": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "LT",
      "path": "25"
    },
    "681": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "682": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2BD"
    },
    "685": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "686": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "687": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "688": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "689": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "690": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP4",
      "path": "25"
    },
    "691": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP3",
      "path": "25"
    },
    "692": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "693": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "694": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "696": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "697": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2A5"
    },
    "700": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMP",
      "path": "25"
    },
    "701": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "702": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "703": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "704": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "705": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "706": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "707": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "708": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "709": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "710": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "711": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "712": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "714": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "AND",
      "path": "25"
    },
    "715": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "716": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "717": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EA"
    },
    "720": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "721": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "722": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP3",
      "path": "25"
    },
    "723": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SUB",
      "path": "25"
    },
    "724": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "725": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "726": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "728": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP4",
      "path": "25"
    },
    "729": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "731": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SUB",
      "path": "25"
    },
    "732": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "735": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "EXP",
      "path": "25"
    },
    "736": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SUB",
      "path": "25"
    },
    "737": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "NOT",
      "path": "25"
    },
    "738": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "AND",
      "path": "25"
    },
    "739": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "740": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "741": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "743": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "744": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "745": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "746": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "747": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "748": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "749": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "750": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "751": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "752": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "753": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "754": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "755": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "756": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "758": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "759": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "760": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "761": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP4",
      "path": "25"
    },
    "762": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SUB",
      "path": "25"
    },
    "763": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "764": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "766": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP8",
      "path": "25"
    },
    "767": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "768": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "769": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "770": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "771": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "772": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x30C"
    },
    "775": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "776": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "778": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "779": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "REVERT",
      "path": "25"
    },
    "780": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "781": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "782": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "GAS",
      "path": "25"
    },
    "783": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "CALL",
      "path": "25"
    },
    "784": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "785": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "786": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "787": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x320"
    },
    "790": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "791": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "792": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "794": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "795": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "796": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "797": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "799": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "REVERT",
      "path": "25"
    },
    "800": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "801": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "802": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "803": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "804": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "POP",
      "path": "25"
    },
    "805": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "807": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "808": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "809": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "811": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "812": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "LT",
      "path": "25"
    },
    "813": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "814": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x336"
    },
    "817": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "818": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "820": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "821": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "REVERT",
      "path": "25"
    },
    "822": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "823": {
      "op": "POP"
    },
    "824": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "DUP1",
      "path": "25"
    },
    "825": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "826": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "828": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "829": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "830": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "ADD",
      "path": "25"
    },
    "831": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "832": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "833": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "834": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "835": {
      "fn": "TestRouter.swap",
      "offset": [
        1366,
        1606
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "fn": "TestRouter.swap",
      "offset": [
        1197,
        1613
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "op": "POP"
    },
    "840": {
      "op": "POP"
    },
    "841": {
      "op": "POP"
    },
    "842": {
      "fn": "TestRouter.swap",
      "jump": "o",
      "offset": [
        1197,
        1613
      ],
      "op": "JUMP",
      "path": "25"
    },
    "843": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "844": {
      "fn": "TestRouter.mint",
      "offset": [
        838,
        845
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "846": {
      "fn": "TestRouter.mint",
      "offset": [
        847,
        854
      ],
      "op": "DUP1",
      "path": "25"
    },
    "847": {
      "fn": "TestRouter.mint",
      "offset": [
        866,
        883
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "849": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        890
      ],
      "op": "DUP7",
      "path": "25"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "856": {
      "op": "SHL"
    },
    "857": {
      "op": "SUB"
    },
    "858": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        902
      ],
      "op": "AND",
      "path": "25"
    },
    "859": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        902
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD0C93A7C"
    },
    "864": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "866": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "867": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP2",
      "path": "25"
    },
    "868": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "873": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "AND",
      "path": "25"
    },
    "874": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "876": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "SHL",
      "path": "25"
    },
    "877": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP2",
      "path": "25"
    },
    "878": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "879": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "881": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "ADD",
      "path": "25"
    },
    "882": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "884": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "886": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "887": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP1",
      "path": "25"
    },
    "888": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP4",
      "path": "25"
    },
    "889": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "SUB",
      "path": "25"
    },
    "890": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP2",
      "path": "25"
    },
    "891": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP7",
      "path": "25"
    },
    "892": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP1",
      "path": "25"
    },
    "893": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "894": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "895": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP1",
      "path": "25"
    },
    "896": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "897": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x389"
    },
    "900": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "901": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "903": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP1",
      "path": "25"
    },
    "904": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "REVERT",
      "path": "25"
    },
    "905": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "906": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "POP",
      "path": "25"
    },
    "907": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "GAS",
      "path": "25"
    },
    "908": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "909": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "910": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP1",
      "path": "25"
    },
    "911": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "912": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x39D"
    },
    "915": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "916": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "917": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "919": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP1",
      "path": "25"
    },
    "920": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "921": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "922": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "924": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "REVERT",
      "path": "25"
    },
    "925": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "926": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "POP",
      "path": "25"
    },
    "927": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "POP",
      "path": "25"
    },
    "928": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "POP",
      "path": "25"
    },
    "929": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "POP",
      "path": "25"
    },
    "930": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "932": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "933": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "934": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "936": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP2",
      "path": "25"
    },
    "937": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "LT",
      "path": "25"
    },
    "938": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "939": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3B3"
    },
    "942": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "943": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "945": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "DUP1",
      "path": "25"
    },
    "946": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "REVERT",
      "path": "25"
    },
    "947": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "950": {
      "fn": "TestRouter.mint",
      "offset": [
        886,
        904
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "951": {
      "op": "POP"
    },
    "952": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 1,
      "value": "0x2"
    },
    "954": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "DUP2",
      "path": "25"
    },
    "955": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "DUP2",
      "path": "25"
    },
    "956": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "957": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "958": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "DUP8",
      "path": "25"
    },
    "959": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "960": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "961": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "DUP2",
      "path": "25"
    },
    "962": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C7"
    },
    "965": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "966": {
      "dev": "Modulus by zero",
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "INVALID",
      "path": "25"
    },
    "967": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "968": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        945
      ],
      "op": "SMOD",
      "path": "25"
    },
    "969": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        950
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "971": {
      "fn": "TestRouter.mint",
      "offset": [
        922,
        950
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "972": {
      "branch": 18,
      "fn": "TestRouter.mint",
      "offset": [
        922,
        950
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "973": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x407"
    },
    "976": {
      "branch": 18,
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "977": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "979": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "986": {
      "op": "SHL"
    },
    "987": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "DUP2",
      "path": "25"
    },
    "988": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "989": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "991": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "ADD",
      "path": "25"
    },
    "992": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "993": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "994": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "996": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "ADD",
      "path": "25"
    },
    "997": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "DUP3",
      "path": "25"
    },
    "998": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "DUP2",
      "path": "25"
    },
    "999": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "SUB",
      "path": "25"
    },
    "1000": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1001": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1002": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2B"
    },
    "1004": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1005": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1006": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1008": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "ADD",
      "path": "25"
    },
    "1009": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1010": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9E2"
    },
    "1013": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2B"
    },
    "1015": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1016": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "CODECOPY",
      "path": "25"
    },
    "1017": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1019": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "ADD",
      "path": "25"
    },
    "1020": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1021": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "POP",
      "path": "25"
    },
    "1022": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "POP",
      "path": "25"
    },
    "1023": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1025": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1026": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1027": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1028": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "SUB",
      "path": "25"
    },
    "1029": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1030": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1031": {
      "fn": "TestRouter.mint",
      "offset": [
        914,
        998
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1032": {
      "fn": "TestRouter.mint",
      "offset": [
        1028,
        1039
      ],
      "op": "DUP1",
      "path": "25",
      "statement": 2
    },
    "1033": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "1035": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "1036": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1025
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1037": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "1039": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "1040": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1041": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x416"
    },
    "1044": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1045": {
      "dev": "Modulus by zero",
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "INVALID",
      "path": "25"
    },
    "1046": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1047": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1039
      ],
      "op": "SMOD",
      "path": "25"
    },
    "1048": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1044
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "1050": {
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1044
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "1051": {
      "branch": 19,
      "fn": "TestRouter.mint",
      "offset": [
        1016,
        1044
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1052": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x456"
    },
    "1055": {
      "branch": 19,
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1056": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1058": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1065": {
      "op": "SHL"
    },
    "1066": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1067": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1068": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1070": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "ADD",
      "path": "25"
    },
    "1071": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1072": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1073": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1075": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "ADD",
      "path": "25"
    },
    "1076": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1077": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1078": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "SUB",
      "path": "25"
    },
    "1079": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1080": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1081": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2B"
    },
    "1083": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1084": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1085": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1087": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "ADD",
      "path": "25"
    },
    "1088": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1089": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA33"
    },
    "1092": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2B"
    },
    "1094": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1095": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "CODECOPY",
      "path": "25"
    },
    "1096": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1098": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "ADD",
      "path": "25"
    },
    "1099": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1100": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "POP",
      "path": "25"
    },
    "1101": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "POP",
      "path": "25"
    },
    "1102": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1104": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1105": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1106": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1107": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "SUB",
      "path": "25"
    },
    "1108": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1109": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1110": {
      "fn": "TestRouter.mint",
      "offset": [
        1008,
        1092
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1111": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 3,
      "value": "0x40"
    },
    "1113": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1114": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1115": {
      "fn": "TestRouter.mint",
      "offset": [
        1119,
        1129
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1116": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1118": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1119": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1120": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "ADD",
      "path": "25"
    },
    "1121": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1122": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1123": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1124": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1125": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1126": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1127": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1128": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "SUB",
      "path": "25"
    },
    "1129": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1130": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "ADD",
      "path": "25"
    },
    "1131": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1132": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1133": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1134": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1135": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "ADD",
      "path": "25"
    },
    "1136": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "1137": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1138": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1139": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1140": {
      "op": "PUSH4",
      "value": "0x3C8A7D8D"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1149": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "1150": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1151": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x44"
    },
    "1153": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1154": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1155": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1156": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1157": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1158": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x2"
    },
    "1160": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP12",
      "path": "25"
    },
    "1161": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1162": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "1163": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x64"
    },
    "1165": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1166": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1167": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1168": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP11",
      "path": "25"
    },
    "1169": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1170": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SIGNEXTEND",
      "path": "25"
    },
    "1171": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x84"
    },
    "1173": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1174": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1175": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1182": {
      "op": "SHL"
    },
    "1183": {
      "op": "SUB"
    },
    "1184": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP10",
      "path": "25"
    },
    "1185": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "AND",
      "path": "25"
    },
    "1186": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA4"
    },
    "1188": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1189": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1190": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1191": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xA0"
    },
    "1193": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xC4"
    },
    "1195": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1196": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1197": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1198": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1199": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1200": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1201": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1202": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE4"
    },
    "1204": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1205": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1206": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1207": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1208": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1215": {
      "op": "SHL"
    },
    "1216": {
      "op": "SUB"
    },
    "1217": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1118
      ],
      "op": "DUP15",
      "path": "25"
    },
    "1218": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1118
      ],
      "op": "AND",
      "path": "25"
    },
    "1219": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1118
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "1220": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1118
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x3C8A7D8D"
    },
    "1225": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1118
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "1226": {
      "fn": "TestRouter.mint",
      "offset": [
        1131,
        1140
      ],
      "op": "DUP15",
      "path": "25"
    },
    "1227": {
      "fn": "TestRouter.mint",
      "offset": [
        1131,
        1140
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "1228": {
      "fn": "TestRouter.mint",
      "offset": [
        1142,
        1151
      ],
      "op": "DUP15",
      "path": "25"
    },
    "1229": {
      "fn": "TestRouter.mint",
      "offset": [
        1142,
        1151
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "1230": {
      "fn": "TestRouter.mint",
      "offset": [
        1153,
        1159
      ],
      "op": "DUP15",
      "path": "25"
    },
    "1231": {
      "fn": "TestRouter.mint",
      "offset": [
        1153,
        1159
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "1232": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "1233": {
      "fn": "TestRouter.mint",
      "offset": [
        1161,
        1183
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "1234": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1235": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "1236": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1237": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x104"
    },
    "1240": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1241": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1242": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1243": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1244": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1245": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1246": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1247": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1250": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1251": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1252": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1253": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "LT",
      "path": "25"
    },
    "1254": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1255": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4FA"
    },
    "1258": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1259": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1260": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1261": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1262": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1263": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1264": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1265": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1266": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1267": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1269": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1270": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4E2"
    },
    "1273": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1274": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1275": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1276": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1277": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1278": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1279": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1280": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1281": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1282": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1283": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1284": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1285": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1287": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "AND",
      "path": "25"
    },
    "1288": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1289": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1290": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x527"
    },
    "1293": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1294": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1295": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1296": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SUB",
      "path": "25"
    },
    "1297": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1298": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1299": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "1301": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1302": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1304": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SUB",
      "path": "25"
    },
    "1305": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "1308": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "EXP",
      "path": "25"
    },
    "1309": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SUB",
      "path": "25"
    },
    "1310": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "NOT",
      "path": "25"
    },
    "1311": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "AND",
      "path": "25"
    },
    "1312": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1313": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1314": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1316": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1317": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1318": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1319": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1320": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1321": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "1322": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1323": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1324": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1325": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1326": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1327": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1328": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1329": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1331": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1332": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1333": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1334": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1335": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SUB",
      "path": "25"
    },
    "1336": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1337": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1339": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP8",
      "path": "25"
    },
    "1340": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1341": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "1342": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1343": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1344": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1345": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x549"
    },
    "1348": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1349": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1351": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1352": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1353": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1354": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1355": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "GAS",
      "path": "25"
    },
    "1356": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "CALL",
      "path": "25"
    },
    "1357": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1358": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1359": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1360": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x55D"
    },
    "1363": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1364": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1365": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1367": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1368": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "1369": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1370": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1372": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1373": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1374": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1375": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1376": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1377": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "POP",
      "path": "25"
    },
    "1378": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1380": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1381": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1382": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1384": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1385": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "LT",
      "path": "25"
    },
    "1386": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1387": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x573"
    },
    "1390": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1391": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1393": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1394": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1395": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1396": {
      "op": "POP"
    },
    "1397": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1398": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1399": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1401": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1402": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1403": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "ADD",
      "path": "25"
    },
    "1404": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1405": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1406": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP9",
      "path": "25"
    },
    "1407": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1408": {
      "fn": "TestRouter.mint",
      "offset": [
        1109,
        1184
      ],
      "op": "SWAP8",
      "path": "25"
    },
    "1409": {
      "op": "POP"
    },
    "1410": {
      "fn": "TestRouter.mint",
      "offset": [
        697,
        1191
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "1411": {
      "op": "POP"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "op": "POP"
    },
    "1414": {
      "op": "POP"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "op": "POP"
    },
    "1417": {
      "fn": "TestRouter.mint",
      "jump": "o",
      "offset": [
        697,
        1191
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1418": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1419": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1771,
        1812
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 4,
      "value": "0x596"
    },
    "1422": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1781,
        1792
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1423": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1794,
        1805
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1424": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1807,
        1811
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1425": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1807,
        1811
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1426": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1771,
        1780
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5D8"
    },
    "1429": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "jump": "i",
      "offset": [
        1771,
        1812
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1430": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1771,
        1812
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1431": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "POP",
      "path": "25"
    },
    "1432": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "POP",
      "path": "25"
    },
    "1433": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "POP",
      "path": "25"
    },
    "1434": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "offset": [
        1619,
        1819
      ],
      "op": "POP",
      "path": "25"
    },
    "1435": {
      "fn": "TestRouter.uniswapV3MintCallback",
      "jump": "o",
      "offset": [
        1619,
        1819
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1436": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1437": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1977,
        1992
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1439": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2010,
        2011
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1440": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1995,
        2007
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1441": {
      "branch": 20,
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1995,
        2011
      ],
      "op": "SGT",
      "path": "25"
    },
    "1442": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1995,
        2039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5AC"
    },
    "1445": {
      "branch": 20,
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1995,
        2039
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1446": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2038,
        2039
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1448": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1995,
        2039
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5AE"
    },
    "1451": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1995,
        2039
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1452": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1995,
        2039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1453": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2022,
        2034
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1454": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1995,
        2039
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1455": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1977,
        2039
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1456": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1977,
        2039
      ],
      "op": "POP",
      "path": "25"
    },
    "1457": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2049,
        2064
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1459": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2082,
        2083
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1460": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2067,
        2079
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1461": {
      "branch": 21,
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2067,
        2083
      ],
      "op": "SGT",
      "path": "25"
    },
    "1462": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2067,
        2111
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5C0"
    },
    "1465": {
      "branch": 21,
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2067,
        2111
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1466": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2110,
        2111
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1468": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2067,
        2111
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5C2"
    },
    "1471": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2067,
        2111
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1472": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2067,
        2111
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1473": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2094,
        2106
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1474": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2067,
        2111
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1475": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2049,
        2111
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1476": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2049,
        2111
      ],
      "op": "POP",
      "path": "25"
    },
    "1477": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2121,
        2154
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 5,
      "value": "0x5D0"
    },
    "1480": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2131,
        2138
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1481": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2140,
        2147
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1482": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2149,
        2153
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1483": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2149,
        2153
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1484": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2121,
        2130
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5D8"
    },
    "1487": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "jump": "i",
      "offset": [
        2121,
        2154
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1488": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        2121,
        2154
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1489": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "POP",
      "path": "25"
    },
    "1490": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "POP",
      "path": "25"
    },
    "1491": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "POP",
      "path": "25"
    },
    "1492": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "POP",
      "path": "25"
    },
    "1493": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "POP",
      "path": "25"
    },
    "1494": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "offset": [
        1825,
        2161
      ],
      "op": "POP",
      "path": "25"
    },
    "1495": {
      "fn": "TestRouter.uniswapV3SwapCallback",
      "jump": "o",
      "offset": [
        1825,
        2161
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1496": {
      "fn": "TestRouter._callback",
      "offset": [
        2167,
        2551
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1497": {
      "fn": "TestRouter._callback",
      "offset": [
        2327,
        2337
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1498": {
      "fn": "TestRouter._callback",
      "offset": [
        2290,
        2309
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1500": {
      "fn": "TestRouter._callback",
      "offset": [
        2375,
        2379
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1501": {
      "fn": "TestRouter._callback",
      "offset": [
        2375,
        2379
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1502": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1504": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1505": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "LT",
      "path": "25"
    },
    "1506": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1507": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5EB"
    },
    "1510": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1511": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1513": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1514": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1515": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1516": {
      "op": "POP"
    },
    "1517": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 6,
      "value": "0x40"
    },
    "1519": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1520": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1521": {
      "op": "PUSH4",
      "value": "0xDFE1681"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1528": {
      "op": "SHL"
    },
    "1529": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1530": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1531": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1532": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1539": {
      "op": "SHL"
    },
    "1540": {
      "op": "SUB"
    },
    "1541": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1542": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "1543": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1544": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "AND",
      "path": "25"
    },
    "1545": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "1546": {
      "op": "POP"
    },
    "1547": {
      "fn": "TestRouter._callback",
      "offset": [
        2402,
        2468
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x679"
    },
    "1550": {
      "fn": "TestRouter._callback",
      "offset": [
        2402,
        2468
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1551": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1552": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1553": {
      "fn": "TestRouter._callback",
      "offset": [
        2448,
        2458
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1554": {
      "fn": "TestRouter._callback",
      "offset": [
        2448,
        2458
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1555": {
      "fn": "TestRouter._callback",
      "offset": [
        2460,
        2467
      ],
      "op": "DUP12",
      "path": "25"
    },
    "1556": {
      "fn": "TestRouter._callback",
      "offset": [
        2460,
        2467
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1557": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2420
      ],
      "op": "DUP9",
      "path": "25"
    },
    "1558": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2420
      ],
      "op": "AND",
      "path": "25"
    },
    "1559": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2420
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1560": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2420
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xDFE1681"
    },
    "1565": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2420
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1566": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1568": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1569": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1570": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "ADD",
      "path": "25"
    },
    "1571": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1572": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1574": {
      "fn": "TestRouter._callback",
      "offset": [
        2364,
        2391
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1575": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1576": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1577": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1578": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1579": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "SUB",
      "path": "25"
    },
    "1580": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "ADD",
      "path": "25"
    },
    "1581": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1582": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2420
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1583": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1584": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "1585": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1586": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1587": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1588": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x63C"
    },
    "1591": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1592": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1594": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1595": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1596": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1597": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "POP",
      "path": "25"
    },
    "1598": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "GAS",
      "path": "25"
    },
    "1599": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "1600": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1601": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1602": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1603": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x650"
    },
    "1606": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1607": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1608": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1610": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1611": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "1612": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1613": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1615": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1616": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1617": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "POP",
      "path": "25"
    },
    "1618": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "POP",
      "path": "25"
    },
    "1619": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "POP",
      "path": "25"
    },
    "1620": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "POP",
      "path": "25"
    },
    "1621": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1623": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1624": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1625": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1627": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1628": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "LT",
      "path": "25"
    },
    "1629": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1630": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x666"
    },
    "1633": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1634": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1636": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1637": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1638": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1639": {
      "op": "POP"
    },
    "1640": {
      "fn": "TestRouter._callback",
      "offset": [
        2409,
        2422
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1647": {
      "op": "SHL"
    },
    "1648": {
      "op": "SUB"
    },
    "1649": {
      "fn": "TestRouter._callback",
      "offset": [
        2402,
        2440
      ],
      "op": "AND",
      "path": "25"
    },
    "1650": {
      "fn": "TestRouter._callback",
      "offset": [
        2402,
        2440
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1651": {
      "fn": "TestRouter._callback",
      "offset": [
        2402,
        2468
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1652": {
      "fn": "TestRouter._callback",
      "offset": [
        2402,
        2468
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1653": {
      "fn": "TestRouter._callback",
      "offset": [
        2402,
        2440
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x6B8"
    },
    "1656": {
      "fn": "TestRouter._callback",
      "jump": "i",
      "offset": [
        2402,
        2468
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1657": {
      "fn": "TestRouter._callback",
      "offset": [
        2402,
        2468
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1658": {
      "fn": "TestRouter._callback",
      "offset": [
        2478,
        2544
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 7,
      "value": "0x5D0"
    },
    "1661": {
      "fn": "TestRouter._callback",
      "offset": [
        2517,
        2522
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1662": {
      "fn": "TestRouter._callback",
      "offset": [
        2524,
        2534
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1663": {
      "fn": "TestRouter._callback",
      "offset": [
        2536,
        2543
      ],
      "op": "DUP8",
      "path": "25"
    },
    "1664": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2489
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2496
      ],
      "op": "AND",
      "path": "25"
    },
    "1674": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2496
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD21220A7"
    },
    "1679": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1681": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1682": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1683": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xFFFFFFFF"
    },
    "1688": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "AND",
      "path": "25"
    },
    "1689": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "1691": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "SHL",
      "path": "25"
    },
    "1692": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1693": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1694": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1696": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "ADD",
      "path": "25"
    },
    "1697": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1699": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1701": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1702": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1703": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1704": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "SUB",
      "path": "25"
    },
    "1705": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1706": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1707": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1708": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "1709": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1710": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1711": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1712": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x63C"
    },
    "1715": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1716": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1718": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1719": {
      "fn": "TestRouter._callback",
      "offset": [
        2485,
        2498
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1720": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1721": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x40"
    },
    "1723": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1724": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1731": {
      "op": "SHL"
    },
    "1732": {
      "op": "SUB"
    },
    "1733": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1734": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1735": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "1736": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "1738": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1739": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1740": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1741": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1742": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "1743": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "1745": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1746": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1747": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1748": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "1750": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1751": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1752": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1753": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1754": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1755": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1756": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1757": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1758": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1759": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1760": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SUB",
      "path": "4"
    },
    "1761": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1762": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1763": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1764": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1765": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1766": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x84"
    },
    "1768": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1769": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1770": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1771": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1772": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1773": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1774": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1776": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1777": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "1778": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1779": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "op": "SUB"
    },
    "1788": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "1789": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1796": {
      "op": "SHL"
    },
    "1797": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "OR",
      "path": "4"
    },
    "1798": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1799": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1800": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x596"
    },
    "1803": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1804": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1805": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1806": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1808": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x762"
    },
    "1811": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3440,
        3444
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1814": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1815": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1816": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1818": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "4"
    },
    "1819": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1821": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1822": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1823": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1825": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1827": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1829": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "4"
    },
    "1830": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "1863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1865": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "POP",
      "path": "4"
    },
    "1866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3420,
        3425
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1873": {
      "op": "SHL"
    },
    "1874": {
      "op": "SUB"
    },
    "1875": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "AND",
      "path": "4"
    },
    "1876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C3"
    },
    "1879": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1882": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "1888": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "AND",
      "path": "4"
    },
    "1889": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1890": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1891": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1892": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1893": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1894": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1895": {
      "op": "POP"
    },
    "1896": {
      "branch": 26,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3516
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1897": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7BE"
    },
    "1900": {
      "branch": 26,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1901": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3635,
        3645
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 9
    },
    "1902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1905": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ADD",
      "path": "4"
    },
    "1906": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1908": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1910": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1911": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "LT",
      "path": "4"
    },
    "1912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x781"
    },
    "1916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1917": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1919": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1920": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1921": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1922": {
      "op": "POP"
    },
    "1923": {
      "branch": 27,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1924": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7BE"
    },
    "1927": {
      "branch": 27,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1930": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1939": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "1943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "1948": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1949": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1950": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "4"
    },
    "1951": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1952": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "1955": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1959": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "1960": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1961": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA5E"
    },
    "1964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "1966": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "1971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "4"
    },
    "1973": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "4"
    },
    "1974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1977": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1978": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1979": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "4"
    },
    "1980": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1981": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1982": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1983": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "POP",
      "path": "4"
    },
    "1984": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "POP",
      "path": "4"
    },
    "1985": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "POP",
      "path": "4"
    },
    "1986": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "o",
      "offset": [
        2967,
        3718
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1987": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1988": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1990": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 10,
      "value": "0x7D2"
    },
    "1993": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1994": {
      "fn": "Address.functionCall",
      "offset": [
        3745,
        3749
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1995": {
      "fn": "Address.functionCall",
      "offset": [
        3751,
        3752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1997": {
      "fn": "Address.functionCall",
      "offset": [
        3754,
        3766
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1998": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7DC"
    },
    "2001": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2002": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2003": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2004": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "POP",
      "path": "5"
    },
    "2005": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2006": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2007": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2008": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "5"
    },
    "2009": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "5"
    },
    "2010": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "POP",
      "path": "5"
    },
    "2011": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2013": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2015": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4792,
        4797
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 11
    },
    "2016": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4788
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "2017": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "LT",
      "path": "5"
    },
    "2018": {
      "branch": 22,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2019": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x81D"
    },
    "2022": {
      "branch": 22,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2023": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2026": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2032": {
      "op": "SHL"
    },
    "2033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2034": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2035": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "2038": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2040": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "2043": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2044": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "5"
    },
    "2046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "2050": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2051": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "2055": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2056": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA0D"
    },
    "2059": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "2061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "2063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2065": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "2066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "5"
    },
    "2068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "5"
    },
    "2069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2071": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2072": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2074": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "5"
    },
    "2075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2077": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2078": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 12,
      "value": "0x826"
    },
    "2081": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4869,
        4875
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2082": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4868
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x937"
    },
    "2085": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2086": {
      "branch": 23,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2087": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x877"
    },
    "2090": {
      "branch": 23,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2091": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2094": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2095": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2101": {
      "op": "SHL"
    },
    "2102": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2108": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "2110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1D"
    },
    "2113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2116": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "2117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "2151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2154": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "2155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2157": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2158": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2160": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SUB",
      "path": "5"
    },
    "2162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "2164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "2165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2166": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2167": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2170": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5018
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2171": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "op": "SUB"
    },
    "2180": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5033
      ],
      "op": "AND",
      "path": "5"
    },
    "2181": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5047
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2182": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5054
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2183": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2185": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2186": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2187": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2188": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2189": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2190": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2191": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "2194": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2195": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2196": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2198": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2199": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2201": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2202": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "LT",
      "path": "5"
    },
    "2203": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8B5"
    },
    "2206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2207": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2208": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2209": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2210": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2213": {
      "op": "NOT"
    },
    "2214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2215": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "2217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2218": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2221": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "2223": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2224": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "2225": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x896"
    },
    "2228": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2229": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2232": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2233": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "5"
    },
    "2236": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EXP",
      "path": "5"
    },
    "2240": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "5"
    },
    "2241": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2242": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "5"
    },
    "2243": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "5"
    },
    "2246": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2247": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2248": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2249": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "5"
    },
    "2250": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "OR",
      "path": "5"
    },
    "2253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2259": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2263": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "2264": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2265": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2266": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2269": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2272": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "5"
    },
    "2275": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "GAS",
      "path": "5"
    },
    "2279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "CALL",
      "path": "5"
    },
    "2280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2288": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EQ",
      "path": "5"
    },
    "2290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x917"
    },
    "2293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2297": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "5"
    },
    "2302": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "2304": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "2306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "5"
    },
    "2307": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "2309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2311": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2318": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "2322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x91C"
    },
    "2326": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2330": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2331": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2332": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2333": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2334": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2335": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2336": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2337": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "2338": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 13,
      "value": "0x92C"
    },
    "2341": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2342": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5109
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2343": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5111,
        5123
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2344": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x93D"
    },
    "2347": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2348": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2349": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5124
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "2350": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "2351": {
      "op": "POP"
    },
    "2352": {
      "op": "POP"
    },
    "2353": {
      "op": "POP"
    },
    "2354": {
      "op": "POP"
    },
    "2355": {
      "op": "POP"
    },
    "2356": {
      "op": "POP"
    },
    "2357": {
      "op": "POP"
    },
    "2358": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2359": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2360": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "2361": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "5",
      "statement": 14
    },
    "2362": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2363": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2364": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2365": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2366": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2368": {
      "branch": 24,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2369": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2370": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x94C"
    },
    "2373": {
      "branch": 24,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2374": {
      "op": "POP"
    },
    "2375": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 15
    },
    "2376": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D5"
    },
    "2379": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2380": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2381": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2382": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2383": {
      "branch": 25,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2384": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x95C"
    },
    "2387": {
      "branch": 25,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2388": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2389": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2390": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2391": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2392": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2394": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "5"
    },
    "2395": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2396": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2397": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 16
    },
    "2398": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2400": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2401": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2409": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2410": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2412": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "2413": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2414": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2415": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2417": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "2418": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2419": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2420": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "5"
    },
    "2421": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2422": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2423": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2424": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2425": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2426": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2427": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2428": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2429": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2431": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "2432": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2433": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2434": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2435": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2436": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2437": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2439": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "2440": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2441": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2442": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2443": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2444": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2446": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2447": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2448": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2449": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "LT",
      "path": "5"
    },
    "2450": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2451": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9A6"
    },
    "2454": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2455": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2456": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2457": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "2458": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2459": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2460": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2461": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "2462": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2463": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2465": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "2466": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x98E"
    },
    "2469": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2470": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2471": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2472": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2473": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2474": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2475": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2476": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2477": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2478": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2479": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "2480": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2481": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2483": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "5"
    },
    "2484": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2485": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2486": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9D3"
    },
    "2489": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2490": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2491": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2492": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "5"
    },
    "2493": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2494": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2495": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2497": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2498": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2500": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "5"
    },
    "2501": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2504": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "EXP",
      "path": "5"
    },
    "2505": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "5"
    },
    "2506": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "NOT",
      "path": "5"
    },
    "2507": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "5"
    },
    "2508": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2509": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2510": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2512": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "2513": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2514": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2515": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2516": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2517": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2518": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2519": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2520": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "5"
    },
    "2521": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2523": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2524": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2525": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2526": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "5"
    },
    "2527": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2528": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "REVERT",
      "path": "5"
    }
  },
  "sha1": "6718555fac92af8a44f884758a700ffae7c5b6b8",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity 0.7.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\";\nimport \"@uniswap/v3-core/contracts/libraries/TickMath.sol\";\n\n/**\n * @title  TestRouter\n * @dev    DO NOT USE IN PRODUCTION. This is only intended to be used for\n *         tests and lacks slippage and callback caller checks.\n */\ncontract TestRouter is IUniswapV3MintCallback, IUniswapV3SwapCallback {\n    using SafeERC20 for IERC20;\n\n    function mint(\n        IUniswapV3Pool pool,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256, uint256) {\n        int24 tickSpacing = pool.tickSpacing();\n        require(tickLower % tickSpacing == 0, \"tickLower must be a multiple of tickSpacing\");\n        require(tickUpper % tickSpacing == 0, \"tickUpper must be a multiple of tickSpacing\");\n        return pool.mint(msg.sender, tickLower, tickUpper, amount, abi.encode(msg.sender));\n    }\n\n    function swap(\n        IUniswapV3Pool pool,\n        bool zeroForOne,\n        int256 amountSpecified\n    ) external returns (int256, int256) {\n        return\n            pool.swap(\n                msg.sender,\n                zeroForOne,\n                amountSpecified,\n                zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1,\n                abi.encode(msg.sender)\n            );\n    }\n\n    function uniswapV3MintCallback(\n        uint256 amount0Owed,\n        uint256 amount1Owed,\n        bytes calldata data\n    ) external override {\n        _callback(amount0Owed, amount1Owed, data);\n    }\n\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external override {\n        uint256 amount0 = amount0Delta > 0 ? uint256(amount0Delta) : 0;\n        uint256 amount1 = amount1Delta > 0 ? uint256(amount1Delta) : 0;\n        _callback(amount0, amount1, data);\n    }\n\n    function _callback(\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) internal {\n        IUniswapV3Pool pool = IUniswapV3Pool(msg.sender);\n        address payer = abi.decode(data, (address));\n\n        IERC20(pool.token0()).safeTransferFrom(payer, msg.sender, amount0);\n        IERC20(pool.token1()).safeTransferFrom(payer, msg.sender, amount1);\n    }\n}\n",
  "sourceMap": "588:1965:25:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/test/TestRouter.sol",
  "type": "contract"
}