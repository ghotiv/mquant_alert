{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "_baseThreshold",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_limitThreshold",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        },
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "baseThreshold",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTick",
      "outputs": [
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTwap",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRebalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTick",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitThreshold",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTwapDeviation",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_baseThreshold",
          "type": "int24"
        }
      ],
      "name": "setBaseThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_limitThreshold",
          "type": "int24"
        }
      ],
      "name": "setLimitThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        }
      ],
      "name": "setMaxTwapDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        }
      ],
      "name": "setTwapDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "twapDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract AlphaVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/Math.sol",
    "1": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "11": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
    "12": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
    "13": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
    "14": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
    "15": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
    "16": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolState.sol",
    "17": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FixedPoint96.sol",
    "18": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FullMath.sol",
    "19": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
    "2": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "20": "Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/LiquidityAmounts.sol",
    "21": "Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/PositionKey.sol",
    "22": "contracts/AlphaStrategy.sol",
    "23": "contracts/AlphaVault.sol",
    "27": "interfaces/IVault.sol",
    "3": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "6": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "7": "/Users/ghoti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
    "8": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
    "9": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol"
  },
  "ast": {
    "absolutePath": "contracts/AlphaStrategy.sol",
    "exportedSymbols": {
      "Address": [
        5952
      ],
      "AlphaStrategy": [
        457
      ],
      "AlphaVault": [
        2169
      ],
      "Context": [
        5656
      ],
      "ERC20": [
        4445
      ],
      "FixedPoint96": [
        5962
      ],
      "FullMath": [
        6135
      ],
      "IERC20": [
        4523
      ],
      "IUniswapV3MintCallback": [
        4790
      ],
      "IUniswapV3Pool": [
        2979
      ],
      "IUniswapV3PoolActions": [
        5309
      ],
      "IUniswapV3PoolDerivedState": [
        5340
      ],
      "IUniswapV3PoolEvents": [
        5459
      ],
      "IUniswapV3PoolImmutables": [
        5499
      ],
      "IUniswapV3PoolOwnerActions": [
        5525
      ],
      "IUniswapV3PoolState": [
        5633
      ],
      "IVault": [
        5199
      ],
      "LiquidityAmounts": [
        5130
      ],
      "Math": [
        3587
      ],
      "PositionKey": [
        5155
      ],
      "ReentrancyGuard": [
        4776
      ],
      "SafeERC20": [
        4736
      ],
      "SafeMath": [
        3942
      ],
      "TickMath": [
        3514
      ]
    },
    "id": 458,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:22:22"
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 458,
        "sourceUnit": 2980,
        "src": "63:66:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ghoti/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
        "file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 458,
        "sourceUnit": 3515,
        "src": "130:59:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AlphaVault.sol",
        "file": "./AlphaVault.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 458,
        "sourceUnit": 2170,
        "src": "191:26:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "219:1113:22",
          "text": " @title   Alpha Strategy\n @notice  Rebalancing strategy for Alpha Vault that maintains the two\n          following range orders:\n          1. Base order is placed between X - B and X + B + TS.\n          2. Limit order is placed between X - L and X, or between X + TS\n             and X + L + TS, depending on which token it holds more of.\n          where:\n              X = current tick rounded down to multiple of tick spacing\n              TS = tick spacing\n              B = base threshold\n              L = limit threshold\n          Note that after these two orders, the vault should have deposited\n          all its tokens and should only have a few wei left.\n          Because the limit order tries to sell whichever token the vault\n          holds more of, the vault's holdings will have a tendency to get\n          closer to a 1:1 balance. This enables it to continue providing\n          liquidity without running out of inventory of either token, and\n          achieves this without the need to swap directly on Uniswap and pay\n          fees."
        },
        "fullyImplemented": true,
        "id": 457,
        "linearizedBaseContracts": [
          457
        ],
        "name": "AlphaStrategy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fbfa77cf",
            "id": 7,
            "mutability": "mutable",
            "name": "vault",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1362:23:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AlphaVault_$2169",
              "typeString": "contract AlphaVault"
            },
            "typeName": {
              "id": 6,
              "name": "AlphaVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2169,
              "src": "1362:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AlphaVault_$2169",
                "typeString": "contract AlphaVault"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 9,
            "mutability": "mutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1391:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
              "typeString": "contract IUniswapV3Pool"
            },
            "typeName": {
              "id": 8,
              "name": "IUniswapV3Pool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2979,
              "src": "1391:14:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                "typeString": "contract IUniswapV3Pool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0c93a7c",
            "id": 11,
            "mutability": "mutable",
            "name": "tickSpacing",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1423:24:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 10,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1423:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a87bab9c",
            "id": 13,
            "mutability": "mutable",
            "name": "baseThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1454:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 12,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1454:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16c3e29d",
            "id": 15,
            "mutability": "mutable",
            "name": "limitThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1486:27:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 14,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1486:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7c7cb91",
            "id": 17,
            "mutability": "mutable",
            "name": "maxTwapDeviation",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1519:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 16,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1519:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "26d89545",
            "id": 19,
            "mutability": "mutable",
            "name": "twapDuration",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1554:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 18,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1554:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aced1661",
            "id": 21,
            "mutability": "mutable",
            "name": "keeper",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1586:21:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1586:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "106b9ca1",
            "id": 23,
            "mutability": "mutable",
            "name": "lastRebalance",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1614:28:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1614:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3dfa5d87",
            "id": 25,
            "mutability": "mutable",
            "name": "lastTick",
            "nodeType": "VariableDeclaration",
            "scope": 457,
            "src": "1648:21:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 24,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1648:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "2261:552:22",
              "statements": [
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2271:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlphaVault_$2169",
                        "typeString": "contract AlphaVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 43,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "2290:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 42,
                        "name": "AlphaVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2169,
                        "src": "2279:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AlphaVault_$2169_$",
                          "typeString": "type(contract AlphaVault)"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2279:18:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlphaVault_$2169",
                        "typeString": "contract AlphaVault"
                      }
                    },
                    "src": "2271:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AlphaVault_$2169",
                      "typeString": "contract AlphaVault"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "2271:26:22"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2307:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 48,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2314:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AlphaVault_$2169",
                            "typeString": "contract AlphaVault"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 532,
                        "src": "2314:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IUniswapV3Pool_$2979_$",
                          "typeString": "function () view external returns (contract IUniswapV3Pool)"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2314:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "src": "2307:19:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "2307:19:22"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2336:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 54,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "2350:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tickSpacing",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5492,
                        "src": "2350:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                          "typeString": "function () view external returns (int24)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2350:18:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2336:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:32:22"
                },
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "2379:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60,
                      "name": "_baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2395:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2379:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "2379:30:22"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2419:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64,
                      "name": "_limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2436:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2419:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "2419:32:22"
                },
                {
                  "expression": {
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67,
                      "name": "maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2461:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 68,
                      "name": "_maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2480:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2461:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "2461:36:22"
                },
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 71,
                      "name": "twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2507:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 72,
                      "name": "_twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2522:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2507:28:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:28:22"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "2545:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2554:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2545:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "2545:16:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80,
                        "name": "_baseThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "2588:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 79,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "2572:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$returns$__$",
                        "typeString": "function (int24) view"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2572:31:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "2572:31:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84,
                        "name": "_limitThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "2629:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 83,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "2613:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$returns$__$",
                        "typeString": "function (int24) view"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2613:32:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:32:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88,
                          "name": "_maxTwapDeviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2663:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2684:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2663:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617854776170446576696174696f6e",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2687:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        },
                        "value": "maxTwapDeviation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2655:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2655:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2655:51:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 95,
                          "name": "_twapDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2724:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2740:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2724:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "747761704475726174696f6e",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2743:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        },
                        "value": "twapDuration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        }
                      ],
                      "id": 94,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2716:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2716:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "2716:42:22"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 101,
                          "name": "lastTick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "2772:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 102,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2769:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int24_$__$__$__$__$__$",
                        "typeString": "tuple(,int24,,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 103,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "2794:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "slot0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5546,
                        "src": "2794:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                          "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2794:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "src": "2769:37:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "2769:37:22"
                }
              ]
            },
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "1676:389:22",
              "text": " @param _vault Underlying Alpha Vault\n @param _baseThreshold Used to determine base order range\n @param _limitThreshold Used to determine limit order range\n @param _maxTwapDeviation Max deviation from TWAP during rebalance\n @param _twapDuration TWAP duration in seconds for rebalance check\n @param _keeper Account that can call `rebalance()`"
            },
            "id": 109,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "2091:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_baseThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "2115:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_limitThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "2145:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_maxTwapDeviation",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "2176:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_twapDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "2209:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2209:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "2239:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2081:179:22"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2261:0:22"
            },
            "scope": 457,
            "src": "2070:743:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "3020:1262:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 114,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3038:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3038:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 116,
                          "name": "keeper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "3052:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3038:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6b6565706572",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3060:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                          "typeString": "literal_string \"keeper\""
                        },
                        "value": "keeper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                          "typeString": "literal_string \"keeper\""
                        }
                      ],
                      "id": 113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3030:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3030:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "3030:39:22"
                },
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "tick",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "3236:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3236:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 123,
                      "name": "getTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "3249:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int24_$",
                        "typeString": "function () view returns (int24)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3249:9:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3236:22:22"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "maxThreshold",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "3268:18:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3268:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 134,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 128,
                        "name": "baseThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3289:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 129,
                        "name": "limitThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "3305:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "3289:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 132,
                      "name": "limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3338:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3289:63:22",
                    "trueExpression": {
                      "id": 131,
                      "name": "baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "3322:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3268:84:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 136,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "3370:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 137,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3514,
                                "src": "3377:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "MIN_TICK",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2987,
                              "src": "3377:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 139,
                              "name": "maxThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "3397:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "3377:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 141,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3412:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "3377:46:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "3370:53:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b20746f6f206c6f77",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3425:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2cb156c643e8cd3b45577b85d6b5d19199f42d422facd129dca4f0074689ac99",
                          "typeString": "literal_string \"tick too low\""
                        },
                        "value": "tick too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2cb156c643e8cd3b45577b85d6b5d19199f42d422facd129dca4f0074689ac99",
                          "typeString": "literal_string \"tick too low\""
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3362:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3362:78:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "3362:78:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 148,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "3458:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 149,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3514,
                                "src": "3465:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "MAX_TICK",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2992,
                              "src": "3465:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 151,
                              "name": "maxThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "3485:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "3465:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 153,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3500:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "3465:46:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "3458:53:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b20746f6f2068696768",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3513:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1098925fe2674faf660232cdefa7e9950f36e5a5c80a9a62da9e887a94f892d7",
                          "typeString": "literal_string \"tick too high\""
                        },
                        "value": "tick too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1098925fe2674faf660232cdefa7e9950f36e5a5c80a9a62da9e887a94f892d7",
                          "typeString": "literal_string \"tick too high\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3450:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3450:79:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:79:22"
                },
                {
                  "assignments": [
                    160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 160,
                      "mutability": "mutable",
                      "name": "twap",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "3723:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 159,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3723:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 163,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 161,
                      "name": "getTwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "3736:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int24_$",
                        "typeString": "function () view returns (int24)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3736:9:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3723:22:22"
                },
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "deviation",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "3755:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3755:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 176,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 166,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "3773:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 167,
                        "name": "twap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3780:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "3773:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 172,
                        "name": "twap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3801:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 173,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "3808:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "3801:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3773:39:22",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 169,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "3787:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 170,
                        "name": "twap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3794:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "3787:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3755:57:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 178,
                          "name": "deviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "3830:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 179,
                          "name": "maxTwapDeviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "3843:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "3830:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617854776170446576696174696f6e",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3861:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        },
                        "value": "maxTwapDeviation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        }
                      ],
                      "id": 177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3822:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3822:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "3822:58:22"
                },
                {
                  "assignments": [
                    185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 185,
                      "mutability": "mutable",
                      "name": "tickFloor",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "3891:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 184,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3891:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 187,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "3916:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 186,
                      "name": "_floor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 329,
                      "src": "3909:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$returns$_t_int24_$",
                        "typeString": "function (int24) view returns (int24)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3909:12:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3891:30:22"
                },
                {
                  "assignments": [
                    191
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 191,
                      "mutability": "mutable",
                      "name": "tickCeil",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "3931:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3931:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 192,
                      "name": "tickFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "3948:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 193,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3960:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "3948:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3931:40:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 199,
                          "name": "tickFloor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "4011:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 200,
                          "name": "baseThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4023:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4011:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 202,
                          "name": "tickCeil",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "4050:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 203,
                          "name": "baseThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4061:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4050:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 205,
                          "name": "tickFloor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "4088:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 206,
                          "name": "limitThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "4100:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4088:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 208,
                        "name": "tickFloor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "4128:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 209,
                        "name": "tickCeil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "4151:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 210,
                          "name": "tickCeil",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "4173:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 211,
                          "name": "limitThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "4184:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4173:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "expression": {
                        "id": 196,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3982:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AlphaVault_$2169",
                          "typeString": "contract AlphaVault"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rebalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1375,
                      "src": "3982:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_int24_$_t_int24_$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24,int24,int24,int24,int24) external"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3982:226:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:226:22"
                },
                {
                  "expression": {
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 215,
                      "name": "lastRebalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "4219:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 216,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4235:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4235:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4219:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "4219:31:22"
                },
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 220,
                      "name": "lastTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "4260:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 221,
                      "name": "tick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "4271:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "4260:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "4260:15:22"
                }
              ]
            },
            "documentation": {
              "id": 110,
              "nodeType": "StructuredDocumentation",
              "src": "2819:166:22",
              "text": " @notice Calculates new ranges for orders and calls `vault.rebalance()`\n so that vault can update its positions. Can only be called by keeper."
            },
            "functionSelector": "7d7c2a1c",
            "id": 225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3008:2:22"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3020:0:22"
            },
            "scope": 457,
            "src": "2990:1292:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "4403:50:22",
              "statements": [
                {
                  "expression": {
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 231,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "4416:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 232,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4413:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int24_$__$__$__$__$__$",
                        "typeString": "tuple(,int24,,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 233,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "4434:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "slot0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5546,
                        "src": "4434:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                          "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4434:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "src": "4413:33:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "4413:33:22"
                }
              ]
            },
            "documentation": {
              "id": 226,
              "nodeType": "StructuredDocumentation",
              "src": "4288:58:22",
              "text": "@dev Fetches current price in ticks from Uniswap pool."
            },
            "functionSelector": "df8ad814",
            "id": 239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTick",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4367:2:22"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "4391:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4390:12:22"
            },
            "scope": 457,
            "src": "4351:102:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "4583:325:22",
              "statements": [
                {
                  "assignments": [
                    246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 246,
                      "mutability": "mutable",
                      "name": "_twapDuration",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "4593:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 245,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4593:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 248,
                  "initialValue": {
                    "id": 247,
                    "name": "twapDuration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "4616:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4593:35:22"
                },
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "mutability": "mutable",
                      "name": "secondsAgo",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "4638:26:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 251,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4638:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 252,
                        "nodeType": "ArrayTypeName",
                        "src": "4638:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 259,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4680:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4667:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 254,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4671:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 255,
                        "nodeType": "ArrayTypeName",
                        "src": "4671:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4667:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4638:44:22"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 260,
                        "name": "secondsAgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "4692:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 262,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4703:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4692:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 263,
                      "name": "_twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "4708:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4692:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4692:29:22"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 266,
                        "name": "secondsAgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "4731:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 268,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4742:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4731:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4747:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4731:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "4731:17:22"
                },
                {
                  "assignments": [
                    276,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 276,
                      "mutability": "mutable",
                      "name": "tickCumulatives",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "4760:30:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                        "typeString": "int56[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 274,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "4760:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "id": 275,
                        "nodeType": "ArrayTypeName",
                        "src": "4760:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                          "typeString": "int56[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 281,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 279,
                        "name": "secondsAgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "4809:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 277,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "4796:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$2979",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "observe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5325,
                      "src": "4796:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                        "typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4796:24:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                      "typeString": "tuple(int56[] memory,uint160[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4759:61:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int56",
                                "typeString": "int56"
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 284,
                                  "name": "tickCumulatives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 276,
                                  "src": "4844:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                                    "typeString": "int56[] memory"
                                  }
                                },
                                "id": 286,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4860:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4844:18:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int56",
                                  "typeString": "int56"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 287,
                                  "name": "tickCumulatives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 276,
                                  "src": "4865:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                                    "typeString": "int56[] memory"
                                  }
                                },
                                "id": 289,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4881:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4865:18:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int56",
                                  "typeString": "int56"
                                }
                              },
                              "src": "4844:39:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int56",
                                "typeString": "int56"
                              }
                            }
                          ],
                          "id": 291,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4843:41:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 292,
                          "name": "_twapDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "4887:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "4843:57:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      ],
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4837:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int24_$",
                        "typeString": "type(int24)"
                      },
                      "typeName": {
                        "id": 282,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4837:5:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4837:64:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "functionReturnParameters": 244,
                  "id": 295,
                  "nodeType": "Return",
                  "src": "4830:71:22"
                }
              ]
            },
            "documentation": {
              "id": 240,
              "nodeType": "StructuredDocumentation",
              "src": "4459:72:22",
              "text": "@dev Fetches time-weighted average price in ticks from Uniswap pool."
            },
            "functionSelector": "5d752a9a",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4552:2:22"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "4576:5:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4576:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4575:7:22"
            },
            "scope": 457,
            "src": "4536:372:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "5078:158:22",
              "statements": [
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "compressed",
                      "nodeType": "VariableDeclaration",
                      "scope": 328,
                      "src": "5088:16:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5088:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 310,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 307,
                      "name": "tick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "5107:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 308,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "5114:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "5107:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5088:37:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 311,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "5139:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5146:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5139:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 314,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "5151:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "id": 315,
                          "name": "tickSpacing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "5158:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "5151:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5173:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5151:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5139:35:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 323,
                  "nodeType": "IfStatement",
                  "src": "5135:53:22",
                  "trueBody": {
                    "expression": {
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "5176:12:22",
                      "subExpression": {
                        "id": 320,
                        "name": "compressed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "5176:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 322,
                    "nodeType": "ExpressionStatement",
                    "src": "5176:12:22"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 324,
                      "name": "compressed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "5205:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 325,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "5218:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "5205:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "functionReturnParameters": 304,
                  "id": 327,
                  "nodeType": "Return",
                  "src": "5198:31:22"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "4914:101:22",
              "text": "@dev Rounds tick down towards negative infinity so that it's a multiple\n of `tickSpacing`."
            },
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_floor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "5036:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5036:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5035:12:22"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "5071:5:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5071:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5070:7:22"
            },
            "scope": 457,
            "src": "5020:216:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "5298:200:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 335,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 331,
                          "src": "5316:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5328:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5316:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c64203e2030",
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5331:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df0fb30611522b7d3d493d2ba0f45b0b93bc4a4d756948f06feb03ce263eb5ea",
                          "typeString": "literal_string \"threshold > 0\""
                        },
                        "value": "threshold > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df0fb30611522b7d3d493d2ba0f45b0b93bc4a4d756948f06feb03ce263eb5ea",
                          "typeString": "literal_string \"threshold > 0\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5308:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5308:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "5308:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 342,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 331,
                          "src": "5365:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 343,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3514,
                            "src": "5377:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3514_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_TICK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2992,
                          "src": "5377:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "5365:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c6420746f6f2068696768",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5396:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e07434090274a7b8a40b387d12d4995efc5241fc0eba573044505275ac4c6f",
                          "typeString": "literal_string \"threshold too high\""
                        },
                        "value": "threshold too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e07434090274a7b8a40b387d12d4995efc5241fc0eba573044505275ac4c6f",
                          "typeString": "literal_string \"threshold too high\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5357:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5357:60:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "5357:60:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 350,
                            "name": "threshold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "5435:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 351,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "5447:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "5435:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5462:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5435:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c642025207469636b53706163696e67",
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5465:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17d46e051321492bc0005d031877507de1a7bdc865b1b762f49073fc9fc9aae5",
                          "typeString": "literal_string \"threshold % tickSpacing\""
                        },
                        "value": "threshold % tickSpacing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17d46e051321492bc0005d031877507de1a7bdc865b1b762f49073fc9fc9aae5",
                          "typeString": "literal_string \"threshold % tickSpacing\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5427:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5427:64:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "5427:64:22"
                }
              ]
            },
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "5267:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5267:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5266:17:22"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5298:0:22"
            },
            "scope": 457,
            "src": "5242:256:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "5564:33:22",
              "statements": [
                {
                  "expression": {
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 366,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5574:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 367,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "5583:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5574:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "5574:16:22"
                }
              ]
            },
            "functionSelector": "748747e6",
            "id": 371,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 364,
                "modifierName": {
                  "id": 363,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 456,
                  "src": "5549:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5549:14:22"
              }
            ],
            "name": "setKeeper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "5523:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5523:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5522:17:22"
            },
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5564:0:22"
            },
            "scope": 457,
            "src": "5504:93:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "5675:88:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 379,
                        "name": "_baseThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "5701:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 378,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "5685:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$returns$__$",
                        "typeString": "function (int24) view"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5685:31:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "5685:31:22"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 382,
                      "name": "baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "5726:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 383,
                      "name": "_baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "5742:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "5726:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "5726:30:22"
                }
              ]
            },
            "functionSelector": "a6329355",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 376,
                "modifierName": {
                  "id": 375,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 456,
                  "src": "5660:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5660:14:22"
              }
            ],
            "name": "setBaseThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "_baseThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5629:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5629:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5628:22:22"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5675:0:22"
            },
            "scope": 457,
            "src": "5603:160:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "5843:91:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 395,
                        "name": "_limitThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "5869:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 394,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "5853:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$returns$__$",
                        "typeString": "function (int24) view"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5853:32:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "5853:32:22"
                },
                {
                  "expression": {
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 398,
                      "name": "limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "5895:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 399,
                      "name": "_limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "5912:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "5895:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "5895:32:22"
                }
              ]
            },
            "functionSelector": "af794480",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 392,
                "modifierName": {
                  "id": 391,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 456,
                  "src": "5828:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5828:14:22"
              }
            ],
            "name": "setLimitThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "_limitThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "5796:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5796:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5795:23:22"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5843:0:22"
            },
            "scope": 457,
            "src": "5769:165:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "6018:114:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 411,
                          "name": "_maxTwapDeviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "6036:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6057:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6036:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617854776170446576696174696f6e",
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6060:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        },
                        "value": "maxTwapDeviation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6028:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6028:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "6028:51:22"
                },
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 417,
                      "name": "maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "6089:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 418,
                      "name": "_maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "6108:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "6089:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "6089:36:22"
                }
              ]
            },
            "functionSelector": "3cbff3fe",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 408,
                "modifierName": {
                  "id": 407,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 456,
                  "src": "6003:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6003:14:22"
              }
            ],
            "name": "setMaxTwapDeviation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_maxTwapDeviation",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "5969:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5969:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5968:25:22"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6018:0:22"
            },
            "scope": 457,
            "src": "5940:192:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "6209:97:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 430,
                          "name": "_twapDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "6227:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6243:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6227:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "747761704475726174696f6e",
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6246:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        },
                        "value": "twapDuration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        }
                      ],
                      "id": 429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6219:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6219:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "6219:42:22"
                },
                {
                  "expression": {
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 436,
                      "name": "twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "6271:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 437,
                      "name": "_twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "6286:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6271:28:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "6271:28:22"
                }
              ]
            },
            "functionSelector": "c433c80a",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 427,
                "modifierName": {
                  "id": 426,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 456,
                  "src": "6194:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6194:14:22"
              }
            ],
            "name": "setTwapDuration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "_twapDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "6163:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6163:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6162:22:22"
            },
            "returnParameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6209:0:22"
            },
            "scope": 457,
            "src": "6138:168:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "6391:83:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 445,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6409:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6409:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 447,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "6423:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlphaVault_$2169",
                                "typeString": "contract AlphaVault"
                              }
                            },
                            "id": 448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 546,
                            "src": "6423:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6423:18:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6409:32:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "676f7665726e616e6365",
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6443:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        },
                        "value": "governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        }
                      ],
                      "id": 444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6401:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6401:55:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "6401:55:22"
                },
                {
                  "id": 454,
                  "nodeType": "PlaceholderStatement",
                  "src": "6466:1:22"
                }
              ]
            },
            "documentation": {
              "id": 442,
              "nodeType": "StructuredDocumentation",
              "src": "6312:50:22",
              "text": "@dev Uses same governance as underlying vault."
            },
            "id": 456,
            "name": "onlyGovernance",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6391:0:22"
            },
            "src": "6367:107:22",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 458,
        "src": "1333:5143:22"
      }
    ],
    "src": "39:6438:22"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200146338038062001463833981810160405260c08110156200003757600080fd5b5080516020808301516040808501516060860151608087015160a090970151600080546001600160a01b0319166001600160a01b03808a16919091179182905585516316f0115b60e01b8152955198999698949793969592949116926316f0115b9260048082019391829003018186803b158015620000b557600080fd5b505afa158015620000ca573d6000803e3d6000fd5b505050506040513d6020811015620000e157600080fd5b5051600180546001600160a01b0319166001600160a01b039283161790819055604080516334324e9f60e21b81529051919092169163d0c93a7c916004808301926020929190829003018186803b1580156200013c57600080fd5b505afa15801562000151573d6000803e3d6000fd5b505050506040513d60208110156200016857600080fd5b50516001805462ffffff60a01b1916600160a01b600293840b62ffffff908116919091029190911762ffffff60b81b1916600160b81b89850b8316021762ffffff60d01b1916600160d01b88850b831602176001600160e81b0316600160e81b87850b9290921691909102179055805463ffffffff191663ffffffff841617600160201b600160c01b0319166401000000006001600160a01b03841602179055620002138562000360565b6200021e8462000360565b60008360020b12156200026b576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b60008263ffffffff1611620002b6576040805162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b604482015290519081900360640190fd5b600160009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156200030557600080fd5b505afa1580156200031a573d6000803e3d6000fd5b505050506040513d60e08110156200033157600080fd5b50602001516004805460029290920b62ffffff1662ffffff199092169190911790555062000471945050505050565b60008160020b13620003a9576040805162461bcd60e51b815260206004820152600d60248201526c07468726573686f6c64203e203609c1b604482015290519081900360640190fd5b620d89e8600282900b12620003fa576040805162461bcd60e51b81526020600482015260126024820152710e8d0e4cae6d0ded8c840e8dede40d0d2ced60731b604482015290519081900360640190fd5b600154600160a01b9004600290810b810b9082900b816200041757fe5b0760020b156200046e576040805162461bcd60e51b815260206004820152601760248201527f7468726573686f6c642025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b50565b610fe280620004816000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063a6329355116100a2578063c433c80a11610071578063c433c80a14610249578063d0c93a7c1461026c578063df8ad81414610274578063e7c7cb911461027c578063fbfa77cf1461028457610116565b8063a6329355146101f9578063a87bab9c14610219578063aced166114610221578063af7944801461022957610116565b80633cbff3fe116100e95780633cbff3fe146101995780633dfa5d87146101bb5780635d752a9a146101c3578063748747e6146101cb5780637d7c2a1c146101f157610116565b8063106b9ca11461011b57806316c3e29d1461013557806316f0115b1461015457806326d8954514610178575b600080fd5b61012361028c565b60408051918252519081900360200190f35b61013d610292565b6040805160029290920b8252519081900360200190f35b61015c6102a2565b604080516001600160a01b039092168252519081900360200190f35b6101806102b1565b6040805163ffffffff9092168252519081900360200190f35b6101b9600480360360208110156101af57600080fd5b503560020b6102bd565b005b61013d6103f2565b61013d6103fb565b6101b9600480360360208110156101e157600080fd5b50356001600160a01b031661068e565b6101b961077c565b6101b96004803603602081101561020f57600080fd5b503560020b610a53565b61013d610b45565b61015c610b55565b6101b96004803603602081101561023f57600080fd5b503560020b610b6b565b6101b96004803603602081101561025f57600080fd5b503563ffffffff16610c5d565b61013d610d84565b61013d610d94565b61013d610e0d565b61015c610e1d565b60035481565b600154600160d01b900460020b81565b6001546001600160a01b031681565b60025463ffffffff1681565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561030957600080fd5b505afa15801561031d573d6000803e3d6000fd5b505050506040513d602081101561033357600080fd5b50516001600160a01b0316331461037e576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008160020b12156103ca576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b6001805460029290920b62ffffff16600160e81b026001600160e81b03909216919091179055565b60045460020b81565b600280546040805183815260608101825260009363ffffffff909316928492602083019080368337019050509050818160008151811061043757fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061046057fe5b63ffffffff90921660209283029190910182015260015460405163883bdbfd60e01b8152600481018381528451602483015284516000946001600160a01b039094169363883bdbfd93879392839260449092019185810191028083838b5b838110156104d65781810151838201526020016104be565b505050509050019250505060006040518083038186803b1580156104f957600080fd5b505afa15801561050d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561053657600080fd5b8101908080516040519392919084600160201b82111561055557600080fd5b90830190602082018581111561056a57600080fd5b82518660208202830111600160201b8211171561058657600080fd5b82525081516020918201928201910280838360005b838110156105b357818101518382015260200161059b565b5050505090500160405260200180516040519392919084600160201b8211156105db57600080fd5b9083019060208201858111156105f057600080fd5b82518660208202830111600160201b8211171561060c57600080fd5b82525081516020918201928201910280838360005b83811015610639578181015183820152602001610621565b505050509050016040525050505090508263ffffffff168160008151811061065d57fe5b60200260200101518260018151811061067257fe5b60200260200101510360060b8161068557fe5b05935050505090565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d602081101561070457600080fd5b50516001600160a01b0316331461074f576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600280546001600160a01b03909216600160201b02640100000000600160c01b0319909216919091179055565b600254600160201b90046001600160a01b031633146107cb576040805162461bcd60e51b815260206004820152600660248201526535b2b2b832b960d11b604482015290519081900360640190fd5b60006107d5610d94565b600154909150600090600160d01b8104600290810b810b600160b81b909204810b900b1361080f57600154600160d01b900460020b61081d565b600154600160b81b900460020b5b9050600160149054906101000a900460020b81620d89e719010160020b8260020b1361087f576040805162461bcd60e51b815260206004820152600c60248201526b7469636b20746f6f206c6f7760a01b604482015290519081900360640190fd5b600154600160a01b9004600290810b620d89e883900303810b9083900b126108de576040805162461bcd60e51b815260206004820152600d60248201526c0e8d2c6d640e8dede40d0d2ced609b1b604482015290519081900360640190fd5b60006108e86103fb565b905060008160020b8460020b1361090157838203610905565b8184035b90506001601d9054906101000a900460020b60020b8160020b1315610964576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b600061096f85610e2c565b60015460008054604080516344d1475960e11b8152600160b81b8504600290810b808803820b6004840152600160a01b8704820b8801908101820b6024840152600160d01b909604810b808803820b604484015287820b606484015286820b60848401528601900b60a4820152905194955092936001600160a01b03909116926389a28eb29260c480830193919282900301818387803b158015610a1257600080fd5b505af1158015610a26573d6000803e3d6000fd5b50504260035550506004805460029790970b62ffffff1662ffffff19909716969096179095555050505050565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9f57600080fd5b505afa158015610ab3573d6000803e3d6000fd5b505050506040513d6020811015610ac957600080fd5b50516001600160a01b03163314610b14576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b610b1d81610e9f565b6001805460029290920b62ffffff16600160b81b0262ffffff60b81b19909216919091179055565b600154600160b81b900460020b81565b600254600160201b90046001600160a01b031681565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610bb757600080fd5b505afa158015610bcb573d6000803e3d6000fd5b505050506040513d6020811015610be157600080fd5b50516001600160a01b03163314610c2c576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b610c3581610e9f565b6001805460029290920b62ffffff16600160d01b0262ffffff60d01b19909216919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610ca957600080fd5b505afa158015610cbd573d6000803e3d6000fd5b505050506040513d6020811015610cd357600080fd5b50516001600160a01b03163314610d1e576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008163ffffffff1611610d68576040805162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b604482015290519081900360640190fd5b6002805463ffffffff191663ffffffff92909216919091179055565b600154600160a01b900460020b81565b60015460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e0929190829003018186803b158015610dd957600080fd5b505afa158015610ded573d6000803e3d6000fd5b505050506040513d60e0811015610e0357600080fd5b5060200151919050565b600154600160e81b900460020b81565b6000546001600160a01b031681565b600080600160149054906101000a900460020b60020b8360020b81610e4d57fe5b05905060008360020b128015610e815750600154600160a01b9004600290810b810b9084900b81610e7a57fe5b0760020b15155b15610e8b57600019015b600154600160a01b900460020b0292915050565b60008160020b13610ee7576040805162461bcd60e51b815260206004820152600d60248201526c07468726573686f6c64203e203609c1b604482015290519081900360640190fd5b620d89e8600282900b12610f37576040805162461bcd60e51b81526020600482015260126024820152710e8d0e4cae6d0ded8c840e8dede40d0d2ced60731b604482015290519081900360640190fd5b600154600160a01b9004600290810b810b9082900b81610f5357fe5b0760020b15610fa9576040805162461bcd60e51b815260206004820152601760248201527f7468726573686f6c642025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b5056fea2646970667358221220217d727ed40ee8b9ffbcf2842c91d50786f49441e7d646fc5e41e50627355d9f64736f6c63430007060033",
  "bytecodeSha1": "f8d42afa0702fa591d4136e990206285dadb9562",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "AlphaStrategy",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {},
      "22": {
        "AlphaStrategy._checkThreshold": {
          "35": [
            5316,
            5329,
            true
          ],
          "36": [
            5365,
            5394,
            true
          ],
          "37": [
            5435,
            5463,
            true
          ]
        },
        "AlphaStrategy._floor": {
          "33": [
            5139,
            5147,
            false
          ],
          "34": [
            5151,
            5174,
            false
          ]
        },
        "AlphaStrategy.rebalance": {
          "26": [
            3038,
            3058,
            true
          ],
          "27": [
            3289,
            3319,
            true
          ],
          "28": [
            3370,
            3423,
            true
          ],
          "29": [
            3458,
            3511,
            true
          ],
          "30": [
            3773,
            3784,
            true
          ],
          "31": [
            3830,
            3859,
            true
          ]
        },
        "AlphaStrategy.setMaxTwapDeviation": {
          "25": [
            6036,
            6058,
            true
          ]
        },
        "AlphaStrategy.setTwapDuration": {
          "32": [
            6227,
            6244,
            true
          ]
        }
      },
      "23": {},
      "27": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {},
      "22": {
        "AlphaStrategy._checkThreshold": {
          "22": [
            5308,
            5347
          ],
          "23": [
            5357,
            5417
          ],
          "24": [
            5427,
            5491
          ]
        },
        "AlphaStrategy._floor": {
          "20": [
            5176,
            5188
          ],
          "21": [
            5198,
            5229
          ]
        },
        "AlphaStrategy.getTick": {
          "19": [
            4413,
            4446
          ]
        },
        "AlphaStrategy.getTwap": {
          "2": [
            4692,
            4721
          ],
          "3": [
            4731,
            4748
          ],
          "4": [
            4830,
            4901
          ]
        },
        "AlphaStrategy.rebalance": {
          "6": [
            3030,
            3069
          ],
          "7": [
            3362,
            3440
          ],
          "8": [
            3450,
            3529
          ],
          "9": [
            3822,
            3880
          ],
          "10": [
            3982,
            4208
          ],
          "11": [
            4219,
            4250
          ],
          "12": [
            4260,
            4275
          ]
        },
        "AlphaStrategy.setBaseThreshold": {
          "13": [
            5685,
            5716
          ],
          "14": [
            5726,
            5756
          ]
        },
        "AlphaStrategy.setKeeper": {
          "5": [
            5574,
            5590
          ]
        },
        "AlphaStrategy.setLimitThreshold": {
          "15": [
            5853,
            5885
          ],
          "16": [
            5895,
            5927
          ]
        },
        "AlphaStrategy.setMaxTwapDeviation": {
          "0": [
            6028,
            6079
          ],
          "1": [
            6089,
            6125
          ]
        },
        "AlphaStrategy.setTwapDuration": {
          "17": [
            6219,
            6261
          ],
          "18": [
            6271,
            6299
          ]
        }
      },
      "23": {},
      "27": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "AlphaVault",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20",
    "Uniswap/uniswap-v3-core@1.0.0/FixedPoint96",
    "Uniswap/uniswap-v3-core@1.0.0/FullMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3MintCallback",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3Pool",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolDerivedState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolEvents",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolImmutables",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolOwnerActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolState",
    "IVault",
    "LiquidityAmounts",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Math",
    "PositionKey",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "Uniswap/uniswap-v3-core@1.0.0/TickMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063a6329355116100a2578063c433c80a11610071578063c433c80a14610249578063d0c93a7c1461026c578063df8ad81414610274578063e7c7cb911461027c578063fbfa77cf1461028457610116565b8063a6329355146101f9578063a87bab9c14610219578063aced166114610221578063af7944801461022957610116565b80633cbff3fe116100e95780633cbff3fe146101995780633dfa5d87146101bb5780635d752a9a146101c3578063748747e6146101cb5780637d7c2a1c146101f157610116565b8063106b9ca11461011b57806316c3e29d1461013557806316f0115b1461015457806326d8954514610178575b600080fd5b61012361028c565b60408051918252519081900360200190f35b61013d610292565b6040805160029290920b8252519081900360200190f35b61015c6102a2565b604080516001600160a01b039092168252519081900360200190f35b6101806102b1565b6040805163ffffffff9092168252519081900360200190f35b6101b9600480360360208110156101af57600080fd5b503560020b6102bd565b005b61013d6103f2565b61013d6103fb565b6101b9600480360360208110156101e157600080fd5b50356001600160a01b031661068e565b6101b961077c565b6101b96004803603602081101561020f57600080fd5b503560020b610a53565b61013d610b45565b61015c610b55565b6101b96004803603602081101561023f57600080fd5b503560020b610b6b565b6101b96004803603602081101561025f57600080fd5b503563ffffffff16610c5d565b61013d610d84565b61013d610d94565b61013d610e0d565b61015c610e1d565b60035481565b600154600160d01b900460020b81565b6001546001600160a01b031681565b60025463ffffffff1681565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561030957600080fd5b505afa15801561031d573d6000803e3d6000fd5b505050506040513d602081101561033357600080fd5b50516001600160a01b0316331461037e576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008160020b12156103ca576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b6001805460029290920b62ffffff16600160e81b026001600160e81b03909216919091179055565b60045460020b81565b600280546040805183815260608101825260009363ffffffff909316928492602083019080368337019050509050818160008151811061043757fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061046057fe5b63ffffffff90921660209283029190910182015260015460405163883bdbfd60e01b8152600481018381528451602483015284516000946001600160a01b039094169363883bdbfd93879392839260449092019185810191028083838b5b838110156104d65781810151838201526020016104be565b505050509050019250505060006040518083038186803b1580156104f957600080fd5b505afa15801561050d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561053657600080fd5b8101908080516040519392919084600160201b82111561055557600080fd5b90830190602082018581111561056a57600080fd5b82518660208202830111600160201b8211171561058657600080fd5b82525081516020918201928201910280838360005b838110156105b357818101518382015260200161059b565b5050505090500160405260200180516040519392919084600160201b8211156105db57600080fd5b9083019060208201858111156105f057600080fd5b82518660208202830111600160201b8211171561060c57600080fd5b82525081516020918201928201910280838360005b83811015610639578181015183820152602001610621565b505050509050016040525050505090508263ffffffff168160008151811061065d57fe5b60200260200101518260018151811061067257fe5b60200260200101510360060b8161068557fe5b05935050505090565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d602081101561070457600080fd5b50516001600160a01b0316331461074f576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600280546001600160a01b03909216600160201b02640100000000600160c01b0319909216919091179055565b600254600160201b90046001600160a01b031633146107cb576040805162461bcd60e51b815260206004820152600660248201526535b2b2b832b960d11b604482015290519081900360640190fd5b60006107d5610d94565b600154909150600090600160d01b8104600290810b810b600160b81b909204810b900b1361080f57600154600160d01b900460020b61081d565b600154600160b81b900460020b5b9050600160149054906101000a900460020b81620d89e719010160020b8260020b1361087f576040805162461bcd60e51b815260206004820152600c60248201526b7469636b20746f6f206c6f7760a01b604482015290519081900360640190fd5b600154600160a01b9004600290810b620d89e883900303810b9083900b126108de576040805162461bcd60e51b815260206004820152600d60248201526c0e8d2c6d640e8dede40d0d2ced609b1b604482015290519081900360640190fd5b60006108e86103fb565b905060008160020b8460020b1361090157838203610905565b8184035b90506001601d9054906101000a900460020b60020b8160020b1315610964576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b600061096f85610e2c565b60015460008054604080516344d1475960e11b8152600160b81b8504600290810b808803820b6004840152600160a01b8704820b8801908101820b6024840152600160d01b909604810b808803820b604484015287820b606484015286820b60848401528601900b60a4820152905194955092936001600160a01b03909116926389a28eb29260c480830193919282900301818387803b158015610a1257600080fd5b505af1158015610a26573d6000803e3d6000fd5b50504260035550506004805460029790970b62ffffff1662ffffff19909716969096179095555050505050565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9f57600080fd5b505afa158015610ab3573d6000803e3d6000fd5b505050506040513d6020811015610ac957600080fd5b50516001600160a01b03163314610b14576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b610b1d81610e9f565b6001805460029290920b62ffffff16600160b81b0262ffffff60b81b19909216919091179055565b600154600160b81b900460020b81565b600254600160201b90046001600160a01b031681565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610bb757600080fd5b505afa158015610bcb573d6000803e3d6000fd5b505050506040513d6020811015610be157600080fd5b50516001600160a01b03163314610c2c576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b610c3581610e9f565b6001805460029290920b62ffffff16600160d01b0262ffffff60d01b19909216919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610ca957600080fd5b505afa158015610cbd573d6000803e3d6000fd5b505050506040513d6020811015610cd357600080fd5b50516001600160a01b03163314610d1e576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008163ffffffff1611610d68576040805162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b604482015290519081900360640190fd5b6002805463ffffffff191663ffffffff92909216919091179055565b600154600160a01b900460020b81565b60015460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e0929190829003018186803b158015610dd957600080fd5b505afa158015610ded573d6000803e3d6000fd5b505050506040513d60e0811015610e0357600080fd5b5060200151919050565b600154600160e81b900460020b81565b6000546001600160a01b031681565b600080600160149054906101000a900460020b60020b8360020b81610e4d57fe5b05905060008360020b128015610e815750600154600160a01b9004600290810b810b9084900b81610e7a57fe5b0760020b15155b15610e8b57600019015b600154600160a01b900460020b0292915050565b60008160020b13610ee7576040805162461bcd60e51b815260206004820152600d60248201526c07468726573686f6c64203e203609c1b604482015290519081900360640190fd5b620d89e8600282900b12610f37576040805162461bcd60e51b81526020600482015260126024820152710e8d0e4cae6d0ded8c840e8dede40d0d2ced60731b604482015290519081900360640190fd5b600154600160a01b9004600290810b810b9082900b81610f5357fe5b0760020b15610fa9576040805162461bcd60e51b815260206004820152601760248201527f7468726573686f6c642025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b5056fea2646970667358221220217d727ed40ee8b9ffbcf2842c91d50786f49441e7d646fc5e41e50627355d9f64736f6c63430007060033",
  "deployedSourceMap": "1333:5143:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1614:28;;;:::i;:::-;;;;;;;;;;;;;;;;1486:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1391:26;;;:::i;:::-;;;;-1:-1:-1;;;;;1391:26:22;;;;;;;;;;;;;;1554;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5940:192;;;;;;;;;;;;;;;;-1:-1:-1;5940:192:22;;;;:::i;:::-;;1648:21;;;:::i;4536:372::-;;;:::i;5504:93::-;;;;;;;;;;;;;;;;-1:-1:-1;5504:93:22;-1:-1:-1;;;;;5504:93:22;;:::i;2990:1292::-;;;:::i;5603:160::-;;;;;;;;;;;;;;;;-1:-1:-1;5603:160:22;;;;:::i;1454:26::-;;;:::i;1586:21::-;;;:::i;5769:165::-;;;;;;;;;;;;;;;;-1:-1:-1;5769:165:22;;;;:::i;6138:168::-;;;;;;;;;;;;;;;;-1:-1:-1;6138:168:22;;;;:::i;1423:24::-;;;:::i;4351:102::-;;;:::i;1519:29::-;;;:::i;1362:23::-;;;:::i;1614:28::-;;;;:::o;1486:27::-;;;-1:-1:-1;;;1486:27:22;;;;;:::o;1391:26::-;;;-1:-1:-1;;;;;1391:26:22;;:::o;1554:::-;;;;;;:::o;5940:192::-;6423:5;;;;;;;;-1:-1:-1;;;;;6423:5:22;-1:-1:-1;;;;;6423:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6423:18:22;-1:-1:-1;;;;;6409:32:22;:10;:32;6401:55;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;;;;6057:1:::1;6036:17;:22;;;;6028:51;;;::::0;;-1:-1:-1;;;6028:51:22;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6028:51:22;;;;;;;;;;;;;::::1;;6089:16;:36:::0;;::::1;::::0;;;::::1;;;-1:-1:-1::0;;;6089:36:22::1;-1:-1:-1::0;;;;;6089:36:22;;::::1;::::0;;;::::1;::::0;;5940:192::o;1648:21::-;;;;;;:::o;4536:372::-;4616:12;;;4667:15;;;;;;;;;;;4576:5;;4616:12;;;;;4576:5;;4667:15;;;;;;;;;;-1:-1:-1;4667:15:22;4638:44;;4708:13;4692:10;4703:1;4692:13;;;;;;;;;;;;;:29;;;;;;;;;;;4747:1;4731:10;4742:1;4731:13;;;;;;;;:17;;;;:13;;;;;;;;;;:17;4796:4;;:24;;-1:-1:-1;;;4796:24:22;;;;;;;;;;;;;;;;4760:30;;-1:-1:-1;;;;;4796:4:22;;;;:12;;4809:10;;4796:24;;;;;;;;;;;;;;;;4760:30;4796:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4796:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4796:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4796:24:22;;;;;;;;;;;;-1:-1:-1;4796:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4796:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4796:24:22;;;;;;;;;;;;-1:-1:-1;4796:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4759:61;;;4887:13;4843:57;;4865:15;4881:1;4865:18;;;;;;;;;;;;;;4844:15;4860:1;4844:18;;;;;;;;;;;;;;:39;4843:57;;;;;;;;4830:71;;;;;4536:372;:::o;5504:93::-;6423:5;;;;;;;;-1:-1:-1;;;;;6423:5:22;-1:-1:-1;;;;;6423:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6423:18:22;-1:-1:-1;;;;;6409:32:22;:10;:32;6401:55;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;;;;5574:6:::1;:16:::0;;-1:-1:-1;;;;;5574:16:22;;::::1;-1:-1:-1::0;;;5574:16:22::1;-1:-1:-1::0;;;;;;5574:16:22;;::::1;::::0;;;::::1;::::0;;5504:93::o;2990:1292::-;3052:6;;-1:-1:-1;;;3052:6:22;;-1:-1:-1;;;;;3052:6:22;3038:10;:20;3030:39;;;;;-1:-1:-1;;;3030:39:22;;;;;;;;;;;;-1:-1:-1;;;3030:39:22;;;;;;;;;;;;;;;3236:10;3249:9;:7;:9::i;:::-;3305:14;;3236:22;;-1:-1:-1;3268:18:22;;-1:-1:-1;;;3305:14:22;;;;;;3289:30;;-1:-1:-1;;;3289:13:22;;;;;:30;;;:63;;3338:14;;-1:-1:-1;;;3338:14:22;;;;3289:63;;;3322:13;;-1:-1:-1;;;3322:13:22;;;;3289:63;3268:84;;3412:11;;;;;;;;;;;3397:12;-1:-1:-1;;3377:32:22;:46;3370:53;;:4;:53;;;3362:78;;;;;-1:-1:-1;;;3362:78:22;;;;;;;;;;;;-1:-1:-1;;;3362:78:22;;;;;;;;;;;;;;;3500:11;;-1:-1:-1;;;3500:11:22;;;;;;637:9:19;3465:32:22;;;:46;3458:53;;;;;;;3450:79;;;;;-1:-1:-1;;;3450:79:22;;;;;;;;;;;;-1:-1:-1;;;3450:79:22;;;;;;;;;;;;;;;3723:10;3736:9;:7;:9::i;:::-;3723:22;;3755:15;3780:4;3773:11;;:4;:11;;;:39;;3808:4;3801;:11;3773:39;;;3794:4;3787;:11;3773:39;3755:57;;3843:16;;;;;;;;;;;3830:29;;:9;:29;;;;3822:58;;;;;-1:-1:-1;;;3822:58:22;;;;;;;;;;;;-1:-1:-1;;;3822:58:22;;;;;;;;;;;;;;;3891:15;3909:12;3916:4;3909:6;:12::i;:::-;3960:11;;3931:14;3982:5;;:226;;;-1:-1:-1;;;3982:226:22;;-1:-1:-1;;;4023:13:22;;3960:11;4023:13;;;4011:25;;;3982:226;;;;;;-1:-1:-1;;;3960:11:22;;;;3948:23;;4050:24;;;3982:226;;;;;;-1:-1:-1;;;4100:14:22;;;;;4088:26;;;3982:226;;;;;;;;;;;;;;;;;;;;4173:25;;3982:226;;;;;;;;3891:30;;-1:-1:-1;3948:23:22;;-1:-1:-1;;;;;3982:5:22;;;;:15;;:226;;;;;3931:14;;3982:226;;;;;3931:14;3982:5;:226;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4235:15:22;4219:13;:31;-1:-1:-1;;4260:8:22;:15;;;;;;;;;-1:-1:-1;;4260:15:22;;;;;;;;;;-1:-1:-1;;;;;2990:1292:22:o;5603:160::-;6423:5;;;;;;;;-1:-1:-1;;;;;6423:5:22;-1:-1:-1;;;;;6423:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6423:18:22;-1:-1:-1;;;;;6409:32:22;:10;:32;6401:55;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;;;;5685:31:::1;5701:14;5685:15;:31::i;:::-;5726:13;:30:::0;;::::1;::::0;;;::::1;;;-1:-1:-1::0;;;5726:30:22::1;-1:-1:-1::0;;;;5726:30:22;;::::1;::::0;;;::::1;::::0;;5603:160::o;1454:26::-;;;-1:-1:-1;;;1454:26:22;;;;;:::o;1586:21::-;;;-1:-1:-1;;;1586:21:22;;-1:-1:-1;;;;;1586:21:22;;:::o;5769:165::-;6423:5;;;;;;;;-1:-1:-1;;;;;6423:5:22;-1:-1:-1;;;;;6423:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6423:18:22;-1:-1:-1;;;;;6409:32:22;:10;:32;6401:55;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;;;;5853:32:::1;5869:15;5853;:32::i;:::-;5895:14;:32:::0;;::::1;::::0;;;::::1;;;-1:-1:-1::0;;;5895:32:22::1;-1:-1:-1::0;;;;5895:32:22;;::::1;::::0;;;::::1;::::0;;5769:165::o;6138:168::-;6423:5;;;;;;;;-1:-1:-1;;;;;6423:5:22;-1:-1:-1;;;;;6423:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6423:18:22;-1:-1:-1;;;;;6409:32:22;:10;:32;6401:55;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;-1:-1:-1;;;6401:55:22;;;;;;;;;;;;;;;6243:1:::1;6227:13;:17;;;6219:42;;;::::0;;-1:-1:-1;;;6219:42:22;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6219:42:22;;;;;;;;;;;;;::::1;;6271:12;:28:::0;;-1:-1:-1;;6271:28:22::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6138:168::o;1423:24::-;;;-1:-1:-1;;;1423:24:22;;;;;:::o;4351:102::-;4434:4;;:12;;;-1:-1:-1;;;4434:12:22;;;;4391:10;;-1:-1:-1;;;;;4434:4:22;;:10;;:12;;;;;;;;;;;;;;:4;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4434:12:22;;;;4351:102;-1:-1:-1;4351:102:22:o;1519:29::-;;;-1:-1:-1;;;1519:29:22;;;;;:::o;1362:23::-;;;-1:-1:-1;;;;;1362:23:22;;:::o;5020:216::-;5071:5;5088:16;5114:11;;;;;;;;;;;5107:18;;:4;:18;;;;;;;;5088:37;;5146:1;5139:4;:8;;;:35;;;;-1:-1:-1;5158:11:22;;-1:-1:-1;;;5158:11:22;;;;;;5151:18;;;;;;;;;;;;:23;;;;5139:35;5135:53;;;-1:-1:-1;;5176:12:22;5135:53;5218:11;;-1:-1:-1;;;5218:11:22;;;;5205:24;;5020:216;-1:-1:-1;;5020:216:22:o;5242:256::-;5328:1;5316:9;:13;;;5308:39;;;;;-1:-1:-1;;;5308:39:22;;;;;;;;;;;;-1:-1:-1;;;5308:39:22;;;;;;;;;;;;;;;637:9:19;5365:29:22;;;;;5357:60;;;;;-1:-1:-1;;;5357:60:22;;;;;;;;;;;;-1:-1:-1;;;5357:60:22;;;;;;;;;;;;;;;5447:11;;-1:-1:-1;;;5447:11:22;;;;;;5435:23;;;;;;;;;;;;:28;;;5427:64;;;;;-1:-1:-1;;;5427:64:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;5242:256;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_baseThreshold": "Used to determine base order range",
          "_keeper": "Account that can call `rebalance()`",
          "_limitThreshold": "Used to determine limit order range",
          "_maxTwapDeviation": "Max deviation from TWAP during rebalance",
          "_twapDuration": "TWAP duration in seconds for rebalance check",
          "_vault": "Underlying Alpha Vault"
        }
      },
      "getTick()": {
        "details": "Fetches current price in ticks from Uniswap pool."
      },
      "getTwap()": {
        "details": "Fetches time-weighted average price in ticks from Uniswap pool."
      },
      "rebalance()": {
        "notice": "Calculates new ranges for orders and calls `vault.rebalance()` so that vault can update its positions. Can only be called by keeper."
      }
    },
    "notice": "Rebalancing strategy for Alpha Vault that maintains the two          following range orders:          1. Base order is placed between X - B and X + B + TS.          2. Limit order is placed between X - L and X, or between X + TS             and X + L + TS, depending on which token it holds more of.          where:              X = current tick rounded down to multiple of tick spacing              TS = tick spacing              B = base threshold              L = limit threshold          Note that after these two orders, the vault should have deposited          all its tokens and should only have a few wei left.          Because the limit order tries to sell whichever token the vault          holds more of, the vault's holdings will have a tendency to get          closer to a 1:1 balance. This enables it to continue providing          liquidity without running out of inventory of either token, and          achieves this without the need to swap directly on Uniswap and pay          fees.",
    "title": "Alpha Strategy",
    "version": 1
  },
  "offset": [
    1333,
    6476
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6329355 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC433C80A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC433C80A EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xDF8AD814 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE7C7CB91 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x284 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0xA6329355 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xA87BAB9C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xAF794480 EQ PUSH2 0x229 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x3CBFF3FE GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x3CBFF3FE EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x3DFA5D87 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x5D752A9A EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x748747E6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7D7C2A1C EQ PUSH2 0x1F1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x106B9CA1 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x16C3E29D EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x26D89545 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0x2BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x68E JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x13D PUSH2 0xB45 JUMP JUMPDEST PUSH2 0x15C PUSH2 0xB55 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x13D PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x13D PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x13D PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x15C PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x37E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x36B0BC2A3BB0B82232BB34B0BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH1 0x1 PUSH1 0xE8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SWAP4 PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 DUP5 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x437 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x460 JUMPI INVALID JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x883BDBFD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP4 ADD MSTORE DUP5 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 PUSH4 0x883BDBFD SWAP4 DUP8 SWAP4 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP3 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4BE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 LT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT OR ISZERO PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5B3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x59B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT OR ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x639 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x621 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x65D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x672 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x685 JUMPI INVALID JUMPDEST SDIV SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x35B2B2B832B9 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D5 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT PUSH2 0x80F JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH2 0x81D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 PUSH3 0xD89E7 NOT ADD ADD PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x87F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x7469636B20746F6F206C6F77 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND PUSH3 0xD89E8 DUP4 SWAP1 SUB SUB DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND SLT PUSH2 0x8DE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xE8D2C6D640E8DEDE40D0D2CED PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8E8 PUSH2 0x3FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND DUP5 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x901 JUMPI DUP4 DUP3 SUB PUSH2 0x905 JUMP JUMPDEST DUP2 DUP5 SUB JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1D SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x964 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x36B0BC2A3BB0B82232BB34B0BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x96F DUP6 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x44D14759 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0xB8 SHL DUP6 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP1 DUP9 SUB DUP3 SIGNEXTEND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP8 DIV DUP3 SIGNEXTEND DUP9 ADD SWAP1 DUP2 ADD DUP3 SIGNEXTEND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP7 DIV DUP2 SIGNEXTEND DUP1 DUP9 SUB DUP3 SIGNEXTEND PUSH1 0x44 DUP5 ADD MSTORE DUP8 DUP3 SIGNEXTEND PUSH1 0x64 DUP5 ADD MSTORE DUP7 DUP3 SIGNEXTEND PUSH1 0x84 DUP5 ADD MSTORE DUP7 ADD SWAP1 SIGNEXTEND PUSH1 0xA4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x89A28EB2 SWAP3 PUSH1 0xC4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x3 SSTORE POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x2 SWAP8 SWAP1 SWAP8 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF NOT SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB14 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xB1D DUP2 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH1 0x1 PUSH1 0xB8 SHL MUL PUSH3 0xFFFFFF PUSH1 0xB8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH1 0x1 PUSH1 0xD0 SHL MUL PUSH3 0xFFFFFF PUSH1 0xD0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD1E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0xD68 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x3A3BB0B8223AB930BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3850C7BD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x3850C7BD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xE0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xE03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xE4D JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0xE81 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP5 SWAP1 SIGNEXTEND DUP2 PUSH2 0xE7A JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE8B JUMPI PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0xEE7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x7468726573686F6C64203E203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E8 PUSH1 0x2 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0xF37 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0xE8D0E4CAE6D0DED8C840E8DEDE40D0D2CED PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND DUP2 PUSH2 0xF53 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468726573686F6C642025207469636B53706163696E67000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 PUSH30 0x727ED40EE8B9FFBCF2842C91D50786F49441E7D646FC5E41E50627355D9F PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA6329355"
    },
    "38": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "GT",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC433C80A"
    },
    "49": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "GT",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC433C80A"
    },
    "60": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x249"
    },
    "64": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD0C93A7C"
    },
    "71": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26C"
    },
    "75": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDF8AD814"
    },
    "82": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x274"
    },
    "86": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "88": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE7C7CB91"
    },
    "93": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "94": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "97": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "98": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFBFA77CF"
    },
    "104": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "105": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x284"
    },
    "108": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "109": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x116"
    },
    "112": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMP",
      "path": "22"
    },
    "113": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "114": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "115": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA6329355"
    },
    "120": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "121": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1F9"
    },
    "124": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "125": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "126": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA87BAB9C"
    },
    "131": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x219"
    },
    "135": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "136": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "137": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xACED1661"
    },
    "142": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "143": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x221"
    },
    "146": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "147": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "148": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xAF794480"
    },
    "153": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "157": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x116"
    },
    "161": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMP",
      "path": "22"
    },
    "162": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "163": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "164": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3CBFF3FE"
    },
    "169": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "GT",
      "path": "22"
    },
    "170": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "174": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "175": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3CBFF3FE"
    },
    "180": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "181": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x199"
    },
    "184": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "185": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "186": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3DFA5D87"
    },
    "191": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "192": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BB"
    },
    "195": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "196": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "197": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5D752A9A"
    },
    "202": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "203": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C3"
    },
    "206": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "207": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "208": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x748747E6"
    },
    "213": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "214": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CB"
    },
    "217": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "218": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "219": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7D7C2A1C"
    },
    "224": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "225": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1F1"
    },
    "228": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "229": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x116"
    },
    "232": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMP",
      "path": "22"
    },
    "233": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "234": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "235": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x106B9CA1"
    },
    "240": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "241": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "245": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "246": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x16C3E29D"
    },
    "251": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "252": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x135"
    },
    "255": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "256": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "257": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x16F0115B"
    },
    "262": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "263": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x154"
    },
    "266": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "267": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "268": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x26D89545"
    },
    "273": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "EQ",
      "path": "22"
    },
    "274": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x178"
    },
    "277": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "278": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "279": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "DUP1",
      "path": "22"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1333,
        6476
      ],
      "op": "REVERT",
      "path": "22"
    },
    "283": {
      "offset": [
        1614,
        1642
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "284": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x123"
    },
    "287": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28C"
    },
    "290": {
      "fn": null,
      "jump": "i",
      "offset": [
        1614,
        1642
      ],
      "op": "JUMP",
      "path": "22"
    },
    "291": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "292": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "294": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "DUP1",
      "path": "22"
    },
    "295": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "296": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "297": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "DUP3",
      "path": "22"
    },
    "298": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "299": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "300": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "301": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "DUP2",
      "path": "22"
    },
    "302": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "303": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "SUB",
      "path": "22"
    },
    "304": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "306": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "ADD",
      "path": "22"
    },
    "307": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "308": {
      "fn": null,
      "offset": [
        1614,
        1642
      ],
      "op": "RETURN",
      "path": "22"
    },
    "309": {
      "offset": [
        1486,
        1513
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "310": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "313": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x292"
    },
    "316": {
      "fn": null,
      "jump": "i",
      "offset": [
        1486,
        1513
      ],
      "op": "JUMP",
      "path": "22"
    },
    "317": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "318": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "320": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "DUP1",
      "path": "22"
    },
    "321": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "322": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "324": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "325": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "326": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "327": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "328": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "DUP3",
      "path": "22"
    },
    "329": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "330": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "331": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "332": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "DUP2",
      "path": "22"
    },
    "333": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "334": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "SUB",
      "path": "22"
    },
    "335": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "337": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "ADD",
      "path": "22"
    },
    "338": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "339": {
      "fn": null,
      "offset": [
        1486,
        1513
      ],
      "op": "RETURN",
      "path": "22"
    },
    "340": {
      "offset": [
        1391,
        1417
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "341": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15C"
    },
    "344": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A2"
    },
    "347": {
      "fn": null,
      "jump": "i",
      "offset": [
        1391,
        1417
      ],
      "op": "JUMP",
      "path": "22"
    },
    "348": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "349": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "351": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "DUP1",
      "path": "22"
    },
    "352": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "359": {
      "op": "SHL"
    },
    "360": {
      "op": "SUB"
    },
    "361": {
      "offset": [
        1391,
        1417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "362": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "363": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "AND",
      "path": "22"
    },
    "364": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "DUP3",
      "path": "22"
    },
    "365": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "366": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "367": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "368": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "DUP2",
      "path": "22"
    },
    "369": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "370": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "SUB",
      "path": "22"
    },
    "371": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "373": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "ADD",
      "path": "22"
    },
    "374": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "375": {
      "fn": null,
      "offset": [
        1391,
        1417
      ],
      "op": "RETURN",
      "path": "22"
    },
    "376": {
      "offset": [
        1554,
        1580
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "377": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x180"
    },
    "380": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B1"
    },
    "383": {
      "fn": null,
      "jump": "i",
      "offset": [
        1554,
        1580
      ],
      "op": "JUMP",
      "path": "22"
    },
    "384": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "385": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "387": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "DUP1",
      "path": "22"
    },
    "388": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "389": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "394": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "395": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "396": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "AND",
      "path": "22"
    },
    "397": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "DUP3",
      "path": "22"
    },
    "398": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "399": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "400": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "401": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "DUP2",
      "path": "22"
    },
    "402": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "403": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "SUB",
      "path": "22"
    },
    "404": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "406": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "ADD",
      "path": "22"
    },
    "407": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "408": {
      "fn": null,
      "offset": [
        1554,
        1580
      ],
      "op": "RETURN",
      "path": "22"
    },
    "409": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "410": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "413": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "415": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "DUP1",
      "path": "22"
    },
    "416": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "417": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "SUB",
      "path": "22"
    },
    "418": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "420": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "DUP2",
      "path": "22"
    },
    "421": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "LT",
      "path": "22"
    },
    "422": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "423": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AF"
    },
    "426": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "427": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "429": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "DUP1",
      "path": "22"
    },
    "430": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "REVERT",
      "path": "22"
    },
    "431": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "432": {
      "op": "POP"
    },
    "433": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "434": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "436": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "437": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD"
    },
    "440": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "jump": "i",
      "offset": [
        5940,
        6132
      ],
      "op": "JUMP",
      "path": "22"
    },
    "441": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "442": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "STOP",
      "path": "22"
    },
    "443": {
      "offset": [
        1648,
        1669
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "444": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1648,
        1669
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "447": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1648,
        1669
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F2"
    },
    "450": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "jump": "i",
      "offset": [
        1648,
        1669
      ],
      "op": "JUMP",
      "path": "22"
    },
    "451": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4536,
        4908
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "452": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4536,
        4908
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "455": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4536,
        4908
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3FB"
    },
    "458": {
      "fn": "AlphaStrategy.getTwap",
      "jump": "i",
      "offset": [
        4536,
        4908
      ],
      "op": "JUMP",
      "path": "22"
    },
    "459": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "460": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "463": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "465": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "DUP1",
      "path": "22"
    },
    "466": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "467": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "SUB",
      "path": "22"
    },
    "468": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "470": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "DUP2",
      "path": "22"
    },
    "471": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "LT",
      "path": "22"
    },
    "472": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "473": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E1"
    },
    "476": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "477": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "479": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "DUP1",
      "path": "22"
    },
    "480": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "REVERT",
      "path": "22"
    },
    "481": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "490": {
      "op": "SHL"
    },
    "491": {
      "op": "SUB"
    },
    "492": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "AND",
      "path": "22"
    },
    "493": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x68E"
    },
    "496": {
      "fn": "AlphaStrategy.setKeeper",
      "jump": "i",
      "offset": [
        5504,
        5597
      ],
      "op": "JUMP",
      "path": "22"
    },
    "497": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        2990,
        4282
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "498": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        2990,
        4282
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "501": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        2990,
        4282
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x77C"
    },
    "504": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "i",
      "offset": [
        2990,
        4282
      ],
      "op": "JUMP",
      "path": "22"
    },
    "505": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "506": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "509": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "511": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "DUP1",
      "path": "22"
    },
    "512": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "513": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "SUB",
      "path": "22"
    },
    "514": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "516": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "DUP2",
      "path": "22"
    },
    "517": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "LT",
      "path": "22"
    },
    "518": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "519": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20F"
    },
    "522": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "523": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "525": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "DUP1",
      "path": "22"
    },
    "526": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "REVERT",
      "path": "22"
    },
    "527": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "530": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "532": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "533": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA53"
    },
    "536": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        5603,
        5763
      ],
      "op": "JUMP",
      "path": "22"
    },
    "537": {
      "offset": [
        1454,
        1480
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "538": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1454,
        1480
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "541": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1454,
        1480
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB45"
    },
    "544": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        1454,
        1480
      ],
      "op": "JUMP",
      "path": "22"
    },
    "545": {
      "offset": [
        1586,
        1607
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "546": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1586,
        1607
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15C"
    },
    "549": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1586,
        1607
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB55"
    },
    "552": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        1586,
        1607
      ],
      "op": "JUMP",
      "path": "22"
    },
    "553": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "554": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "557": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "559": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "DUP1",
      "path": "22"
    },
    "560": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "561": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "SUB",
      "path": "22"
    },
    "562": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "564": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "DUP2",
      "path": "22"
    },
    "565": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "LT",
      "path": "22"
    },
    "566": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "567": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23F"
    },
    "570": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "571": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "573": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "DUP1",
      "path": "22"
    },
    "574": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "REVERT",
      "path": "22"
    },
    "575": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "576": {
      "op": "POP"
    },
    "577": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "578": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "580": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "581": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB6B"
    },
    "584": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "jump": "i",
      "offset": [
        5769,
        5934
      ],
      "op": "JUMP",
      "path": "22"
    },
    "585": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "586": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "589": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "591": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "DUP1",
      "path": "22"
    },
    "592": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "593": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "SUB",
      "path": "22"
    },
    "594": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "596": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "DUP2",
      "path": "22"
    },
    "597": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "LT",
      "path": "22"
    },
    "598": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "599": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25F"
    },
    "602": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "603": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "605": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "DUP1",
      "path": "22"
    },
    "606": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "REVERT",
      "path": "22"
    },
    "607": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "610": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "615": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "AND",
      "path": "22"
    },
    "616": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC5D"
    },
    "619": {
      "fn": "AlphaStrategy.setTwapDuration",
      "jump": "i",
      "offset": [
        6138,
        6306
      ],
      "op": "JUMP",
      "path": "22"
    },
    "620": {
      "offset": [
        1423,
        1447
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "621": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1423,
        1447
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "624": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1423,
        1447
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD84"
    },
    "627": {
      "fn": "AlphaStrategy.setTwapDuration",
      "jump": "i",
      "offset": [
        1423,
        1447
      ],
      "op": "JUMP",
      "path": "22"
    },
    "628": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4351,
        4453
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "629": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4351,
        4453
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "632": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4351,
        4453
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD94"
    },
    "635": {
      "fn": "AlphaStrategy.getTick",
      "jump": "i",
      "offset": [
        4351,
        4453
      ],
      "op": "JUMP",
      "path": "22"
    },
    "636": {
      "offset": [
        1519,
        1548
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "637": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1519,
        1548
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "640": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1519,
        1548
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE0D"
    },
    "643": {
      "fn": "AlphaStrategy.getTick",
      "jump": "i",
      "offset": [
        1519,
        1548
      ],
      "op": "JUMP",
      "path": "22"
    },
    "644": {
      "offset": [
        1362,
        1385
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "645": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1362,
        1385
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15C"
    },
    "648": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1362,
        1385
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE1D"
    },
    "651": {
      "fn": "AlphaStrategy.getTick",
      "jump": "i",
      "offset": [
        1362,
        1385
      ],
      "op": "JUMP",
      "path": "22"
    },
    "652": {
      "offset": [
        1614,
        1642
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "653": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1614,
        1642
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "655": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1614,
        1642
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "656": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1614,
        1642
      ],
      "op": "DUP2",
      "path": "22"
    },
    "657": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1614,
        1642
      ],
      "op": "JUMP",
      "path": "22"
    },
    "658": {
      "offset": [
        1486,
        1513
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "659": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1486,
        1513
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "661": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1486,
        1513
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "666": {
      "op": "SHL"
    },
    "667": {
      "offset": [
        1486,
        1513
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "668": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1486,
        1513
      ],
      "op": "DIV",
      "path": "22"
    },
    "669": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1486,
        1513
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "671": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1486,
        1513
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "672": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1486,
        1513
      ],
      "op": "DUP2",
      "path": "22"
    },
    "673": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1486,
        1513
      ],
      "op": "JUMP",
      "path": "22"
    },
    "674": {
      "offset": [
        1391,
        1417
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "675": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1391,
        1417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "677": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1391,
        1417
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "op": "SUB"
    },
    "686": {
      "offset": [
        1391,
        1417
      ],
      "op": "AND",
      "path": "22"
    },
    "687": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1391,
        1417
      ],
      "op": "DUP2",
      "path": "22"
    },
    "688": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1391,
        1417
      ],
      "op": "JUMP",
      "path": "22"
    },
    "689": {
      "offset": [
        1554,
        1580
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "690": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1554,
        1580
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "692": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1554,
        1580
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "693": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1554,
        1580
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "698": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1554,
        1580
      ],
      "op": "AND",
      "path": "22"
    },
    "699": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1554,
        1580
      ],
      "op": "DUP2",
      "path": "22"
    },
    "700": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1554,
        1580
      ],
      "op": "JUMP",
      "path": "22"
    },
    "701": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        5940,
        6132
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "702": {
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "704": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6428
      ],
      "op": "DUP1",
      "path": "22"
    },
    "705": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6428
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "706": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "707": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "710": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6428
      ],
      "op": "EXP",
      "path": "22"
    },
    "711": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "712": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6428
      ],
      "op": "DIV",
      "path": "22"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "op": "SUB"
    },
    "721": {
      "offset": [
        6423,
        6428
      ],
      "op": "AND",
      "path": "22"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "728": {
      "op": "SHL"
    },
    "729": {
      "op": "SUB"
    },
    "730": {
      "offset": [
        6423,
        6439
      ],
      "op": "AND",
      "path": "22"
    },
    "731": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6439
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "736": {
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "738": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "739": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "740": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "745": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "746": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "748": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "SHL",
      "path": "22"
    },
    "749": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "750": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "751": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "753": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "ADD",
      "path": "22"
    },
    "754": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "756": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "758": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "759": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "760": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP4",
      "path": "22"
    },
    "761": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "SUB",
      "path": "22"
    },
    "762": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "763": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP7",
      "path": "22"
    },
    "764": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "765": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "766": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "767": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "768": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "769": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x309"
    },
    "772": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "773": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "775": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "776": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "777": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "778": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "779": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "GAS",
      "path": "22"
    },
    "780": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "781": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "782": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "783": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "784": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31D"
    },
    "787": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "788": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "789": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "791": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "792": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "793": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "794": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "796": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "797": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "798": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "799": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "800": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "801": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "802": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "804": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "805": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "806": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "808": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "809": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "LT",
      "path": "22"
    },
    "810": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "811": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x333"
    },
    "814": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "815": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "817": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "818": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "819": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "SUB"
    },
    "830": {
      "offset": [
        6409,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "831": {
      "offset": [
        6409,
        6419
      ],
      "op": "CALLER",
      "path": "22"
    },
    "832": {
      "offset": [
        6409,
        6441
      ],
      "op": "EQ",
      "path": "22"
    },
    "833": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x37E"
    },
    "836": {
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "837": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "839": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP1",
      "path": "22"
    },
    "840": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "841": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "849": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "850": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "852": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "854": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "855": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "856": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "857": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "859": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "861": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "862": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "863": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "864": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "880": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "881": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "882": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "883": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "884": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "885": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "886": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "887": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "888": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "SUB",
      "path": "22"
    },
    "889": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "891": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "892": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "893": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "REVERT",
      "path": "22"
    },
    "894": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "895": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6057,
        6058
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 0,
      "value": "0x0"
    },
    "897": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6036,
        6053
      ],
      "op": "DUP2",
      "path": "22"
    },
    "898": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6036,
        6058
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "900": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6036,
        6058
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "901": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6036,
        6058
      ],
      "op": "SLT",
      "path": "22"
    },
    "902": {
      "branch": 25,
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6036,
        6058
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "903": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3CA"
    },
    "906": {
      "branch": 25,
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "907": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "909": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "DUP1",
      "path": "22"
    },
    "910": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "911": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "917": {
      "op": "SHL"
    },
    "918": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "DUP2",
      "path": "22"
    },
    "919": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "920": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "922": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "924": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "DUP3",
      "path": "22"
    },
    "925": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "ADD",
      "path": "22"
    },
    "926": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "927": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "929": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "931": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "DUP3",
      "path": "22"
    },
    "932": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "ADD",
      "path": "22"
    },
    "933": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "934": {
      "op": "PUSH16",
      "value": "0x36B0BC2A3BB0B82232BB34B0BA34B7B7"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "956": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "DUP3",
      "path": "22"
    },
    "957": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "ADD",
      "path": "22"
    },
    "958": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "959": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "960": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "961": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "962": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "DUP2",
      "path": "22"
    },
    "963": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "964": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "SUB",
      "path": "22"
    },
    "965": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "967": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "ADD",
      "path": "22"
    },
    "968": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "969": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "REVERT",
      "path": "22"
    },
    "970": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6028,
        6079
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "971": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6105
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 1,
      "value": "0x1"
    },
    "973": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "DUP1",
      "path": "22"
    },
    "974": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "975": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "977": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "978": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "979": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "980": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "981": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0xFFFFFF"
    },
    "985": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "AND",
      "path": "22"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "MUL",
      "path": "22"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "op": "SUB"
    },
    "1000": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1001": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1002": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "AND",
      "path": "22"
    },
    "1003": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1004": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1005": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1006": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "OR",
      "path": "22"
    },
    "1007": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1008": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6089,
        6125
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1009": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "jump": "o",
      "offset": [
        5940,
        6132
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1010": {
      "offset": [
        1648,
        1669
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1011": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1648,
        1669
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1013": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1648,
        1669
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1014": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1648,
        1669
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1016": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1648,
        1669
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "1017": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1648,
        1669
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1018": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "jump": "o",
      "offset": [
        1648,
        1669
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1019": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4536,
        4908
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1020": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4616,
        4628
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1022": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4616,
        4628
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1023": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4616,
        4628
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1024": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1026": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1027": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1028": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1029": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1030": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1031": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "1033": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1034": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "ADD",
      "path": "22"
    },
    "1035": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1036": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1037": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4576,
        4581
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1039": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4576,
        4581
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1040": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4616,
        4628
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1045": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4616,
        4628
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1046": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4616,
        4628
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1047": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4616,
        4628
      ],
      "op": "AND",
      "path": "22"
    },
    "1048": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4616,
        4628
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1049": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4576,
        4581
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1050": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4576,
        4581
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1051": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1053": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1054": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "ADD",
      "path": "22"
    },
    "1055": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1056": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1057": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1058": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1059": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "CALLDATACOPY",
      "path": "22"
    },
    "1060": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "ADD",
      "path": "22"
    },
    "1061": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1062": {
      "op": "POP"
    },
    "1063": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4667,
        4682
      ],
      "op": "POP",
      "path": "22"
    },
    "1064": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4638,
        4682
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1065": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4638,
        4682
      ],
      "op": "POP",
      "path": "22"
    },
    "1066": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4708,
        4721
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 2
    },
    "1067": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4702
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1068": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4703,
        4704
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1070": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1071": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1072": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1073": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "LT",
      "path": "22"
    },
    "1074": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x437"
    },
    "1077": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1078": {
      "dev": "Index out of range",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1079": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1080": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1082": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "MUL",
      "path": "22"
    },
    "1083": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1085": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "ADD",
      "path": "22"
    },
    "1086": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4705
      ],
      "op": "ADD",
      "path": "22"
    },
    "1087": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1088": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1093": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "AND",
      "path": "22"
    },
    "1094": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1095": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1096": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1101": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "AND",
      "path": "22"
    },
    "1102": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1103": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1104": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "POP",
      "path": "22"
    },
    "1105": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4692,
        4721
      ],
      "op": "POP",
      "path": "22"
    },
    "1106": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4747,
        4748
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 3,
      "value": "0x0"
    },
    "1108": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4741
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1109": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4742,
        4743
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1111": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1112": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1113": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1114": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "LT",
      "path": "22"
    },
    "1115": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x460"
    },
    "1118": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1119": {
      "dev": "Index out of range",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1120": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1121": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4748
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1126": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4748
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1127": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4748
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1128": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4748
      ],
      "op": "AND",
      "path": "22"
    },
    "1129": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1131": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1132": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1133": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "MUL",
      "path": "22"
    },
    "1134": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1135": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1136": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1137": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "ADD",
      "path": "22"
    },
    "1138": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1139": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4744
      ],
      "op": "ADD",
      "path": "22"
    },
    "1140": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4731,
        4748
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1141": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4800
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1143": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4800
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1144": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1146": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1147": {
      "op": "PUSH4",
      "value": "0x883BDBFD"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1156": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1157": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1159": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1160": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1161": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1162": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1163": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1164": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1165": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1166": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1168": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1169": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1170": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1171": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1172": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1173": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4760,
        4790
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1175": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4760,
        4790
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1182": {
      "op": "SHL"
    },
    "1183": {
      "op": "SUB"
    },
    "1184": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4800
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1185": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4800
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1186": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4800
      ],
      "op": "AND",
      "path": "22"
    },
    "1187": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4800
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1188": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4808
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x883BDBFD"
    },
    "1193": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4808
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1194": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4809,
        4819
      ],
      "op": "DUP8",
      "path": "22"
    },
    "1195": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4809,
        4819
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1196": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1197": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1198": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1199": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1201": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1202": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1203": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1204": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1205": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1206": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1207": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1208": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1209": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MUL",
      "path": "22"
    },
    "1210": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1211": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1212": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1213": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4760,
        4790
      ],
      "op": "DUP12",
      "path": "22"
    },
    "1214": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1215": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1216": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1217": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "LT",
      "path": "22"
    },
    "1218": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1219": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4D6"
    },
    "1222": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1223": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1224": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1225": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1226": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1227": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1228": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1229": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1230": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1231": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1233": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1234": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BE"
    },
    "1237": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1238": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1239": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1240": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1241": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1242": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1243": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1244": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1245": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1246": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1247": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1248": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1249": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1250": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1252": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1254": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1255": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1256": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1257": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SUB",
      "path": "22"
    },
    "1258": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1259": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1260": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1261": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "1262": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1263": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1264": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1265": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4F9"
    },
    "1268": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1269": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1271": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1272": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1273": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1274": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1275": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "GAS",
      "path": "22"
    },
    "1276": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1277": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1278": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1279": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1280": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x50D"
    },
    "1283": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1284": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1285": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1287": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1288": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "1289": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1290": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1292": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1293": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1294": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1295": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1296": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1297": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1298": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1300": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1301": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1302": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1304": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1305": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "1306": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1308": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1309": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1310": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1311": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1314": {
      "op": "NOT"
    },
    "1315": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "AND",
      "path": "22"
    },
    "1316": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1317": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1318": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1320": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1321": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1322": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1323": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1324": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "LT",
      "path": "22"
    },
    "1325": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1326": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x536"
    },
    "1329": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1330": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1332": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1333": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1334": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1335": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1336": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1337": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1338": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1339": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1340": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1341": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1343": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1344": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1345": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1346": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1347": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1348": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1355": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "GT",
      "path": "22"
    },
    "1356": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1357": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x555"
    },
    "1360": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1361": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1363": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1364": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1365": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1366": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1367": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1368": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1369": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1370": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1372": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1373": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1374": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1375": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1376": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "GT",
      "path": "22"
    },
    "1377": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1378": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x56A"
    },
    "1381": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1382": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1384": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1385": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1386": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1387": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1388": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1389": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1390": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1392": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1393": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MUL",
      "path": "22"
    },
    "1394": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1395": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1396": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "GT",
      "path": "22"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1401": {
      "op": "SHL"
    },
    "1402": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1403": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "GT",
      "path": "22"
    },
    "1404": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "OR",
      "path": "22"
    },
    "1405": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1406": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x586"
    },
    "1409": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1410": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1412": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1413": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1414": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1415": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1416": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1417": {
      "op": "POP"
    },
    "1418": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1419": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1420": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1422": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1423": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1424": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1425": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1426": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1427": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1428": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1429": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MUL",
      "path": "22"
    },
    "1430": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1431": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1432": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1433": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1435": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1436": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1437": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1438": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "LT",
      "path": "22"
    },
    "1439": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1440": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5B3"
    },
    "1443": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1444": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1445": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1446": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1447": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1448": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1449": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1450": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1451": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1452": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1454": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1455": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x59B"
    },
    "1458": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1459": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1460": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1461": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1462": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1463": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1464": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1465": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1466": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1467": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1469": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1470": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1472": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1473": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1474": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1475": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1477": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1478": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1479": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1480": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1481": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1482": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1487": {
      "op": "SHL"
    },
    "1488": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1489": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "GT",
      "path": "22"
    },
    "1490": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1491": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5DB"
    },
    "1494": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1495": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1497": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1498": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1499": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1500": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1501": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1502": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1503": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1504": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1506": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1507": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1508": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1509": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1510": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "GT",
      "path": "22"
    },
    "1511": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1512": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5F0"
    },
    "1515": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1516": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1518": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1519": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1520": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1521": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1522": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1523": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1524": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1526": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1527": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MUL",
      "path": "22"
    },
    "1528": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1529": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1530": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "GT",
      "path": "22"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1535": {
      "op": "SHL"
    },
    "1536": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1537": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "GT",
      "path": "22"
    },
    "1538": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "OR",
      "path": "22"
    },
    "1539": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1540": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x60C"
    },
    "1543": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1544": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1546": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1547": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1548": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1549": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1550": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1553": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1554": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1556": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1557": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1558": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1559": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1560": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1561": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1562": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1563": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MUL",
      "path": "22"
    },
    "1564": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1565": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1566": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1567": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1569": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1570": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1571": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1572": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "LT",
      "path": "22"
    },
    "1573": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1574": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x639"
    },
    "1577": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1578": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1579": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1580": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1581": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1582": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1583": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1584": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1585": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1586": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1588": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1589": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x621"
    },
    "1592": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1593": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1594": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1595": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1596": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1597": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1598": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1599": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1600": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "ADD",
      "path": "22"
    },
    "1601": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1603": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1604": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1605": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1606": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4796,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1607": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4759,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1608": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4759,
        4820
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1609": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4759,
        4820
      ],
      "op": "POP",
      "path": "22"
    },
    "1610": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4887,
        4900
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 4
    },
    "1611": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1616": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "AND",
      "path": "22"
    },
    "1617": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4880
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1618": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4881,
        4882
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1620": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1621": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1622": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1623": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "LT",
      "path": "22"
    },
    "1624": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x65D"
    },
    "1627": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1628": {
      "dev": "Index out of range",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1629": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1630": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1632": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "MUL",
      "path": "22"
    },
    "1633": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1635": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "ADD",
      "path": "22"
    },
    "1636": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "ADD",
      "path": "22"
    },
    "1637": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4865,
        4883
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1638": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4859
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1639": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4860,
        4861
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1641": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1642": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1643": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1644": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "LT",
      "path": "22"
    },
    "1645": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x672"
    },
    "1648": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1649": {
      "dev": "Index out of range",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1650": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1651": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1653": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "MUL",
      "path": "22"
    },
    "1654": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1656": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "ADD",
      "path": "22"
    },
    "1657": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "ADD",
      "path": "22"
    },
    "1658": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4862
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1659": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4844,
        4883
      ],
      "op": "SUB",
      "path": "22"
    },
    "1660": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1662": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "1663": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1664": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x685"
    },
    "1667": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1668": {
      "dev": "Division by zero",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1669": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1670": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4843,
        4900
      ],
      "op": "SDIV",
      "path": "22"
    },
    "1671": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4830,
        4901
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1672": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4830,
        4901
      ],
      "op": "POP",
      "path": "22"
    },
    "1673": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4830,
        4901
      ],
      "op": "POP",
      "path": "22"
    },
    "1674": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4830,
        4901
      ],
      "op": "POP",
      "path": "22"
    },
    "1675": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4830,
        4901
      ],
      "op": "POP",
      "path": "22"
    },
    "1676": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4536,
        4908
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1677": {
      "fn": "AlphaStrategy.getTwap",
      "jump": "o",
      "offset": [
        4536,
        4908
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1678": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5504,
        5597
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1679": {
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1681": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6428
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1682": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6428
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1683": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1684": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1687": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6428
      ],
      "op": "EXP",
      "path": "22"
    },
    "1688": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1689": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6428
      ],
      "op": "DIV",
      "path": "22"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1696": {
      "op": "SHL"
    },
    "1697": {
      "op": "SUB"
    },
    "1698": {
      "offset": [
        6423,
        6428
      ],
      "op": "AND",
      "path": "22"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1705": {
      "op": "SHL"
    },
    "1706": {
      "op": "SUB"
    },
    "1707": {
      "offset": [
        6423,
        6439
      ],
      "op": "AND",
      "path": "22"
    },
    "1708": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6439
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "1713": {
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1715": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1716": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1717": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1722": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "1723": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "1725": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "SHL",
      "path": "22"
    },
    "1726": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1727": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1728": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1730": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "ADD",
      "path": "22"
    },
    "1731": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1733": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1735": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1736": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1737": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1738": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "SUB",
      "path": "22"
    },
    "1739": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1740": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1741": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1742": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "1743": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1744": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1745": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1746": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DA"
    },
    "1749": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1750": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1752": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1753": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1754": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1755": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "1756": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "GAS",
      "path": "22"
    },
    "1757": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1758": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1759": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1760": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1761": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6EE"
    },
    "1764": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1765": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1766": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1768": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1769": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "1770": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1771": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1773": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1774": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1775": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "1776": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "1777": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "1778": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "1779": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1781": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1782": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1783": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1785": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1786": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "LT",
      "path": "22"
    },
    "1787": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1788": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x704"
    },
    "1791": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1792": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1794": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1795": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1796": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1805": {
      "op": "SHL"
    },
    "1806": {
      "op": "SUB"
    },
    "1807": {
      "offset": [
        6409,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "1808": {
      "offset": [
        6409,
        6419
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1809": {
      "offset": [
        6409,
        6441
      ],
      "op": "EQ",
      "path": "22"
    },
    "1810": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x74F"
    },
    "1813": {
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1814": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1816": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1817": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1818": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1824": {
      "op": "SHL"
    },
    "1825": {
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1826": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1827": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1829": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1831": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1832": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "1833": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1834": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "1836": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1838": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1839": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "1840": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1841": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1857": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1858": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "1859": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1860": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1861": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1862": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1863": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1864": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1865": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "SUB",
      "path": "22"
    },
    "1866": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1868": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "1869": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1870": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1871": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1872": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5580
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 5,
      "value": "0x2"
    },
    "1874": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1875": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1885": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1886": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "AND",
      "path": "22"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1891": {
      "op": "SHL"
    },
    "1892": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "MUL",
      "path": "22"
    },
    "1893": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "op": "SUB"
    },
    "1905": {
      "op": "NOT"
    },
    "1906": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1907": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1908": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "AND",
      "path": "22"
    },
    "1909": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1910": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1911": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1912": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "OR",
      "path": "22"
    },
    "1913": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1914": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5574,
        5590
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1915": {
      "fn": "AlphaStrategy.setKeeper",
      "jump": "o",
      "offset": [
        5504,
        5597
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1916": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        2990,
        4282
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1917": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3052,
        3058
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 6,
      "value": "0x2"
    },
    "1919": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3052,
        3058
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3052,
        3058
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1926": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3052,
        3058
      ],
      "op": "DIV",
      "path": "22"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1933": {
      "op": "SHL"
    },
    "1934": {
      "op": "SUB"
    },
    "1935": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3052,
        3058
      ],
      "op": "AND",
      "path": "22"
    },
    "1936": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3038,
        3048
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1937": {
      "branch": 26,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3038,
        3058
      ],
      "op": "EQ",
      "path": "22"
    },
    "1938": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7CB"
    },
    "1941": {
      "branch": 26,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1942": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1944": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1945": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1954": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1955": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1957": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1959": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1960": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "ADD",
      "path": "22"
    },
    "1961": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1962": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1964": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1966": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1967": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "ADD",
      "path": "22"
    },
    "1968": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1969": {
      "op": "PUSH6",
      "value": "0x35B2B2B832B9"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1981": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1982": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "ADD",
      "path": "22"
    },
    "1983": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1984": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1985": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1986": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1987": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1988": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1989": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "SUB",
      "path": "22"
    },
    "1990": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1992": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "ADD",
      "path": "22"
    },
    "1993": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1994": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1995": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3030,
        3069
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1996": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3236,
        3246
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1998": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3249,
        3258
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7D5"
    },
    "2001": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3249,
        3256
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD94"
    },
    "2004": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "i",
      "offset": [
        3249,
        3258
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2005": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3249,
        3258
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2006": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3305,
        3319
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2008": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3305,
        3319
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2009": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3236,
        3258
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2010": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3236,
        3258
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3268,
        3286
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2014": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3268,
        3286
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2019": {
      "op": "SHL"
    },
    "2020": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3305,
        3319
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2021": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3305,
        3319
      ],
      "op": "DIV",
      "path": "22"
    },
    "2022": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3305,
        3319
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2024": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3305,
        3319
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2025": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3305,
        3319
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2026": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3305,
        3319
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2027": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3319
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2028": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3319
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2033": {
      "op": "SHL"
    },
    "2034": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3302
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2035": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3302
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2036": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3302
      ],
      "op": "DIV",
      "path": "22"
    },
    "2037": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3302
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2038": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3302
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2039": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3319
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2040": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3319
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2041": {
      "branch": 27,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3319
      ],
      "op": "SGT",
      "path": "22"
    },
    "2042": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3352
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x80F"
    },
    "2045": {
      "branch": 27,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3352
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2046": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3338,
        3352
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2048": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3338,
        3352
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2053": {
      "op": "SHL"
    },
    "2054": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3338,
        3352
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2055": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3338,
        3352
      ],
      "op": "DIV",
      "path": "22"
    },
    "2056": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3338,
        3352
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2058": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3338,
        3352
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2059": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3352
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x81D"
    },
    "2062": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3352
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2063": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3352
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2064": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3322,
        3335
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2066": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3322,
        3335
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3322,
        3335
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2073": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3322,
        3335
      ],
      "op": "DIV",
      "path": "22"
    },
    "2074": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3322,
        3335
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2076": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3322,
        3335
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2077": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3289,
        3352
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2078": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3268,
        3352
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2079": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3268,
        3352
      ],
      "op": "POP",
      "path": "22"
    },
    "2080": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 7,
      "value": "0x1"
    },
    "2082": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x14"
    },
    "2084": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2085": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2086": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2087": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2090": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "EXP",
      "path": "22"
    },
    "2091": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2092": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "DIV",
      "path": "22"
    },
    "2093": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2095": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3412,
        3423
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2096": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3397,
        3409
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2097": {
      "op": "PUSH3",
      "value": "0xD89E7"
    },
    "2101": {
      "op": "NOT"
    },
    "2102": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3377,
        3409
      ],
      "op": "ADD",
      "path": "22"
    },
    "2103": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3377,
        3423
      ],
      "op": "ADD",
      "path": "22"
    },
    "2104": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3370,
        3423
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2106": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3370,
        3423
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2107": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3370,
        3374
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2108": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3370,
        3423
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2110": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3370,
        3423
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2111": {
      "branch": 28,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3370,
        3423
      ],
      "op": "SGT",
      "path": "22"
    },
    "2112": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x87F"
    },
    "2115": {
      "branch": 28,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2116": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2118": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2119": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2128": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2129": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2131": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2133": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2134": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "ADD",
      "path": "22"
    },
    "2135": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2136": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "2138": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2140": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2141": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "ADD",
      "path": "22"
    },
    "2142": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2143": {
      "op": "PUSH12",
      "value": "0x7469636B20746F6F206C6F77"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2158": {
      "op": "SHL"
    },
    "2159": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2161": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2162": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "ADD",
      "path": "22"
    },
    "2163": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2164": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2165": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2166": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2167": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2168": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2169": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "SUB",
      "path": "22"
    },
    "2170": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2172": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "ADD",
      "path": "22"
    },
    "2173": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2174": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2175": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3362,
        3440
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2176": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3500,
        3511
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 8,
      "value": "0x1"
    },
    "2178": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3500,
        3511
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2183": {
      "op": "SHL"
    },
    "2184": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3500,
        3511
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2185": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3500,
        3511
      ],
      "op": "DIV",
      "path": "22"
    },
    "2186": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3500,
        3511
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2188": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3500,
        3511
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2189": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3500,
        3511
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2190": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3500,
        3511
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2191": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0xD89E8"
    },
    "2195": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3465,
        3497
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2196": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3465,
        3497
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2197": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3465,
        3497
      ],
      "op": "SUB",
      "path": "22"
    },
    "2198": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3465,
        3511
      ],
      "op": "SUB",
      "path": "22"
    },
    "2199": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3458,
        3511
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2200": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3458,
        3511
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2201": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3458,
        3511
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2202": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3458,
        3511
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2203": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3458,
        3511
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2204": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3458,
        3511
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2205": {
      "branch": 29,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3458,
        3511
      ],
      "op": "SLT",
      "path": "22"
    },
    "2206": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8DE"
    },
    "2209": {
      "branch": 29,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2210": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2212": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2213": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2222": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2223": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2225": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2227": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2228": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "ADD",
      "path": "22"
    },
    "2229": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2230": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "2232": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2234": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2235": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "ADD",
      "path": "22"
    },
    "2236": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2237": {
      "op": "PUSH13",
      "value": "0xE8D2C6D640E8DEDE40D0D2CED"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x9B"
    },
    "2253": {
      "op": "SHL"
    },
    "2254": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2256": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2257": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "ADD",
      "path": "22"
    },
    "2258": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2259": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2260": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2261": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2262": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2263": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2264": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "SUB",
      "path": "22"
    },
    "2265": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2267": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "ADD",
      "path": "22"
    },
    "2268": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2269": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2270": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3450,
        3529
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2271": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3723,
        3733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2273": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3736,
        3745
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8E8"
    },
    "2276": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3736,
        3743
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3FB"
    },
    "2279": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "i",
      "offset": [
        3736,
        3745
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2280": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3736,
        3745
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2281": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3723,
        3745
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2282": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3723,
        3745
      ],
      "op": "POP",
      "path": "22"
    },
    "2283": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3755,
        3770
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2285": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3780,
        3784
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2286": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3784
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2288": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3784
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2289": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3777
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2290": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3784
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2292": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3784
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2293": {
      "branch": 30,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3784
      ],
      "op": "SGT",
      "path": "22"
    },
    "2294": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3812
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x901"
    },
    "2297": {
      "branch": 30,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3812
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2298": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3808,
        3812
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2299": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3801,
        3805
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2300": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3801,
        3812
      ],
      "op": "SUB",
      "path": "22"
    },
    "2301": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3812
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x905"
    },
    "2304": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3812
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2305": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3812
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2306": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3794,
        3798
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2307": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3787,
        3791
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2308": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3787,
        3798
      ],
      "op": "SUB",
      "path": "22"
    },
    "2309": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3773,
        3812
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2310": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3755,
        3812
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2311": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3755,
        3812
      ],
      "op": "POP",
      "path": "22"
    },
    "2312": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 9,
      "value": "0x1"
    },
    "2314": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1D"
    },
    "2316": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2317": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2318": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2319": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2322": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "EXP",
      "path": "22"
    },
    "2323": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2324": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "DIV",
      "path": "22"
    },
    "2325": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2327": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3843,
        3859
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2328": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3830,
        3859
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2330": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3830,
        3859
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2331": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3830,
        3839
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2332": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3830,
        3859
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2334": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3830,
        3859
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2335": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3830,
        3859
      ],
      "op": "SGT",
      "path": "22"
    },
    "2336": {
      "branch": 31,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3830,
        3859
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2337": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x964"
    },
    "2340": {
      "branch": 31,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2341": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2343": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2344": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2345": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2351": {
      "op": "SHL"
    },
    "2352": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2353": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2354": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2356": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2358": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2359": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "ADD",
      "path": "22"
    },
    "2360": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2361": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "2363": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2365": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2366": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "ADD",
      "path": "22"
    },
    "2367": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2368": {
      "op": "PUSH16",
      "value": "0x36B0BC2A3BB0B82232BB34B0BA34B7B7"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2387": {
      "op": "SHL"
    },
    "2388": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2390": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2391": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "ADD",
      "path": "22"
    },
    "2392": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2393": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2394": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2395": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2396": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2397": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2398": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "SUB",
      "path": "22"
    },
    "2399": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2401": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "ADD",
      "path": "22"
    },
    "2402": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2403": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2404": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3822,
        3880
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2405": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3891,
        3906
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2407": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3909,
        3921
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x96F"
    },
    "2410": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3916,
        3920
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2411": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3909,
        3915
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE2C"
    },
    "2414": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "i",
      "offset": [
        3909,
        3921
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2415": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3909,
        3921
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2416": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3960,
        3971
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2418": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3960,
        3971
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2419": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3931,
        3945
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2421": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        3987
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 10
    },
    "2422": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        3987
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2423": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2425": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2426": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2427": {
      "op": "PUSH4",
      "value": "0x44D14759"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2434": {
      "op": "SHL"
    },
    "2435": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2436": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2441": {
      "op": "SHL"
    },
    "2442": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4023,
        4036
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2443": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4023,
        4036
      ],
      "op": "DIV",
      "path": "22"
    },
    "2444": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3960,
        3971
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2446": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4023,
        4036
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2447": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4023,
        4036
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2448": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4023,
        4036
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2449": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4011,
        4036
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2450": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4011,
        4036
      ],
      "op": "DUP9",
      "path": "22"
    },
    "2451": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4011,
        4036
      ],
      "op": "SUB",
      "path": "22"
    },
    "2452": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2453": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2454": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2456": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2457": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ADD",
      "path": "22"
    },
    "2458": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2463": {
      "op": "SHL"
    },
    "2464": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3960,
        3971
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2465": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3960,
        3971
      ],
      "op": "DIV",
      "path": "22"
    },
    "2466": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3960,
        3971
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2467": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3960,
        3971
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2468": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3948,
        3971
      ],
      "op": "DUP9",
      "path": "22"
    },
    "2469": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3948,
        3971
      ],
      "op": "ADD",
      "path": "22"
    },
    "2470": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4050,
        4074
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2471": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4050,
        4074
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2472": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4050,
        4074
      ],
      "op": "ADD",
      "path": "22"
    },
    "2473": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2474": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2475": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2477": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2478": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ADD",
      "path": "22"
    },
    "2479": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4100,
        4114
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2486": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4100,
        4114
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "2487": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4100,
        4114
      ],
      "op": "DIV",
      "path": "22"
    },
    "2488": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4100,
        4114
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2489": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4100,
        4114
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2490": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4088,
        4114
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2491": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4088,
        4114
      ],
      "op": "DUP9",
      "path": "22"
    },
    "2492": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4088,
        4114
      ],
      "op": "SUB",
      "path": "22"
    },
    "2493": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2494": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2495": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2497": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2498": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ADD",
      "path": "22"
    },
    "2499": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2500": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2501": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2502": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2503": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2505": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2506": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ADD",
      "path": "22"
    },
    "2507": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2508": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2509": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2510": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2511": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x84"
    },
    "2513": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2514": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ADD",
      "path": "22"
    },
    "2515": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2516": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4173,
        4198
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2517": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4173,
        4198
      ],
      "op": "ADD",
      "path": "22"
    },
    "2518": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2519": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2520": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA4"
    },
    "2522": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2523": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ADD",
      "path": "22"
    },
    "2524": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2525": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2526": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2527": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3891,
        3921
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2528": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3891,
        3921
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "2529": {
      "op": "POP"
    },
    "2530": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3948,
        3971
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2531": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3948,
        3971
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2538": {
      "op": "SHL"
    },
    "2539": {
      "op": "SUB"
    },
    "2540": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        3987
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2541": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        3987
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2542": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        3987
      ],
      "op": "AND",
      "path": "22"
    },
    "2543": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        3987
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2544": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        3997
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x89A28EB2"
    },
    "2549": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        3997
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2550": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC4"
    },
    "2552": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2553": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2554": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ADD",
      "path": "22"
    },
    "2555": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2556": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3931,
        3945
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2557": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3931,
        3945
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2558": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2559": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2560": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "SUB",
      "path": "22"
    },
    "2561": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ADD",
      "path": "22"
    },
    "2562": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2563": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3931,
        3945
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2564": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        3987
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2565": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2566": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2567": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2568": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2569": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2570": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA12"
    },
    "2573": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2574": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2576": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2577": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2578": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2579": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "POP",
      "path": "22"
    },
    "2580": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "GAS",
      "path": "22"
    },
    "2581": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "CALL",
      "path": "22"
    },
    "2582": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2583": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2584": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2585": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA26"
    },
    "2588": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2589": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2590": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2592": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2593": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "2594": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2595": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2597": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2598": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3982,
        4208
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2599": {
      "op": "POP"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4235,
        4250
      ],
      "op": "TIMESTAMP",
      "path": "22",
      "statement": 11
    },
    "2602": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4219,
        4232
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "2604": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4219,
        4250
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2605": {
      "op": "POP"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4268
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 12,
      "value": "0x4"
    },
    "2609": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2610": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2611": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2613": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "2614": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2615": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "2616": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2617": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0xFFFFFF"
    },
    "2621": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "AND",
      "path": "22"
    },
    "2622": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "2626": {
      "op": "NOT"
    },
    "2627": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2628": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "2629": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "AND",
      "path": "22"
    },
    "2630": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "2631": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2632": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "2633": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "OR",
      "path": "22"
    },
    "2634": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2635": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "2636": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4260,
        4275
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2637": {
      "op": "POP"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "op": "POP"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "op": "POP"
    },
    "2642": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "o",
      "offset": [
        2990,
        4282
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2643": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5603,
        5763
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2644": {
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2646": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2647": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2648": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2649": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2652": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "EXP",
      "path": "22"
    },
    "2653": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2654": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "DIV",
      "path": "22"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "op": "SUB"
    },
    "2663": {
      "offset": [
        6423,
        6428
      ],
      "op": "AND",
      "path": "22"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2670": {
      "op": "SHL"
    },
    "2671": {
      "op": "SUB"
    },
    "2672": {
      "offset": [
        6423,
        6439
      ],
      "op": "AND",
      "path": "22"
    },
    "2673": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6439
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "2678": {
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2680": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2681": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2682": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2687": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "2688": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "2690": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "SHL",
      "path": "22"
    },
    "2691": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2692": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2693": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2695": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ADD",
      "path": "22"
    },
    "2696": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2698": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2700": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2701": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2702": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2703": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "SUB",
      "path": "22"
    },
    "2704": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2705": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2706": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2707": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2708": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2709": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2710": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2711": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA9F"
    },
    "2714": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2715": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2717": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2718": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2719": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2720": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "2721": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "GAS",
      "path": "22"
    },
    "2722": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "2723": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2724": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2725": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2726": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAB3"
    },
    "2729": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2730": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2731": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2733": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2734": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "2735": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2736": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2738": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2739": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2740": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "2741": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "2742": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "2743": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "2744": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2746": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2747": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2748": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2750": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2751": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "LT",
      "path": "22"
    },
    "2752": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2753": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC9"
    },
    "2756": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2757": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2759": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2760": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2761": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2762": {
      "op": "POP"
    },
    "2763": {
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2770": {
      "op": "SHL"
    },
    "2771": {
      "op": "SUB"
    },
    "2772": {
      "offset": [
        6409,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "2773": {
      "offset": [
        6409,
        6419
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2774": {
      "offset": [
        6409,
        6441
      ],
      "op": "EQ",
      "path": "22"
    },
    "2775": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB14"
    },
    "2778": {
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2779": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2781": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2782": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2789": {
      "op": "SHL"
    },
    "2790": {
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2791": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2792": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2794": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2796": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2797": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "2798": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2799": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2801": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2803": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2804": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "2805": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2806": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2822": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2823": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "2824": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2825": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2826": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2827": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2828": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2829": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2830": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SUB",
      "path": "22"
    },
    "2831": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2833": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "2834": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2835": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2836": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2837": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5685,
        5716
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 13,
      "value": "0xB1D"
    },
    "2840": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5701,
        5715
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2841": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5685,
        5700
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE9F"
    },
    "2844": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        5685,
        5716
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2845": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5685,
        5716
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2846": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5739
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 14,
      "value": "0x1"
    },
    "2848": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2849": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2850": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2852": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2853": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2854": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2855": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2856": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0xFFFFFF"
    },
    "2860": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "AND",
      "path": "22"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2865": {
      "op": "SHL"
    },
    "2866": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "MUL",
      "path": "22"
    },
    "2867": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2873": {
      "op": "SHL"
    },
    "2874": {
      "op": "NOT"
    },
    "2875": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2876": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2877": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "AND",
      "path": "22"
    },
    "2878": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2879": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2880": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2881": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "OR",
      "path": "22"
    },
    "2882": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2883": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5726,
        5756
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2884": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "o",
      "offset": [
        5603,
        5763
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2885": {
      "offset": [
        1454,
        1480
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2886": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1454,
        1480
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2888": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1454,
        1480
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2893": {
      "op": "SHL"
    },
    "2894": {
      "offset": [
        1454,
        1480
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2895": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1454,
        1480
      ],
      "op": "DIV",
      "path": "22"
    },
    "2896": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1454,
        1480
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2898": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1454,
        1480
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2899": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1454,
        1480
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2900": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "o",
      "offset": [
        1454,
        1480
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2901": {
      "offset": [
        1586,
        1607
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2902": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1586,
        1607
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2904": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1586,
        1607
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "offset": [
        1586,
        1607
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2911": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1586,
        1607
      ],
      "op": "DIV",
      "path": "22"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2918": {
      "op": "SHL"
    },
    "2919": {
      "op": "SUB"
    },
    "2920": {
      "offset": [
        1586,
        1607
      ],
      "op": "AND",
      "path": "22"
    },
    "2921": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1586,
        1607
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2922": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "o",
      "offset": [
        1586,
        1607
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2923": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5769,
        5934
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2924": {
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2926": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2927": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2928": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2929": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2932": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "EXP",
      "path": "22"
    },
    "2933": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2934": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6428
      ],
      "op": "DIV",
      "path": "22"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2941": {
      "op": "SHL"
    },
    "2942": {
      "op": "SUB"
    },
    "2943": {
      "offset": [
        6423,
        6428
      ],
      "op": "AND",
      "path": "22"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2950": {
      "op": "SHL"
    },
    "2951": {
      "op": "SUB"
    },
    "2952": {
      "offset": [
        6423,
        6439
      ],
      "op": "AND",
      "path": "22"
    },
    "2953": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6439
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "2958": {
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2960": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2961": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2962": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2967": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "2968": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "2970": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "SHL",
      "path": "22"
    },
    "2971": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2972": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2973": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2975": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ADD",
      "path": "22"
    },
    "2976": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2978": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2980": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2981": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2982": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2983": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "SUB",
      "path": "22"
    },
    "2984": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2985": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2986": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2987": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2988": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2989": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2990": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2991": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBB7"
    },
    "2994": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2995": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2997": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2998": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2999": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3000": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3001": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "GAS",
      "path": "22"
    },
    "3002": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "3003": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3004": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3005": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3006": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBCB"
    },
    "3009": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3010": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3011": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3013": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3014": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3015": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3016": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3018": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3019": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3020": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3021": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3022": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3023": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3024": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3026": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3027": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3028": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3030": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3031": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "LT",
      "path": "22"
    },
    "3032": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3033": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBE1"
    },
    "3036": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3037": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3039": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3040": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3041": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3050": {
      "op": "SHL"
    },
    "3051": {
      "op": "SUB"
    },
    "3052": {
      "offset": [
        6409,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "3053": {
      "offset": [
        6409,
        6419
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3054": {
      "offset": [
        6409,
        6441
      ],
      "op": "EQ",
      "path": "22"
    },
    "3055": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC2C"
    },
    "3058": {
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3059": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3061": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3062": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3063": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3069": {
      "op": "SHL"
    },
    "3070": {
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3071": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3072": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3074": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3076": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3077": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "3078": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3079": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3081": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3083": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3084": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "3085": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3086": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3099": {
      "op": "SHL"
    },
    "3100": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "3102": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3103": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "3104": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3105": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3106": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3107": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3108": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3109": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3110": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SUB",
      "path": "22"
    },
    "3111": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3113": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "3114": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3115": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3116": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3117": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5853,
        5885
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 15,
      "value": "0xC35"
    },
    "3120": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5869,
        5884
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3121": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5853,
        5868
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE9F"
    },
    "3124": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "jump": "i",
      "offset": [
        5853,
        5885
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3125": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5853,
        5885
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3126": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5909
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 16,
      "value": "0x1"
    },
    "3128": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3129": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3130": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3132": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3133": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3134": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3135": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3136": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0xFFFFFF"
    },
    "3140": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "AND",
      "path": "22"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "MUL",
      "path": "22"
    },
    "3147": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3153": {
      "op": "SHL"
    },
    "3154": {
      "op": "NOT"
    },
    "3155": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3156": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3157": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "AND",
      "path": "22"
    },
    "3158": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3159": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3160": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3161": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "OR",
      "path": "22"
    },
    "3162": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3163": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        5895,
        5927
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3164": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "jump": "o",
      "offset": [
        5769,
        5934
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3165": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6138,
        6306
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3166": {
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3168": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6428
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3169": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6428
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3170": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3171": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6428
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "3174": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6428
      ],
      "op": "EXP",
      "path": "22"
    },
    "3175": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6428
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3176": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6428
      ],
      "op": "DIV",
      "path": "22"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3183": {
      "op": "SHL"
    },
    "3184": {
      "op": "SUB"
    },
    "3185": {
      "offset": [
        6423,
        6428
      ],
      "op": "AND",
      "path": "22"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3192": {
      "op": "SHL"
    },
    "3193": {
      "op": "SUB"
    },
    "3194": {
      "offset": [
        6423,
        6439
      ],
      "op": "AND",
      "path": "22"
    },
    "3195": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6439
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "3200": {
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3202": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3203": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3204": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3209": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "3210": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3212": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "SHL",
      "path": "22"
    },
    "3213": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3214": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3215": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3217": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "ADD",
      "path": "22"
    },
    "3218": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3220": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3222": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3223": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3224": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3225": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "SUB",
      "path": "22"
    },
    "3226": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3227": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3228": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3229": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3230": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3231": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3232": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3233": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCA9"
    },
    "3236": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3237": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3239": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3240": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3241": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3242": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3243": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "GAS",
      "path": "22"
    },
    "3244": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "3245": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3246": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3247": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3248": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCBD"
    },
    "3251": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3252": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3253": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3255": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3256": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3257": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3258": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3260": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3261": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3262": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3263": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3264": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3265": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "POP",
      "path": "22"
    },
    "3266": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3268": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3269": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3270": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3272": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3273": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "LT",
      "path": "22"
    },
    "3274": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3275": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCD3"
    },
    "3278": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3279": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3281": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3282": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3283": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6423,
        6441
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3284": {
      "op": "POP"
    },
    "3285": {
      "offset": [
        6423,
        6441
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3292": {
      "op": "SHL"
    },
    "3293": {
      "op": "SUB"
    },
    "3294": {
      "offset": [
        6409,
        6441
      ],
      "op": "AND",
      "path": "22"
    },
    "3295": {
      "offset": [
        6409,
        6419
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3296": {
      "offset": [
        6409,
        6441
      ],
      "op": "EQ",
      "path": "22"
    },
    "3297": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD1E"
    },
    "3300": {
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3301": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3303": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3304": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3305": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3311": {
      "op": "SHL"
    },
    "3312": {
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3313": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3314": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3316": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3318": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3319": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "3320": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3321": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3323": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3325": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3326": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "3327": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3328": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3341": {
      "op": "SHL"
    },
    "3342": {
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "3344": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3345": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "3346": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3347": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3348": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3349": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3350": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3351": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3352": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "SUB",
      "path": "22"
    },
    "3353": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3355": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "ADD",
      "path": "22"
    },
    "3356": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3357": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3358": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6401,
        6456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3359": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6243,
        6244
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 17,
      "value": "0x0"
    },
    "3361": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6227,
        6240
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3362": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6227,
        6244
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3367": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6227,
        6244
      ],
      "op": "AND",
      "path": "22"
    },
    "3368": {
      "branch": 32,
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6227,
        6244
      ],
      "op": "GT",
      "path": "22"
    },
    "3369": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD68"
    },
    "3372": {
      "branch": 32,
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3373": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3375": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3376": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3383": {
      "op": "SHL"
    },
    "3384": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3385": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3386": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3388": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3390": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3391": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "ADD",
      "path": "22"
    },
    "3392": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3393": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "3395": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3397": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3398": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "ADD",
      "path": "22"
    },
    "3399": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3400": {
      "op": "PUSH12",
      "value": "0x3A3BB0B8223AB930BA34B7B7"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "3418": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3419": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "ADD",
      "path": "22"
    },
    "3420": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3421": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3422": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3423": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3424": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3425": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3426": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "SUB",
      "path": "22"
    },
    "3427": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3429": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "ADD",
      "path": "22"
    },
    "3430": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3431": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3432": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6219,
        6261
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3433": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6283
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 18,
      "value": "0x2"
    },
    "3435": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3436": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3437": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3442": {
      "op": "NOT"
    },
    "3443": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "AND",
      "path": "22"
    },
    "3444": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3449": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3450": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3451": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3452": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "AND",
      "path": "22"
    },
    "3453": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3454": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3455": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3456": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "OR",
      "path": "22"
    },
    "3457": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3458": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6271,
        6299
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3459": {
      "fn": "AlphaStrategy.setTwapDuration",
      "jump": "o",
      "offset": [
        6138,
        6306
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3460": {
      "offset": [
        1423,
        1447
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3461": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1423,
        1447
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3463": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1423,
        1447
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3468": {
      "op": "SHL"
    },
    "3469": {
      "offset": [
        1423,
        1447
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3470": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1423,
        1447
      ],
      "op": "DIV",
      "path": "22"
    },
    "3471": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1423,
        1447
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3473": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1423,
        1447
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3474": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1423,
        1447
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3475": {
      "fn": "AlphaStrategy.setTwapDuration",
      "jump": "o",
      "offset": [
        1423,
        1447
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3476": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4351,
        4453
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3477": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4438
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 19,
      "value": "0x1"
    },
    "3479": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4438
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3480": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3482": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3483": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3484": {
      "op": "PUSH4",
      "value": "0x3850C7BD"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3491": {
      "op": "SHL"
    },
    "3492": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3493": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3494": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3495": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3496": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4391,
        4401
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3498": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4391,
        4401
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3505": {
      "op": "SHL"
    },
    "3506": {
      "op": "SUB"
    },
    "3507": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4438
      ],
      "op": "AND",
      "path": "22"
    },
    "3508": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4438
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3509": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4444
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3850C7BD"
    },
    "3514": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4444
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3515": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3517": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3518": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3519": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "ADD",
      "path": "22"
    },
    "3520": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3521": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3523": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3524": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3525": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3526": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3527": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3528": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "SUB",
      "path": "22"
    },
    "3529": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "ADD",
      "path": "22"
    },
    "3530": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3531": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4438
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3532": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3533": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3534": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3535": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3536": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3537": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDD9"
    },
    "3540": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3541": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3543": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3544": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3545": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3546": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "3547": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "GAS",
      "path": "22"
    },
    "3548": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "3549": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3550": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3551": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3552": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDED"
    },
    "3555": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3556": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3557": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3559": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3560": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3561": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3562": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3564": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3565": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3566": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "3567": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "3568": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "3569": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "POP",
      "path": "22"
    },
    "3570": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3572": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3573": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3574": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3576": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3577": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "LT",
      "path": "22"
    },
    "3578": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3579": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE03"
    },
    "3582": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3583": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3585": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3586": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3587": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3588": {
      "op": "POP"
    },
    "3589": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3591": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "ADD",
      "path": "22"
    },
    "3592": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3593": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4434,
        4446
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3594": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4351,
        4453
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        4351,
        4453
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3597": {
      "offset": [
        1519,
        1548
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3598": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1519,
        1548
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3600": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1519,
        1548
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3605": {
      "op": "SHL"
    },
    "3606": {
      "offset": [
        1519,
        1548
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3607": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1519,
        1548
      ],
      "op": "DIV",
      "path": "22"
    },
    "3608": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1519,
        1548
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3610": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1519,
        1548
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3611": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1519,
        1548
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3612": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1519,
        1548
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3613": {
      "offset": [
        1362,
        1385
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3614": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1362,
        1385
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3616": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1362,
        1385
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3623": {
      "op": "SHL"
    },
    "3624": {
      "op": "SUB"
    },
    "3625": {
      "offset": [
        1362,
        1385
      ],
      "op": "AND",
      "path": "22"
    },
    "3626": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1362,
        1385
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3627": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1362,
        1385
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3628": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5020,
        5236
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3629": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5071,
        5076
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3631": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5088,
        5104
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3632": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3634": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x14"
    },
    "3636": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3637": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3638": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3639": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "3642": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "EXP",
      "path": "22"
    },
    "3643": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3644": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "DIV",
      "path": "22"
    },
    "3645": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3647": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5114,
        5125
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3648": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3650": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3651": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5111
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3652": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3654": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3655": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3656": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE4D"
    },
    "3659": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3660": {
      "dev": "Division by zero",
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "INVALID",
      "path": "22"
    },
    "3661": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3662": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5107,
        5125
      ],
      "op": "SDIV",
      "path": "22"
    },
    "3663": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5088,
        5125
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3664": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5088,
        5125
      ],
      "op": "POP",
      "path": "22"
    },
    "3665": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5146,
        5147
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3667": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5139,
        5143
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3668": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5139,
        5147
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3670": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5139,
        5147
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3671": {
      "branch": 33,
      "fn": "AlphaStrategy._floor",
      "offset": [
        5139,
        5147
      ],
      "op": "SLT",
      "path": "22"
    },
    "3672": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5139,
        5174
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3673": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5139,
        5174
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3674": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5139,
        5174
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE81"
    },
    "3677": {
      "branch": 33,
      "fn": "AlphaStrategy._floor",
      "offset": [
        5139,
        5174
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3678": {
      "op": "POP"
    },
    "3679": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5158,
        5169
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3681": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5158,
        5169
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3686": {
      "op": "SHL"
    },
    "3687": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5158,
        5169
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3688": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5158,
        5169
      ],
      "op": "DIV",
      "path": "22"
    },
    "3689": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5158,
        5169
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3691": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5158,
        5169
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3692": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5158,
        5169
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3693": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5158,
        5169
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3694": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3695": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3696": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3697": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3698": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3699": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3700": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3701": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE7A"
    },
    "3704": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3705": {
      "dev": "Modulus by zero",
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "INVALID",
      "path": "22"
    },
    "3706": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3707": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5169
      ],
      "op": "SMOD",
      "path": "22"
    },
    "3708": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5174
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3710": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5174
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3711": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5174
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3712": {
      "branch": 34,
      "fn": "AlphaStrategy._floor",
      "offset": [
        5151,
        5174
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3713": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5139,
        5174
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3714": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5135,
        5188
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3715": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5135,
        5188
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE8B"
    },
    "3718": {
      "branch": 34,
      "fn": "AlphaStrategy._floor",
      "offset": [
        5135,
        5188
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3721": {
      "op": "NOT"
    },
    "3722": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5176,
        5188
      ],
      "op": "ADD",
      "path": "22",
      "statement": 20
    },
    "3723": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5135,
        5188
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3724": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5218,
        5229
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 21,
      "value": "0x1"
    },
    "3726": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5218,
        5229
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3731": {
      "op": "SHL"
    },
    "3732": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5218,
        5229
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3733": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5218,
        5229
      ],
      "op": "DIV",
      "path": "22"
    },
    "3734": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5218,
        5229
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3736": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5218,
        5229
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3737": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5205,
        5229
      ],
      "op": "MUL",
      "path": "22"
    },
    "3738": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5205,
        5229
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3739": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5020,
        5236
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "fn": "AlphaStrategy._floor",
      "jump": "o",
      "offset": [
        5020,
        5236
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3743": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5242,
        5498
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3744": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5328,
        5329
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 22,
      "value": "0x0"
    },
    "3746": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5316,
        5325
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3747": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5316,
        5329
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3749": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5316,
        5329
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3750": {
      "branch": 35,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5316,
        5329
      ],
      "op": "SGT",
      "path": "22"
    },
    "3751": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEE7"
    },
    "3754": {
      "branch": 35,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3755": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3757": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3758": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3759": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3767": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3768": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3770": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3772": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3773": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "ADD",
      "path": "22"
    },
    "3774": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3775": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "3777": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3779": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3780": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "ADD",
      "path": "22"
    },
    "3781": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3782": {
      "op": "PUSH13",
      "value": "0x7468726573686F6C64203E203"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x9C"
    },
    "3798": {
      "op": "SHL"
    },
    "3799": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "3801": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3802": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "ADD",
      "path": "22"
    },
    "3803": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3804": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3805": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3806": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3807": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3808": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3809": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "SUB",
      "path": "22"
    },
    "3810": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3812": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "ADD",
      "path": "22"
    },
    "3813": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3814": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3815": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5308,
        5347
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3816": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0xD89E8"
    },
    "3820": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5365,
        5394
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 23,
      "value": "0x2"
    },
    "3822": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5365,
        5394
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3823": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5365,
        5394
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3824": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5365,
        5394
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3825": {
      "branch": 36,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5365,
        5394
      ],
      "op": "SLT",
      "path": "22"
    },
    "3826": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF37"
    },
    "3829": {
      "branch": 36,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3830": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3832": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3833": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3840": {
      "op": "SHL"
    },
    "3841": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3842": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3843": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3845": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3847": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3848": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "ADD",
      "path": "22"
    },
    "3849": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3850": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "3852": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3854": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3855": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "ADD",
      "path": "22"
    },
    "3856": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3857": {
      "op": "PUSH18",
      "value": "0xE8D0E4CAE6D0DED8C840E8DEDE40D0D2CED"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "3878": {
      "op": "SHL"
    },
    "3879": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "3881": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3882": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "ADD",
      "path": "22"
    },
    "3883": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3884": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3885": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3886": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3887": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3888": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3889": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "SUB",
      "path": "22"
    },
    "3890": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3892": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "ADD",
      "path": "22"
    },
    "3893": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3894": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3895": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5357,
        5417
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3896": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5447,
        5458
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 24,
      "value": "0x1"
    },
    "3898": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5447,
        5458
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3903": {
      "op": "SHL"
    },
    "3904": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5447,
        5458
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3905": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5447,
        5458
      ],
      "op": "DIV",
      "path": "22"
    },
    "3906": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5447,
        5458
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3908": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5447,
        5458
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3909": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5447,
        5458
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3910": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5447,
        5458
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3911": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3912": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3913": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3914": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3915": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3916": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3917": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3918": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF53"
    },
    "3921": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3922": {
      "dev": "Modulus by zero",
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "INVALID",
      "path": "22"
    },
    "3923": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3924": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5458
      ],
      "op": "SMOD",
      "path": "22"
    },
    "3925": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5463
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3927": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5463
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3928": {
      "branch": 37,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5435,
        5463
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3929": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFA9"
    },
    "3932": {
      "branch": 37,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3933": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3935": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3936": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3943": {
      "op": "SHL"
    },
    "3944": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3945": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3946": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3948": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3950": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3951": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "ADD",
      "path": "22"
    },
    "3952": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3953": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x17"
    },
    "3955": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3957": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3958": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "ADD",
      "path": "22"
    },
    "3959": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3960": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x7468726573686F6C642025207469636B53706163696E67000000000000000000"
    },
    "3993": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "3995": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3996": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "ADD",
      "path": "22"
    },
    "3997": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3998": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3999": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4000": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4001": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4002": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4003": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "SUB",
      "path": "22"
    },
    "4004": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "4006": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "ADD",
      "path": "22"
    },
    "4007": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4008": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4009": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5427,
        5491
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4010": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5242,
        5498
      ],
      "op": "POP",
      "path": "22"
    },
    "4011": {
      "fn": "AlphaStrategy._checkThreshold",
      "jump": "o",
      "offset": [
        5242,
        5498
      ],
      "op": "JUMP",
      "path": "22"
    }
  },
  "sha1": "10f5ac9120e33f7a7cc229f1a1378bbf48f8e856",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity 0.7.6;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@uniswap/v3-core/contracts/libraries/TickMath.sol\";\n\nimport \"./AlphaVault.sol\";\n\n/**\n * @title   Alpha Strategy\n * @notice  Rebalancing strategy for Alpha Vault that maintains the two\n *          following range orders:\n *\n *          1. Base order is placed between X - B and X + B + TS.\n *          2. Limit order is placed between X - L and X, or between X + TS\n *             and X + L + TS, depending on which token it holds more of.\n *\n *          where:\n *\n *              X = current tick rounded down to multiple of tick spacing\n *              TS = tick spacing\n *              B = base threshold\n *              L = limit threshold\n *\n *          Note that after these two orders, the vault should have deposited\n *          all its tokens and should only have a few wei left.\n *\n *          Because the limit order tries to sell whichever token the vault\n *          holds more of, the vault's holdings will have a tendency to get\n *          closer to a 1:1 balance. This enables it to continue providing\n *          liquidity without running out of inventory of either token, and\n *          achieves this without the need to swap directly on Uniswap and pay\n *          fees.\n */\ncontract AlphaStrategy {\n    AlphaVault public vault;\n    IUniswapV3Pool public pool;\n    int24 public tickSpacing;\n\n    int24 public baseThreshold;\n    int24 public limitThreshold;\n    int24 public maxTwapDeviation;\n    uint32 public twapDuration;\n    address public keeper;\n\n    uint256 public lastRebalance;\n    int24 public lastTick;\n\n    /**\n     * @param _vault Underlying Alpha Vault\n     * @param _baseThreshold Used to determine base order range\n     * @param _limitThreshold Used to determine limit order range\n     * @param _maxTwapDeviation Max deviation from TWAP during rebalance\n     * @param _twapDuration TWAP duration in seconds for rebalance check\n     * @param _keeper Account that can call `rebalance()`\n     */\n    constructor(\n        address _vault,\n        int24 _baseThreshold,\n        int24 _limitThreshold,\n        int24 _maxTwapDeviation,\n        uint32 _twapDuration,\n        address _keeper\n    ) {\n        vault = AlphaVault(_vault);\n        pool = vault.pool();\n        tickSpacing = pool.tickSpacing();\n\n        baseThreshold = _baseThreshold;\n        limitThreshold = _limitThreshold;\n        maxTwapDeviation = _maxTwapDeviation;\n        twapDuration = _twapDuration;\n        keeper = _keeper;\n\n        _checkThreshold(_baseThreshold);\n        _checkThreshold(_limitThreshold);\n        require(_maxTwapDeviation >= 0, \"maxTwapDeviation\");\n        require(_twapDuration > 0, \"twapDuration\");\n\n        (, lastTick, , , , , ) = pool.slot0();\n    }\n\n    /**\n     * @notice Calculates new ranges for orders and calls `vault.rebalance()`\n     * so that vault can update its positions. Can only be called by keeper.\n     */\n    function rebalance() external {\n        require(msg.sender == keeper, \"keeper\");\n\n        // Check price is not too close to min/max allowed by Uniswap. Price\n        // shouldn't be this extreme unless something was wrong with the pool.\n        int24 tick = getTick();\n        int24 maxThreshold = baseThreshold > limitThreshold ? baseThreshold : limitThreshold;\n        require(tick > TickMath.MIN_TICK + maxThreshold + tickSpacing, \"tick too low\");\n        require(tick < TickMath.MAX_TICK - maxThreshold - tickSpacing, \"tick too high\");\n\n        // Check price has not moved a lot recently. This mitigates price\n        // manipulation during rebalance and also prevents placing orders\n        // when it's too volatile.\n        int24 twap = getTwap();\n        int24 deviation = tick > twap ? tick - twap : twap - tick;\n        require(deviation <= maxTwapDeviation, \"maxTwapDeviation\");\n\n        int24 tickFloor = _floor(tick);\n        int24 tickCeil = tickFloor + tickSpacing;\n\n        vault.rebalance(\n            tickFloor - baseThreshold,\n            tickCeil + baseThreshold,\n            tickFloor - limitThreshold,\n            tickFloor,\n            tickCeil,\n            tickCeil + limitThreshold\n        );\n\n        lastRebalance = block.timestamp;\n        lastTick = tick;\n    }\n\n    /// @dev Fetches current price in ticks from Uniswap pool.\n    function getTick() public view returns (int24 tick) {\n        (, tick, , , , , ) = pool.slot0();\n    }\n\n    /// @dev Fetches time-weighted average price in ticks from Uniswap pool.\n    function getTwap() public view returns (int24) {\n        uint32 _twapDuration = twapDuration;\n        uint32[] memory secondsAgo = new uint32[](2);\n        secondsAgo[0] = _twapDuration;\n        secondsAgo[1] = 0;\n\n        (int56[] memory tickCumulatives, ) = pool.observe(secondsAgo);\n        return int24((tickCumulatives[1] - tickCumulatives[0]) / _twapDuration);\n    }\n\n    /// @dev Rounds tick down towards negative infinity so that it's a multiple\n    /// of `tickSpacing`.\n    function _floor(int24 tick) internal view returns (int24) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--;\n        return compressed * tickSpacing;\n    }\n\n    function _checkThreshold(int24 threshold) internal view {\n        require(threshold > 0, \"threshold > 0\");\n        require(threshold < TickMath.MAX_TICK, \"threshold too high\");\n        require(threshold % tickSpacing == 0, \"threshold % tickSpacing\");\n    }\n\n    function setKeeper(address _keeper) external onlyGovernance {\n        keeper = _keeper;\n    }\n\n    function setBaseThreshold(int24 _baseThreshold) external onlyGovernance {\n        _checkThreshold(_baseThreshold);\n        baseThreshold = _baseThreshold;\n    }\n\n    function setLimitThreshold(int24 _limitThreshold) external onlyGovernance {\n        _checkThreshold(_limitThreshold);\n        limitThreshold = _limitThreshold;\n    }\n\n    function setMaxTwapDeviation(int24 _maxTwapDeviation) external onlyGovernance {\n        require(_maxTwapDeviation >= 0, \"maxTwapDeviation\");\n        maxTwapDeviation = _maxTwapDeviation;\n    }\n\n    function setTwapDuration(uint32 _twapDuration) external onlyGovernance {\n        require(_twapDuration > 0, \"twapDuration\");\n        twapDuration = _twapDuration;\n    }\n\n    /// @dev Uses same governance as underlying vault.\n    modifier onlyGovernance {\n        require(msg.sender == vault.governance(), \"governance\");\n        _;\n    }\n}\n",
  "sourceMap": "1333:5143:22:-:0;;;2070:743;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2070:743:22;;;;;;;;;;;;;;;;;;;;;;;;;2271:5;:26;;-1:-1:-1;;;;;;2271:26:22;-1:-1:-1;;;;;2271:26:22;;;;;;;;;;;2314:12;;-1:-1:-1;;;2314:12:22;;;;2070:743;;;;;;;;;;;2314:5;;;:10;;:12;;;;;;;;;;;:5;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2314:12:22;2307:4;:19;;-1:-1:-1;;;;;;2307:19:22;-1:-1:-1;;;;;2307:19:22;;;;;;;;2350:18;;;-1:-1:-1;;;2350:18:22;;;;:4;;;;;:16;;:18;;;;;2314:12;;2350:18;;;;;;;:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2350:18:22;2336:11;:32;;-1:-1:-1;;;;2336:32:22;-1:-1:-1;;;2336:32:22;;;;;;;;;;;;;;;;-1:-1:-1;;;;2379:30:22;-1:-1:-1;;;2379:30:22;;;;;;;-1:-1:-1;;;;2419:32:22;-1:-1:-1;;;2419:32:22;;;;;;;-1:-1:-1;;;;;2461:36:22;-1:-1:-1;;;2461:36:22;;;;;;;;;;;;;;2507:28;;-1:-1:-1;;2507:28:22;;;;;-1:-1:-1;;;;;;;;2545:16:22;;-1:-1:-1;;;;;2545:16:22;;;;;;2572:31;2379:30;2572:15;:31::i;:::-;2613:32;2629:15;2613;:32::i;:::-;2684:1;2663:17;:22;;;;2655:51;;;;;-1:-1:-1;;;2655:51:22;;;;;;;;;;;;-1:-1:-1;;;2655:51:22;;;;;;;;;;;;;;;2740:1;2724:13;:17;;;2716:42;;;;;-1:-1:-1;;;2716:42:22;;;;;;;;;;;;-1:-1:-1;;;2716:42:22;;;;;;;;;;;;;;;2794:4;;;;;;;;;-1:-1:-1;;;;;2794:4:22;-1:-1:-1;;;;;2794:10:22;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2794:12:22;;;2772:8;2769:37;;;;;;;;;-1:-1:-1;;2769:37:22;;;;;;;;;-1:-1:-1;1333:5143:22;;-1:-1:-1;;;;;1333:5143:22;5242:256;5328:1;5316:9;:13;;;5308:39;;;;;-1:-1:-1;;;5308:39:22;;;;;;;;;;;;-1:-1:-1;;;5308:39:22;;;;;;;;;;;;;;;637:9:19;5365:29:22;;;;;5357:60;;;;;-1:-1:-1;;;5357:60:22;;;;;;;;;;;;-1:-1:-1;;;5357:60:22;;;;;;;;;;;;;;;5447:11;;-1:-1:-1;;;5447:11:22;;;;;;5435:23;;;;;;;;;;;;:28;;;5427:64;;;;;-1:-1:-1;;;5427:64:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;5242:256;:::o;1333:5143::-;;;;;;;",
  "sourcePath": "contracts/AlphaStrategy.sol",
  "type": "contract"
}